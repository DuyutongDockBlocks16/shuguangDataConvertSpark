// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd.proto

package cn.jj.simulation.pb_new;

public final class Cmd {
  private Cmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code shuguang.CmdType}
   */
  public enum CmdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMAND_NONE = 0;</code>
     */
    COMMAND_NONE(0),
    /**
     * <pre>
     * 指定目标移动
     * </pre>
     *
     * <code>COMMAND_MOVEPOS = 1;</code>
     */
    COMMAND_MOVEPOS(1),
    /**
     * <pre>
     * 指定方向移动
     * </pre>
     *
     * <code>COMMAND_MOVEDIR = 2;</code>
     */
    COMMAND_MOVEDIR(2),
    /**
     * <pre>
     * 停止移动
     * </pre>
     *
     * <code>COMMAND_MOVESTOP = 3;</code>
     */
    COMMAND_MOVESTOP(3),
    /**
     * <pre>
     * 普通攻击
     * </pre>
     *
     * <code>COMMAND_ATTACKCOMMON = 4;</code>
     */
    COMMAND_ATTACKCOMMON(4),
    /**
     * <pre>
     * 对目标施法
     * </pre>
     *
     * <code>COMMAND_OBJABILITY = 5;</code>
     */
    COMMAND_OBJABILITY(5),
    /**
     * <pre>
     * 方向性施法
     * </pre>
     *
     * <code>COMMAND_DIRABILITY = 6;</code>
     */
    COMMAND_DIRABILITY(6),
    /**
     * <pre>
     * 对位置施法
     * </pre>
     *
     * <code>COMMAND_POSABILITY = 7;</code>
     */
    COMMAND_POSABILITY(7),
    /**
     * <pre>
     * 升级技能
     * </pre>
     *
     * <code>COMMAND_LEVELUPABILITY = 8;</code>
     */
    COMMAND_LEVELUPABILITY(8),
    /**
     * <pre>
     * 购买装备
     * </pre>
     *
     * <code>COMMAND_PURCHASEQUIPT = 9;</code>
     */
    COMMAND_PURCHASEQUIPT(9),
    /**
     * <pre>
     * 出售装备
     * </pre>
     *
     * <code>COMMAND_SELLEQUIPT = 10;</code>
     */
    COMMAND_SELLEQUIPT(10),
    /**
     * <pre>
     * 治疗
     * </pre>
     *
     * <code>COMMAND_HEAL = 11;</code>
     */
    COMMAND_HEAL(11),
    /**
     * <pre>
     * 回城
     * </pre>
     *
     * <code>COMMAND_TELEPORT = 12;</code>
     */
    COMMAND_TELEPORT(12),
    /**
     * <pre>
     * 战斗技能
     * </pre>
     *
     * <code>COMMAND_BATTLE_SKILL = 13;</code>
     */
    COMMAND_BATTLE_SKILL(13),
    /**
     * <pre>
     * 装备技能
     * </pre>
     *
     * <code>COMMAND_EQUIP_SKILL = 14;</code>
     */
    COMMAND_EQUIP_SKILL(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COMMAND_NONE = 0;</code>
     */
    public static final int COMMAND_NONE_VALUE = 0;
    /**
     * <pre>
     * 指定目标移动
     * </pre>
     *
     * <code>COMMAND_MOVEPOS = 1;</code>
     */
    public static final int COMMAND_MOVEPOS_VALUE = 1;
    /**
     * <pre>
     * 指定方向移动
     * </pre>
     *
     * <code>COMMAND_MOVEDIR = 2;</code>
     */
    public static final int COMMAND_MOVEDIR_VALUE = 2;
    /**
     * <pre>
     * 停止移动
     * </pre>
     *
     * <code>COMMAND_MOVESTOP = 3;</code>
     */
    public static final int COMMAND_MOVESTOP_VALUE = 3;
    /**
     * <pre>
     * 普通攻击
     * </pre>
     *
     * <code>COMMAND_ATTACKCOMMON = 4;</code>
     */
    public static final int COMMAND_ATTACKCOMMON_VALUE = 4;
    /**
     * <pre>
     * 对目标施法
     * </pre>
     *
     * <code>COMMAND_OBJABILITY = 5;</code>
     */
    public static final int COMMAND_OBJABILITY_VALUE = 5;
    /**
     * <pre>
     * 方向性施法
     * </pre>
     *
     * <code>COMMAND_DIRABILITY = 6;</code>
     */
    public static final int COMMAND_DIRABILITY_VALUE = 6;
    /**
     * <pre>
     * 对位置施法
     * </pre>
     *
     * <code>COMMAND_POSABILITY = 7;</code>
     */
    public static final int COMMAND_POSABILITY_VALUE = 7;
    /**
     * <pre>
     * 升级技能
     * </pre>
     *
     * <code>COMMAND_LEVELUPABILITY = 8;</code>
     */
    public static final int COMMAND_LEVELUPABILITY_VALUE = 8;
    /**
     * <pre>
     * 购买装备
     * </pre>
     *
     * <code>COMMAND_PURCHASEQUIPT = 9;</code>
     */
    public static final int COMMAND_PURCHASEQUIPT_VALUE = 9;
    /**
     * <pre>
     * 出售装备
     * </pre>
     *
     * <code>COMMAND_SELLEQUIPT = 10;</code>
     */
    public static final int COMMAND_SELLEQUIPT_VALUE = 10;
    /**
     * <pre>
     * 治疗
     * </pre>
     *
     * <code>COMMAND_HEAL = 11;</code>
     */
    public static final int COMMAND_HEAL_VALUE = 11;
    /**
     * <pre>
     * 回城
     * </pre>
     *
     * <code>COMMAND_TELEPORT = 12;</code>
     */
    public static final int COMMAND_TELEPORT_VALUE = 12;
    /**
     * <pre>
     * 战斗技能
     * </pre>
     *
     * <code>COMMAND_BATTLE_SKILL = 13;</code>
     */
    public static final int COMMAND_BATTLE_SKILL_VALUE = 13;
    /**
     * <pre>
     * 装备技能
     * </pre>
     *
     * <code>COMMAND_EQUIP_SKILL = 14;</code>
     */
    public static final int COMMAND_EQUIP_SKILL_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CmdType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CmdType forNumber(int value) {
      switch (value) {
        case 0: return COMMAND_NONE;
        case 1: return COMMAND_MOVEPOS;
        case 2: return COMMAND_MOVEDIR;
        case 3: return COMMAND_MOVESTOP;
        case 4: return COMMAND_ATTACKCOMMON;
        case 5: return COMMAND_OBJABILITY;
        case 6: return COMMAND_DIRABILITY;
        case 7: return COMMAND_POSABILITY;
        case 8: return COMMAND_LEVELUPABILITY;
        case 9: return COMMAND_PURCHASEQUIPT;
        case 10: return COMMAND_SELLEQUIPT;
        case 11: return COMMAND_HEAL;
        case 12: return COMMAND_TELEPORT;
        case 13: return COMMAND_BATTLE_SKILL;
        case 14: return COMMAND_EQUIP_SKILL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CmdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CmdType>() {
            public CmdType findValueByNumber(int number) {
              return CmdType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Cmd.getDescriptor().getEnumTypes().get(0);
    }

    private static final CmdType[] VALUES = values();

    public static CmdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CmdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuguang.CmdType)
  }

  /**
   * Protobuf enum {@code shuguang.ResultCmdType}
   */
  public enum ResultCmdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESULT_COMMAND_MOVEDIR = 0;</code>
     */
    RESULT_COMMAND_MOVEDIR(0),
    /**
     * <code>RESULT_COMMAND_MOVESTOP = 1;</code>
     */
    RESULT_COMMAND_MOVESTOP(1),
    /**
     * <code>RESULT_COMMAND_ATTACKCOMMON = 2;</code>
     */
    RESULT_COMMAND_ATTACKCOMMON(2),
    /**
     * <code>RESULT_COMMAND_AUTO_ATTACK = 3;</code>
     */
    RESULT_COMMAND_AUTO_ATTACK(3),
    /**
     * <code>RESULT_COMMAND_LEVELUPABILITY = 5;</code>
     */
    RESULT_COMMAND_LEVELUPABILITY(5),
    /**
     * <code>RESULT_COMMAND_PURCHASEQUIPT = 6;</code>
     */
    RESULT_COMMAND_PURCHASEQUIPT(6),
    /**
     * <code>RESULT_COMMAND_SELLEQUIPT = 7;</code>
     */
    RESULT_COMMAND_SELLEQUIPT(7),
    /**
     * <code>RESULT_COMMAND_HOLDING = 8;</code>
     */
    RESULT_COMMAND_HOLDING(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RESULT_COMMAND_MOVEDIR = 0;</code>
     */
    public static final int RESULT_COMMAND_MOVEDIR_VALUE = 0;
    /**
     * <code>RESULT_COMMAND_MOVESTOP = 1;</code>
     */
    public static final int RESULT_COMMAND_MOVESTOP_VALUE = 1;
    /**
     * <code>RESULT_COMMAND_ATTACKCOMMON = 2;</code>
     */
    public static final int RESULT_COMMAND_ATTACKCOMMON_VALUE = 2;
    /**
     * <code>RESULT_COMMAND_AUTO_ATTACK = 3;</code>
     */
    public static final int RESULT_COMMAND_AUTO_ATTACK_VALUE = 3;
    /**
     * <code>RESULT_COMMAND_LEVELUPABILITY = 5;</code>
     */
    public static final int RESULT_COMMAND_LEVELUPABILITY_VALUE = 5;
    /**
     * <code>RESULT_COMMAND_PURCHASEQUIPT = 6;</code>
     */
    public static final int RESULT_COMMAND_PURCHASEQUIPT_VALUE = 6;
    /**
     * <code>RESULT_COMMAND_SELLEQUIPT = 7;</code>
     */
    public static final int RESULT_COMMAND_SELLEQUIPT_VALUE = 7;
    /**
     * <code>RESULT_COMMAND_HOLDING = 8;</code>
     */
    public static final int RESULT_COMMAND_HOLDING_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ResultCmdType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResultCmdType forNumber(int value) {
      switch (value) {
        case 0: return RESULT_COMMAND_MOVEDIR;
        case 1: return RESULT_COMMAND_MOVESTOP;
        case 2: return RESULT_COMMAND_ATTACKCOMMON;
        case 3: return RESULT_COMMAND_AUTO_ATTACK;
        case 5: return RESULT_COMMAND_LEVELUPABILITY;
        case 6: return RESULT_COMMAND_PURCHASEQUIPT;
        case 7: return RESULT_COMMAND_SELLEQUIPT;
        case 8: return RESULT_COMMAND_HOLDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultCmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultCmdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultCmdType>() {
            public ResultCmdType findValueByNumber(int number) {
              return ResultCmdType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Cmd.getDescriptor().getEnumTypes().get(1);
    }

    private static final ResultCmdType[] VALUES = values();

    public static ResultCmdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResultCmdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuguang.ResultCmdType)
  }

  public interface MsgCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgCmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The type.
     */
    ResultCmdType getType();

    /**
     * <pre>
     * 技能id
     * </pre>
     *
     * <code>int32 abilityID = 2;</code>
     * @return The abilityID.
     */
    int getAbilityID();

    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosX = 4;</code>
     * @return The targetPosX.
     */
    int getTargetPosX();

    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosY = 5;</code>
     * @return The targetPosY.
     */
    int getTargetPosY();

    /**
     * <pre>
     * 攻击的目标ID
     * </pre>
     *
     * <code>int64 targeID = 6;</code>
     * @return The targeID.
     */
    long getTargeID();

    /**
     * <pre>
     * 施法角度
     * </pre>
     *
     * <code>int32 degreeX = 7;</code>
     * @return The degreeX.
     */
    int getDegreeX();

    /**
     * <pre>
     * 施法角度
     * </pre>
     *
     * <code>int32 degreeY = 8;</code>
     * @return The degreeY.
     */
    int getDegreeY();

    /**
     * <pre>
     * 装备ID
     * </pre>
     *
     * <code>int32 equiptId = 9;</code>
     * @return The equiptId.
     */
    int getEquiptId();

    /**
     * <pre>
     * move角度
     * </pre>
     *
     * <code>int32 angle = 10;</code>
     * @return The angle.
     */
    int getAngle();

    /**
     * <pre>
     * 技能等级
     * </pre>
     *
     * <code>int32 skillLevel = 11;</code>
     * @return The skillLevel.
     */
    int getSkillLevel();
  }
  /**
   * <pre>
   * 命令，根据不同的命令按需填充值
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgCmd}
   */
  public static final class MsgCmd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgCmd)
      MsgCmdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgCmd.newBuilder() to construct.
    private MsgCmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgCmd() {
      type_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgCmd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgCmd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              abilityID_ = input.readInt32();
              break;
            }
            case 32: {

              targetPosX_ = input.readInt32();
              break;
            }
            case 40: {

              targetPosY_ = input.readInt32();
              break;
            }
            case 48: {

              targeID_ = input.readInt64();
              break;
            }
            case 56: {

              degreeX_ = input.readInt32();
              break;
            }
            case 64: {

              degreeY_ = input.readInt32();
              break;
            }
            case 72: {

              equiptId_ = input.readInt32();
              break;
            }
            case 80: {

              angle_ = input.readInt32();
              break;
            }
            case 88: {

              skillLevel_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Cmd.internal_static_shuguang_MsgCmd_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Cmd.internal_static_shuguang_MsgCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgCmd.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The type.
     */
    @Override public ResultCmdType getType() {
      @SuppressWarnings("deprecation")
      ResultCmdType result = ResultCmdType.valueOf(type_);
      return result == null ? ResultCmdType.UNRECOGNIZED : result;
    }

    public static final int ABILITYID_FIELD_NUMBER = 2;
    private int abilityID_;
    /**
     * <pre>
     * 技能id
     * </pre>
     *
     * <code>int32 abilityID = 2;</code>
     * @return The abilityID.
     */
    @Override
    public int getAbilityID() {
      return abilityID_;
    }

    public static final int TARGETPOSX_FIELD_NUMBER = 4;
    private int targetPosX_;
    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosX = 4;</code>
     * @return The targetPosX.
     */
    @Override
    public int getTargetPosX() {
      return targetPosX_;
    }

    public static final int TARGETPOSY_FIELD_NUMBER = 5;
    private int targetPosY_;
    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosY = 5;</code>
     * @return The targetPosY.
     */
    @Override
    public int getTargetPosY() {
      return targetPosY_;
    }

    public static final int TARGEID_FIELD_NUMBER = 6;
    private long targeID_;
    /**
     * <pre>
     * 攻击的目标ID
     * </pre>
     *
     * <code>int64 targeID = 6;</code>
     * @return The targeID.
     */
    @Override
    public long getTargeID() {
      return targeID_;
    }

    public static final int DEGREEX_FIELD_NUMBER = 7;
    private int degreeX_;
    /**
     * <pre>
     * 施法角度
     * </pre>
     *
     * <code>int32 degreeX = 7;</code>
     * @return The degreeX.
     */
    @Override
    public int getDegreeX() {
      return degreeX_;
    }

    public static final int DEGREEY_FIELD_NUMBER = 8;
    private int degreeY_;
    /**
     * <pre>
     * 施法角度
     * </pre>
     *
     * <code>int32 degreeY = 8;</code>
     * @return The degreeY.
     */
    @Override
    public int getDegreeY() {
      return degreeY_;
    }

    public static final int EQUIPTID_FIELD_NUMBER = 9;
    private int equiptId_;
    /**
     * <pre>
     * 装备ID
     * </pre>
     *
     * <code>int32 equiptId = 9;</code>
     * @return The equiptId.
     */
    @Override
    public int getEquiptId() {
      return equiptId_;
    }

    public static final int ANGLE_FIELD_NUMBER = 10;
    private int angle_;
    /**
     * <pre>
     * move角度
     * </pre>
     *
     * <code>int32 angle = 10;</code>
     * @return The angle.
     */
    @Override
    public int getAngle() {
      return angle_;
    }

    public static final int SKILLLEVEL_FIELD_NUMBER = 11;
    private int skillLevel_;
    /**
     * <pre>
     * 技能等级
     * </pre>
     *
     * <code>int32 skillLevel = 11;</code>
     * @return The skillLevel.
     */
    @Override
    public int getSkillLevel() {
      return skillLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != ResultCmdType.RESULT_COMMAND_MOVEDIR.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (abilityID_ != 0) {
        output.writeInt32(2, abilityID_);
      }
      if (targetPosX_ != 0) {
        output.writeInt32(4, targetPosX_);
      }
      if (targetPosY_ != 0) {
        output.writeInt32(5, targetPosY_);
      }
      if (targeID_ != 0L) {
        output.writeInt64(6, targeID_);
      }
      if (degreeX_ != 0) {
        output.writeInt32(7, degreeX_);
      }
      if (degreeY_ != 0) {
        output.writeInt32(8, degreeY_);
      }
      if (equiptId_ != 0) {
        output.writeInt32(9, equiptId_);
      }
      if (angle_ != 0) {
        output.writeInt32(10, angle_);
      }
      if (skillLevel_ != 0) {
        output.writeInt32(11, skillLevel_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != ResultCmdType.RESULT_COMMAND_MOVEDIR.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (abilityID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, abilityID_);
      }
      if (targetPosX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, targetPosX_);
      }
      if (targetPosY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, targetPosY_);
      }
      if (targeID_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, targeID_);
      }
      if (degreeX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, degreeX_);
      }
      if (degreeY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, degreeY_);
      }
      if (equiptId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, equiptId_);
      }
      if (angle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, angle_);
      }
      if (skillLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, skillLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgCmd)) {
        return super.equals(obj);
      }
      MsgCmd other = (MsgCmd) obj;

      if (type_ != other.type_) return false;
      if (getAbilityID()
          != other.getAbilityID()) return false;
      if (getTargetPosX()
          != other.getTargetPosX()) return false;
      if (getTargetPosY()
          != other.getTargetPosY()) return false;
      if (getTargeID()
          != other.getTargeID()) return false;
      if (getDegreeX()
          != other.getDegreeX()) return false;
      if (getDegreeY()
          != other.getDegreeY()) return false;
      if (getEquiptId()
          != other.getEquiptId()) return false;
      if (getAngle()
          != other.getAngle()) return false;
      if (getSkillLevel()
          != other.getSkillLevel()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ABILITYID_FIELD_NUMBER;
      hash = (53 * hash) + getAbilityID();
      hash = (37 * hash) + TARGETPOSX_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPosX();
      hash = (37 * hash) + TARGETPOSY_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPosY();
      hash = (37 * hash) + TARGEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTargeID());
      hash = (37 * hash) + DEGREEX_FIELD_NUMBER;
      hash = (53 * hash) + getDegreeX();
      hash = (37 * hash) + DEGREEY_FIELD_NUMBER;
      hash = (53 * hash) + getDegreeY();
      hash = (37 * hash) + EQUIPTID_FIELD_NUMBER;
      hash = (53 * hash) + getEquiptId();
      hash = (37 * hash) + ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + getAngle();
      hash = (37 * hash) + SKILLLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getSkillLevel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgCmd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCmd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 命令，根据不同的命令按需填充值
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgCmd)
        MsgCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Cmd.internal_static_shuguang_MsgCmd_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Cmd.internal_static_shuguang_MsgCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgCmd.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Cmd.MsgCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        abilityID_ = 0;

        targetPosX_ = 0;

        targetPosY_ = 0;

        targeID_ = 0L;

        degreeX_ = 0;

        degreeY_ = 0;

        equiptId_ = 0;

        angle_ = 0;

        skillLevel_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Cmd.internal_static_shuguang_MsgCmd_descriptor;
      }

      @Override
      public MsgCmd getDefaultInstanceForType() {
        return MsgCmd.getDefaultInstance();
      }

      @Override
      public MsgCmd build() {
        MsgCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgCmd buildPartial() {
        MsgCmd result = new MsgCmd(this);
        result.type_ = type_;
        result.abilityID_ = abilityID_;
        result.targetPosX_ = targetPosX_;
        result.targetPosY_ = targetPosY_;
        result.targeID_ = targeID_;
        result.degreeX_ = degreeX_;
        result.degreeY_ = degreeY_;
        result.equiptId_ = equiptId_;
        result.angle_ = angle_;
        result.skillLevel_ = skillLevel_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgCmd) {
          return mergeFrom((MsgCmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgCmd other) {
        if (other == MsgCmd.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getAbilityID() != 0) {
          setAbilityID(other.getAbilityID());
        }
        if (other.getTargetPosX() != 0) {
          setTargetPosX(other.getTargetPosX());
        }
        if (other.getTargetPosY() != 0) {
          setTargetPosY(other.getTargetPosY());
        }
        if (other.getTargeID() != 0L) {
          setTargeID(other.getTargeID());
        }
        if (other.getDegreeX() != 0) {
          setDegreeX(other.getDegreeX());
        }
        if (other.getDegreeY() != 0) {
          setDegreeY(other.getDegreeY());
        }
        if (other.getEquiptId() != 0) {
          setEquiptId(other.getEquiptId());
        }
        if (other.getAngle() != 0) {
          setAngle(other.getAngle());
        }
        if (other.getSkillLevel() != 0) {
          setSkillLevel(other.getSkillLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgCmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgCmd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return The type.
       */
      @Override
      public ResultCmdType getType() {
        @SuppressWarnings("deprecation")
        ResultCmdType result = ResultCmdType.valueOf(type_);
        return result == null ? ResultCmdType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(ResultCmdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int abilityID_ ;
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 abilityID = 2;</code>
       * @return The abilityID.
       */
      @Override
      public int getAbilityID() {
        return abilityID_;
      }
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 abilityID = 2;</code>
       * @param value The abilityID to set.
       * @return This builder for chaining.
       */
      public Builder setAbilityID(int value) {
        
        abilityID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 abilityID = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAbilityID() {
        
        abilityID_ = 0;
        onChanged();
        return this;
      }

      private int targetPosX_ ;
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 4;</code>
       * @return The targetPosX.
       */
      @Override
      public int getTargetPosX() {
        return targetPosX_;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 4;</code>
       * @param value The targetPosX to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPosX(int value) {
        
        targetPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPosX() {
        
        targetPosX_ = 0;
        onChanged();
        return this;
      }

      private int targetPosY_ ;
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 5;</code>
       * @return The targetPosY.
       */
      @Override
      public int getTargetPosY() {
        return targetPosY_;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 5;</code>
       * @param value The targetPosY to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPosY(int value) {
        
        targetPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPosY() {
        
        targetPosY_ = 0;
        onChanged();
        return this;
      }

      private long targeID_ ;
      /**
       * <pre>
       * 攻击的目标ID
       * </pre>
       *
       * <code>int64 targeID = 6;</code>
       * @return The targeID.
       */
      @Override
      public long getTargeID() {
        return targeID_;
      }
      /**
       * <pre>
       * 攻击的目标ID
       * </pre>
       *
       * <code>int64 targeID = 6;</code>
       * @param value The targeID to set.
       * @return This builder for chaining.
       */
      public Builder setTargeID(long value) {
        
        targeID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击的目标ID
       * </pre>
       *
       * <code>int64 targeID = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargeID() {
        
        targeID_ = 0L;
        onChanged();
        return this;
      }

      private int degreeX_ ;
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeX = 7;</code>
       * @return The degreeX.
       */
      @Override
      public int getDegreeX() {
        return degreeX_;
      }
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeX = 7;</code>
       * @param value The degreeX to set.
       * @return This builder for chaining.
       */
      public Builder setDegreeX(int value) {
        
        degreeX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeX = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDegreeX() {
        
        degreeX_ = 0;
        onChanged();
        return this;
      }

      private int degreeY_ ;
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeY = 8;</code>
       * @return The degreeY.
       */
      @Override
      public int getDegreeY() {
        return degreeY_;
      }
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeY = 8;</code>
       * @param value The degreeY to set.
       * @return This builder for chaining.
       */
      public Builder setDegreeY(int value) {
        
        degreeY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 施法角度
       * </pre>
       *
       * <code>int32 degreeY = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDegreeY() {
        
        degreeY_ = 0;
        onChanged();
        return this;
      }

      private int equiptId_ ;
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 9;</code>
       * @return The equiptId.
       */
      @Override
      public int getEquiptId() {
        return equiptId_;
      }
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 9;</code>
       * @param value The equiptId to set.
       * @return This builder for chaining.
       */
      public Builder setEquiptId(int value) {
        
        equiptId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquiptId() {
        
        equiptId_ = 0;
        onChanged();
        return this;
      }

      private int angle_ ;
      /**
       * <pre>
       * move角度
       * </pre>
       *
       * <code>int32 angle = 10;</code>
       * @return The angle.
       */
      @Override
      public int getAngle() {
        return angle_;
      }
      /**
       * <pre>
       * move角度
       * </pre>
       *
       * <code>int32 angle = 10;</code>
       * @param value The angle to set.
       * @return This builder for chaining.
       */
      public Builder setAngle(int value) {
        
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * move角度
       * </pre>
       *
       * <code>int32 angle = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngle() {
        
        angle_ = 0;
        onChanged();
        return this;
      }

      private int skillLevel_ ;
      /**
       * <pre>
       * 技能等级
       * </pre>
       *
       * <code>int32 skillLevel = 11;</code>
       * @return The skillLevel.
       */
      @Override
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <pre>
       * 技能等级
       * </pre>
       *
       * <code>int32 skillLevel = 11;</code>
       * @param value The skillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setSkillLevel(int value) {
        
        skillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能等级
       * </pre>
       *
       * <code>int32 skillLevel = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillLevel() {
        
        skillLevel_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgCmd)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgCmd)
    private static final MsgCmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgCmd();
    }

    public static MsgCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgCmd>
        PARSER = new com.google.protobuf.AbstractParser<MsgCmd>() {
      @Override
      public MsgCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgCmd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgCmd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgCmd> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgCmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResultMsgCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.ResultMsgCmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The type.
     */
    ResultCmdType getType();

    /**
     * <pre>
     * 战场ID
     * </pre>
     *
     * <code>int64 battleID = 2;</code>
     * @return The battleID.
     */
    long getBattleID();

    /**
     * <pre>
     * 玩家唯一ID
     * </pre>
     *
     * <code>int64 luid = 3;</code>
     * @return The luid.
     */
    long getLuid();

    /**
     * <pre>
     * 英雄ID
     * </pre>
     *
     * <code>int32 heroID = 4;</code>
     * @return The heroID.
     */
    int getHeroID();

    /**
     * <pre>
     * 技能id
     * </pre>
     *
     * <code>int32 skillID = 5;</code>
     * @return The skillID.
     */
    int getSkillID();

    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosX = 6;</code>
     * @return The targetPosX.
     */
    int getTargetPosX();

    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosY = 7;</code>
     * @return The targetPosY.
     */
    int getTargetPosY();

    /**
     * <pre>
     * 攻击的目标的唯一ID
     * </pre>
     *
     * <code>int64 targeID = 8;</code>
     * @return The targeID.
     */
    long getTargeID();

    /**
     * <pre>
     * 施法方向或移动方向
     * </pre>
     *
     * <code>int32 directionX = 9;</code>
     * @return The directionX.
     */
    int getDirectionX();

    /**
     * <pre>
     * 施法方向或移动方向
     * </pre>
     *
     * <code>int32 directionY = 10;</code>
     * @return The directionY.
     */
    int getDirectionY();

    /**
     * <pre>
     * 装备ID
     * </pre>
     *
     * <code>int32 equiptId = 11;</code>
     * @return The equiptId.
     */
    int getEquiptId();

    /**
     * <pre>
     * 帧号
     * </pre>
     *
     * <code>int32 frameNo = 12;</code>
     * @return The frameNo.
     */
    int getFrameNo();

    /**
     * <pre>
     * 技能槽位置 
     * </pre>
     *
     * <code>int32 slot = 13;</code>
     * @return The slot.
     */
    int getSlot();

    /**
     * <pre>
     * 方向
     * </pre>
     *
     * <code>int32 direction = 14;</code>
     * @return The direction.
     */
    int getDirection();

    /**
     * <pre>
     * 升级等级
     * </pre>
     *
     * <code>int32 level = 15;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <pre>
     * 装备索引
     * </pre>
     *
     * <code>int32 index = 16;</code>
     * @return The index.
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code shuguang.ResultMsgCmd}
   */
  public static final class ResultMsgCmd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.ResultMsgCmd)
      ResultMsgCmdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResultMsgCmd.newBuilder() to construct.
    private ResultMsgCmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResultMsgCmd() {
      type_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResultMsgCmd();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResultMsgCmd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              battleID_ = input.readInt64();
              break;
            }
            case 24: {

              luid_ = input.readInt64();
              break;
            }
            case 32: {

              heroID_ = input.readInt32();
              break;
            }
            case 40: {

              skillID_ = input.readInt32();
              break;
            }
            case 48: {

              targetPosX_ = input.readInt32();
              break;
            }
            case 56: {

              targetPosY_ = input.readInt32();
              break;
            }
            case 64: {

              targeID_ = input.readInt64();
              break;
            }
            case 72: {

              directionX_ = input.readInt32();
              break;
            }
            case 80: {

              directionY_ = input.readInt32();
              break;
            }
            case 88: {

              equiptId_ = input.readInt32();
              break;
            }
            case 96: {

              frameNo_ = input.readInt32();
              break;
            }
            case 104: {

              slot_ = input.readInt32();
              break;
            }
            case 112: {

              direction_ = input.readInt32();
              break;
            }
            case 120: {

              level_ = input.readInt32();
              break;
            }
            case 128: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Cmd.internal_static_shuguang_ResultMsgCmd_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Cmd.internal_static_shuguang_ResultMsgCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ResultMsgCmd.class, Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 命令类型(必填)
     * </pre>
     *
     * <code>.shuguang.ResultCmdType type = 1;</code>
     * @return The type.
     */
    @Override public ResultCmdType getType() {
      @SuppressWarnings("deprecation")
      ResultCmdType result = ResultCmdType.valueOf(type_);
      return result == null ? ResultCmdType.UNRECOGNIZED : result;
    }

    public static final int BATTLEID_FIELD_NUMBER = 2;
    private long battleID_;
    /**
     * <pre>
     * 战场ID
     * </pre>
     *
     * <code>int64 battleID = 2;</code>
     * @return The battleID.
     */
    @Override
    public long getBattleID() {
      return battleID_;
    }

    public static final int LUID_FIELD_NUMBER = 3;
    private long luid_;
    /**
     * <pre>
     * 玩家唯一ID
     * </pre>
     *
     * <code>int64 luid = 3;</code>
     * @return The luid.
     */
    @Override
    public long getLuid() {
      return luid_;
    }

    public static final int HEROID_FIELD_NUMBER = 4;
    private int heroID_;
    /**
     * <pre>
     * 英雄ID
     * </pre>
     *
     * <code>int32 heroID = 4;</code>
     * @return The heroID.
     */
    @Override
    public int getHeroID() {
      return heroID_;
    }

    public static final int SKILLID_FIELD_NUMBER = 5;
    private int skillID_;
    /**
     * <pre>
     * 技能id
     * </pre>
     *
     * <code>int32 skillID = 5;</code>
     * @return The skillID.
     */
    @Override
    public int getSkillID() {
      return skillID_;
    }

    public static final int TARGETPOSX_FIELD_NUMBER = 6;
    private int targetPosX_;
    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosX = 6;</code>
     * @return The targetPosX.
     */
    @Override
    public int getTargetPosX() {
      return targetPosX_;
    }

    public static final int TARGETPOSY_FIELD_NUMBER = 7;
    private int targetPosY_;
    /**
     * <pre>
     * 目标移动或者移动施法的位置
     * </pre>
     *
     * <code>int32 targetPosY = 7;</code>
     * @return The targetPosY.
     */
    @Override
    public int getTargetPosY() {
      return targetPosY_;
    }

    public static final int TARGEID_FIELD_NUMBER = 8;
    private long targeID_;
    /**
     * <pre>
     * 攻击的目标的唯一ID
     * </pre>
     *
     * <code>int64 targeID = 8;</code>
     * @return The targeID.
     */
    @Override
    public long getTargeID() {
      return targeID_;
    }

    public static final int DIRECTIONX_FIELD_NUMBER = 9;
    private int directionX_;
    /**
     * <pre>
     * 施法方向或移动方向
     * </pre>
     *
     * <code>int32 directionX = 9;</code>
     * @return The directionX.
     */
    @Override
    public int getDirectionX() {
      return directionX_;
    }

    public static final int DIRECTIONY_FIELD_NUMBER = 10;
    private int directionY_;
    /**
     * <pre>
     * 施法方向或移动方向
     * </pre>
     *
     * <code>int32 directionY = 10;</code>
     * @return The directionY.
     */
    @Override
    public int getDirectionY() {
      return directionY_;
    }

    public static final int EQUIPTID_FIELD_NUMBER = 11;
    private int equiptId_;
    /**
     * <pre>
     * 装备ID
     * </pre>
     *
     * <code>int32 equiptId = 11;</code>
     * @return The equiptId.
     */
    @Override
    public int getEquiptId() {
      return equiptId_;
    }

    public static final int FRAMENO_FIELD_NUMBER = 12;
    private int frameNo_;
    /**
     * <pre>
     * 帧号
     * </pre>
     *
     * <code>int32 frameNo = 12;</code>
     * @return The frameNo.
     */
    @Override
    public int getFrameNo() {
      return frameNo_;
    }

    public static final int SLOT_FIELD_NUMBER = 13;
    private int slot_;
    /**
     * <pre>
     * 技能槽位置 
     * </pre>
     *
     * <code>int32 slot = 13;</code>
     * @return The slot.
     */
    @Override
    public int getSlot() {
      return slot_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 14;
    private int direction_;
    /**
     * <pre>
     * 方向
     * </pre>
     *
     * <code>int32 direction = 14;</code>
     * @return The direction.
     */
    @Override
    public int getDirection() {
      return direction_;
    }

    public static final int LEVEL_FIELD_NUMBER = 15;
    private int level_;
    /**
     * <pre>
     * 升级等级
     * </pre>
     *
     * <code>int32 level = 15;</code>
     * @return The level.
     */
    @Override
    public int getLevel() {
      return level_;
    }

    public static final int INDEX_FIELD_NUMBER = 16;
    private int index_;
    /**
     * <pre>
     * 装备索引
     * </pre>
     *
     * <code>int32 index = 16;</code>
     * @return The index.
     */
    @Override
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != ResultCmdType.RESULT_COMMAND_MOVEDIR.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (battleID_ != 0L) {
        output.writeInt64(2, battleID_);
      }
      if (luid_ != 0L) {
        output.writeInt64(3, luid_);
      }
      if (heroID_ != 0) {
        output.writeInt32(4, heroID_);
      }
      if (skillID_ != 0) {
        output.writeInt32(5, skillID_);
      }
      if (targetPosX_ != 0) {
        output.writeInt32(6, targetPosX_);
      }
      if (targetPosY_ != 0) {
        output.writeInt32(7, targetPosY_);
      }
      if (targeID_ != 0L) {
        output.writeInt64(8, targeID_);
      }
      if (directionX_ != 0) {
        output.writeInt32(9, directionX_);
      }
      if (directionY_ != 0) {
        output.writeInt32(10, directionY_);
      }
      if (equiptId_ != 0) {
        output.writeInt32(11, equiptId_);
      }
      if (frameNo_ != 0) {
        output.writeInt32(12, frameNo_);
      }
      if (slot_ != 0) {
        output.writeInt32(13, slot_);
      }
      if (direction_ != 0) {
        output.writeInt32(14, direction_);
      }
      if (level_ != 0) {
        output.writeInt32(15, level_);
      }
      if (index_ != 0) {
        output.writeInt32(16, index_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != ResultCmdType.RESULT_COMMAND_MOVEDIR.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (battleID_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, battleID_);
      }
      if (luid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, luid_);
      }
      if (heroID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, heroID_);
      }
      if (skillID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, skillID_);
      }
      if (targetPosX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, targetPosX_);
      }
      if (targetPosY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, targetPosY_);
      }
      if (targeID_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, targeID_);
      }
      if (directionX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, directionX_);
      }
      if (directionY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, directionY_);
      }
      if (equiptId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, equiptId_);
      }
      if (frameNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, frameNo_);
      }
      if (slot_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, slot_);
      }
      if (direction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, direction_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, level_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ResultMsgCmd)) {
        return super.equals(obj);
      }
      ResultMsgCmd other = (ResultMsgCmd) obj;

      if (type_ != other.type_) return false;
      if (getBattleID()
          != other.getBattleID()) return false;
      if (getLuid()
          != other.getLuid()) return false;
      if (getHeroID()
          != other.getHeroID()) return false;
      if (getSkillID()
          != other.getSkillID()) return false;
      if (getTargetPosX()
          != other.getTargetPosX()) return false;
      if (getTargetPosY()
          != other.getTargetPosY()) return false;
      if (getTargeID()
          != other.getTargeID()) return false;
      if (getDirectionX()
          != other.getDirectionX()) return false;
      if (getDirectionY()
          != other.getDirectionY()) return false;
      if (getEquiptId()
          != other.getEquiptId()) return false;
      if (getFrameNo()
          != other.getFrameNo()) return false;
      if (getSlot()
          != other.getSlot()) return false;
      if (getDirection()
          != other.getDirection()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + BATTLEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBattleID());
      hash = (37 * hash) + LUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLuid());
      hash = (37 * hash) + HEROID_FIELD_NUMBER;
      hash = (53 * hash) + getHeroID();
      hash = (37 * hash) + SKILLID_FIELD_NUMBER;
      hash = (53 * hash) + getSkillID();
      hash = (37 * hash) + TARGETPOSX_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPosX();
      hash = (37 * hash) + TARGETPOSY_FIELD_NUMBER;
      hash = (53 * hash) + getTargetPosY();
      hash = (37 * hash) + TARGEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTargeID());
      hash = (37 * hash) + DIRECTIONX_FIELD_NUMBER;
      hash = (53 * hash) + getDirectionX();
      hash = (37 * hash) + DIRECTIONY_FIELD_NUMBER;
      hash = (53 * hash) + getDirectionY();
      hash = (37 * hash) + EQUIPTID_FIELD_NUMBER;
      hash = (53 * hash) + getEquiptId();
      hash = (37 * hash) + FRAMENO_FIELD_NUMBER;
      hash = (53 * hash) + getFrameNo();
      hash = (37 * hash) + SLOT_FIELD_NUMBER;
      hash = (53 * hash) + getSlot();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getDirection();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ResultMsgCmd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ResultMsgCmd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ResultMsgCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ResultMsgCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ResultMsgCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ResultMsgCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ResultMsgCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ResultMsgCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ResultMsgCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ResultMsgCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ResultMsgCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ResultMsgCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ResultMsgCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.ResultMsgCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.ResultMsgCmd)
        ResultMsgCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Cmd.internal_static_shuguang_ResultMsgCmd_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Cmd.internal_static_shuguang_ResultMsgCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ResultMsgCmd.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Cmd.ResultMsgCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        battleID_ = 0L;

        luid_ = 0L;

        heroID_ = 0;

        skillID_ = 0;

        targetPosX_ = 0;

        targetPosY_ = 0;

        targeID_ = 0L;

        directionX_ = 0;

        directionY_ = 0;

        equiptId_ = 0;

        frameNo_ = 0;

        slot_ = 0;

        direction_ = 0;

        level_ = 0;

        index_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Cmd.internal_static_shuguang_ResultMsgCmd_descriptor;
      }

      @Override
      public ResultMsgCmd getDefaultInstanceForType() {
        return ResultMsgCmd.getDefaultInstance();
      }

      @Override
      public ResultMsgCmd build() {
        ResultMsgCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public ResultMsgCmd buildPartial() {
        ResultMsgCmd result = new ResultMsgCmd(this);
        result.type_ = type_;
        result.battleID_ = battleID_;
        result.luid_ = luid_;
        result.heroID_ = heroID_;
        result.skillID_ = skillID_;
        result.targetPosX_ = targetPosX_;
        result.targetPosY_ = targetPosY_;
        result.targeID_ = targeID_;
        result.directionX_ = directionX_;
        result.directionY_ = directionY_;
        result.equiptId_ = equiptId_;
        result.frameNo_ = frameNo_;
        result.slot_ = slot_;
        result.direction_ = direction_;
        result.level_ = level_;
        result.index_ = index_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ResultMsgCmd) {
          return mergeFrom((ResultMsgCmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ResultMsgCmd other) {
        if (other == ResultMsgCmd.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getBattleID() != 0L) {
          setBattleID(other.getBattleID());
        }
        if (other.getLuid() != 0L) {
          setLuid(other.getLuid());
        }
        if (other.getHeroID() != 0) {
          setHeroID(other.getHeroID());
        }
        if (other.getSkillID() != 0) {
          setSkillID(other.getSkillID());
        }
        if (other.getTargetPosX() != 0) {
          setTargetPosX(other.getTargetPosX());
        }
        if (other.getTargetPosY() != 0) {
          setTargetPosY(other.getTargetPosY());
        }
        if (other.getTargeID() != 0L) {
          setTargeID(other.getTargeID());
        }
        if (other.getDirectionX() != 0) {
          setDirectionX(other.getDirectionX());
        }
        if (other.getDirectionY() != 0) {
          setDirectionY(other.getDirectionY());
        }
        if (other.getEquiptId() != 0) {
          setEquiptId(other.getEquiptId());
        }
        if (other.getFrameNo() != 0) {
          setFrameNo(other.getFrameNo());
        }
        if (other.getSlot() != 0) {
          setSlot(other.getSlot());
        }
        if (other.getDirection() != 0) {
          setDirection(other.getDirection());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ResultMsgCmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ResultMsgCmd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return The type.
       */
      @Override
      public ResultCmdType getType() {
        @SuppressWarnings("deprecation")
        ResultCmdType result = ResultCmdType.valueOf(type_);
        return result == null ? ResultCmdType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(ResultCmdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令类型(必填)
       * </pre>
       *
       * <code>.shuguang.ResultCmdType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long battleID_ ;
      /**
       * <pre>
       * 战场ID
       * </pre>
       *
       * <code>int64 battleID = 2;</code>
       * @return The battleID.
       */
      @Override
      public long getBattleID() {
        return battleID_;
      }
      /**
       * <pre>
       * 战场ID
       * </pre>
       *
       * <code>int64 battleID = 2;</code>
       * @param value The battleID to set.
       * @return This builder for chaining.
       */
      public Builder setBattleID(long value) {
        
        battleID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 战场ID
       * </pre>
       *
       * <code>int64 battleID = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBattleID() {
        
        battleID_ = 0L;
        onChanged();
        return this;
      }

      private long luid_ ;
      /**
       * <pre>
       * 玩家唯一ID
       * </pre>
       *
       * <code>int64 luid = 3;</code>
       * @return The luid.
       */
      @Override
      public long getLuid() {
        return luid_;
      }
      /**
       * <pre>
       * 玩家唯一ID
       * </pre>
       *
       * <code>int64 luid = 3;</code>
       * @param value The luid to set.
       * @return This builder for chaining.
       */
      public Builder setLuid(long value) {
        
        luid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家唯一ID
       * </pre>
       *
       * <code>int64 luid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLuid() {
        
        luid_ = 0L;
        onChanged();
        return this;
      }

      private int heroID_ ;
      /**
       * <pre>
       * 英雄ID
       * </pre>
       *
       * <code>int32 heroID = 4;</code>
       * @return The heroID.
       */
      @Override
      public int getHeroID() {
        return heroID_;
      }
      /**
       * <pre>
       * 英雄ID
       * </pre>
       *
       * <code>int32 heroID = 4;</code>
       * @param value The heroID to set.
       * @return This builder for chaining.
       */
      public Builder setHeroID(int value) {
        
        heroID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 英雄ID
       * </pre>
       *
       * <code>int32 heroID = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroID() {
        
        heroID_ = 0;
        onChanged();
        return this;
      }

      private int skillID_ ;
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 skillID = 5;</code>
       * @return The skillID.
       */
      @Override
      public int getSkillID() {
        return skillID_;
      }
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 skillID = 5;</code>
       * @param value The skillID to set.
       * @return This builder for chaining.
       */
      public Builder setSkillID(int value) {
        
        skillID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能id
       * </pre>
       *
       * <code>int32 skillID = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillID() {
        
        skillID_ = 0;
        onChanged();
        return this;
      }

      private int targetPosX_ ;
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 6;</code>
       * @return The targetPosX.
       */
      @Override
      public int getTargetPosX() {
        return targetPosX_;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 6;</code>
       * @param value The targetPosX to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPosX(int value) {
        
        targetPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosX = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPosX() {
        
        targetPosX_ = 0;
        onChanged();
        return this;
      }

      private int targetPosY_ ;
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 7;</code>
       * @return The targetPosY.
       */
      @Override
      public int getTargetPosY() {
        return targetPosY_;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 7;</code>
       * @param value The targetPosY to set.
       * @return This builder for chaining.
       */
      public Builder setTargetPosY(int value) {
        
        targetPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 目标移动或者移动施法的位置
       * </pre>
       *
       * <code>int32 targetPosY = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetPosY() {
        
        targetPosY_ = 0;
        onChanged();
        return this;
      }

      private long targeID_ ;
      /**
       * <pre>
       * 攻击的目标的唯一ID
       * </pre>
       *
       * <code>int64 targeID = 8;</code>
       * @return The targeID.
       */
      @Override
      public long getTargeID() {
        return targeID_;
      }
      /**
       * <pre>
       * 攻击的目标的唯一ID
       * </pre>
       *
       * <code>int64 targeID = 8;</code>
       * @param value The targeID to set.
       * @return This builder for chaining.
       */
      public Builder setTargeID(long value) {
        
        targeID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击的目标的唯一ID
       * </pre>
       *
       * <code>int64 targeID = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargeID() {
        
        targeID_ = 0L;
        onChanged();
        return this;
      }

      private int directionX_ ;
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionX = 9;</code>
       * @return The directionX.
       */
      @Override
      public int getDirectionX() {
        return directionX_;
      }
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionX = 9;</code>
       * @param value The directionX to set.
       * @return This builder for chaining.
       */
      public Builder setDirectionX(int value) {
        
        directionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionX = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectionX() {
        
        directionX_ = 0;
        onChanged();
        return this;
      }

      private int directionY_ ;
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionY = 10;</code>
       * @return The directionY.
       */
      @Override
      public int getDirectionY() {
        return directionY_;
      }
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionY = 10;</code>
       * @param value The directionY to set.
       * @return This builder for chaining.
       */
      public Builder setDirectionY(int value) {
        
        directionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 施法方向或移动方向
       * </pre>
       *
       * <code>int32 directionY = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectionY() {
        
        directionY_ = 0;
        onChanged();
        return this;
      }

      private int equiptId_ ;
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 11;</code>
       * @return The equiptId.
       */
      @Override
      public int getEquiptId() {
        return equiptId_;
      }
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 11;</code>
       * @param value The equiptId to set.
       * @return This builder for chaining.
       */
      public Builder setEquiptId(int value) {
        
        equiptId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 装备ID
       * </pre>
       *
       * <code>int32 equiptId = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquiptId() {
        
        equiptId_ = 0;
        onChanged();
        return this;
      }

      private int frameNo_ ;
      /**
       * <pre>
       * 帧号
       * </pre>
       *
       * <code>int32 frameNo = 12;</code>
       * @return The frameNo.
       */
      @Override
      public int getFrameNo() {
        return frameNo_;
      }
      /**
       * <pre>
       * 帧号
       * </pre>
       *
       * <code>int32 frameNo = 12;</code>
       * @param value The frameNo to set.
       * @return This builder for chaining.
       */
      public Builder setFrameNo(int value) {
        
        frameNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 帧号
       * </pre>
       *
       * <code>int32 frameNo = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameNo() {
        
        frameNo_ = 0;
        onChanged();
        return this;
      }

      private int slot_ ;
      /**
       * <pre>
       * 技能槽位置 
       * </pre>
       *
       * <code>int32 slot = 13;</code>
       * @return The slot.
       */
      @Override
      public int getSlot() {
        return slot_;
      }
      /**
       * <pre>
       * 技能槽位置 
       * </pre>
       *
       * <code>int32 slot = 13;</code>
       * @param value The slot to set.
       * @return This builder for chaining.
       */
      public Builder setSlot(int value) {
        
        slot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能槽位置 
       * </pre>
       *
       * <code>int32 slot = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlot() {
        
        slot_ = 0;
        onChanged();
        return this;
      }

      private int direction_ ;
      /**
       * <pre>
       * 方向
       * </pre>
       *
       * <code>int32 direction = 14;</code>
       * @return The direction.
       */
      @Override
      public int getDirection() {
        return direction_;
      }
      /**
       * <pre>
       * 方向
       * </pre>
       *
       * <code>int32 direction = 14;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(int value) {
        
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 方向
       * </pre>
       *
       * <code>int32 direction = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       * 升级等级
       * </pre>
       *
       * <code>int32 level = 15;</code>
       * @return The level.
       */
      @Override
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       * 升级等级
       * </pre>
       *
       * <code>int32 level = 15;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 升级等级
       * </pre>
       *
       * <code>int32 level = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       * 装备索引
       * </pre>
       *
       * <code>int32 index = 16;</code>
       * @return The index.
       */
      @Override
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       * 装备索引
       * </pre>
       *
       * <code>int32 index = 16;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 装备索引
       * </pre>
       *
       * <code>int32 index = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.ResultMsgCmd)
    }

    // @@protoc_insertion_point(class_scope:shuguang.ResultMsgCmd)
    private static final ResultMsgCmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ResultMsgCmd();
    }

    public static ResultMsgCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResultMsgCmd>
        PARSER = new com.google.protobuf.AbstractParser<ResultMsgCmd>() {
      @Override
      public ResultMsgCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResultMsgCmd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResultMsgCmd> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ResultMsgCmd> getParserForType() {
      return PARSER;
    }

    @Override
    public ResultMsgCmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgBuffStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgBuffState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>int32 stack = 2;</code>
     * @return The stack.
     */
    int getStack();

    /**
     * <code>int64 beginTime = 3;</code>
     * @return The beginTime.
     */
    long getBeginTime();

    /**
     * <code>int64 endTime = 4;</code>
     * @return The endTime.
     */
    long getEndTime();

    /**
     * <code>int64 progress = 5;</code>
     * @return The progress.
     */
    long getProgress();
  }
  /**
   * Protobuf type {@code shuguang.MsgBuffState}
   */
  public static final class MsgBuffState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgBuffState)
      MsgBuffStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgBuffState.newBuilder() to construct.
    private MsgBuffState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgBuffState() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgBuffState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgBuffState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              stack_ = input.readInt32();
              break;
            }
            case 24: {

              beginTime_ = input.readInt64();
              break;
            }
            case 32: {

              endTime_ = input.readInt64();
              break;
            }
            case 40: {

              progress_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Cmd.internal_static_shuguang_MsgBuffState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Cmd.internal_static_shuguang_MsgBuffState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgBuffState.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int STACK_FIELD_NUMBER = 2;
    private int stack_;
    /**
     * <code>int32 stack = 2;</code>
     * @return The stack.
     */
    @Override
    public int getStack() {
      return stack_;
    }

    public static final int BEGINTIME_FIELD_NUMBER = 3;
    private long beginTime_;
    /**
     * <code>int64 beginTime = 3;</code>
     * @return The beginTime.
     */
    @Override
    public long getBeginTime() {
      return beginTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 4;
    private long endTime_;
    /**
     * <code>int64 endTime = 4;</code>
     * @return The endTime.
     */
    @Override
    public long getEndTime() {
      return endTime_;
    }

    public static final int PROGRESS_FIELD_NUMBER = 5;
    private long progress_;
    /**
     * <code>int64 progress = 5;</code>
     * @return The progress.
     */
    @Override
    public long getProgress() {
      return progress_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (stack_ != 0) {
        output.writeInt32(2, stack_);
      }
      if (beginTime_ != 0L) {
        output.writeInt64(3, beginTime_);
      }
      if (endTime_ != 0L) {
        output.writeInt64(4, endTime_);
      }
      if (progress_ != 0L) {
        output.writeInt64(5, progress_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (stack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stack_);
      }
      if (beginTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, beginTime_);
      }
      if (endTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, endTime_);
      }
      if (progress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, progress_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgBuffState)) {
        return super.equals(obj);
      }
      MsgBuffState other = (MsgBuffState) obj;

      if (getId()
          != other.getId()) return false;
      if (getStack()
          != other.getStack()) return false;
      if (getBeginTime()
          != other.getBeginTime()) return false;
      if (getEndTime()
          != other.getEndTime()) return false;
      if (getProgress()
          != other.getProgress()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + STACK_FIELD_NUMBER;
      hash = (53 * hash) + getStack();
      hash = (37 * hash) + BEGINTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBeginTime());
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTime());
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getProgress());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgBuffState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgBuffState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgBuffState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgBuffState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgBuffState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgBuffState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgBuffState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgBuffState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgBuffState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgBuffState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgBuffState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgBuffState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgBuffState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgBuffState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgBuffState)
        MsgBuffStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Cmd.internal_static_shuguang_MsgBuffState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Cmd.internal_static_shuguang_MsgBuffState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgBuffState.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Cmd.MsgBuffState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        stack_ = 0;

        beginTime_ = 0L;

        endTime_ = 0L;

        progress_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Cmd.internal_static_shuguang_MsgBuffState_descriptor;
      }

      @Override
      public MsgBuffState getDefaultInstanceForType() {
        return MsgBuffState.getDefaultInstance();
      }

      @Override
      public MsgBuffState build() {
        MsgBuffState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgBuffState buildPartial() {
        MsgBuffState result = new MsgBuffState(this);
        result.id_ = id_;
        result.stack_ = stack_;
        result.beginTime_ = beginTime_;
        result.endTime_ = endTime_;
        result.progress_ = progress_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgBuffState) {
          return mergeFrom((MsgBuffState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgBuffState other) {
        if (other == MsgBuffState.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getStack() != 0) {
          setStack(other.getStack());
        }
        if (other.getBeginTime() != 0L) {
          setBeginTime(other.getBeginTime());
        }
        if (other.getEndTime() != 0L) {
          setEndTime(other.getEndTime());
        }
        if (other.getProgress() != 0L) {
          setProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgBuffState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgBuffState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int stack_ ;
      /**
       * <code>int32 stack = 2;</code>
       * @return The stack.
       */
      @Override
      public int getStack() {
        return stack_;
      }
      /**
       * <code>int32 stack = 2;</code>
       * @param value The stack to set.
       * @return This builder for chaining.
       */
      public Builder setStack(int value) {
        
        stack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 stack = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStack() {
        
        stack_ = 0;
        onChanged();
        return this;
      }

      private long beginTime_ ;
      /**
       * <code>int64 beginTime = 3;</code>
       * @return The beginTime.
       */
      @Override
      public long getBeginTime() {
        return beginTime_;
      }
      /**
       * <code>int64 beginTime = 3;</code>
       * @param value The beginTime to set.
       * @return This builder for chaining.
       */
      public Builder setBeginTime(long value) {
        
        beginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 beginTime = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeginTime() {
        
        beginTime_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>int64 endTime = 4;</code>
       * @return The endTime.
       */
      @Override
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>int64 endTime = 4;</code>
       * @param value The endTime to set.
       * @return This builder for chaining.
       */
      public Builder setEndTime(long value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 endTime = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTime() {
        
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private long progress_ ;
      /**
       * <code>int64 progress = 5;</code>
       * @return The progress.
       */
      @Override
      public long getProgress() {
        return progress_;
      }
      /**
       * <code>int64 progress = 5;</code>
       * @param value The progress to set.
       * @return This builder for chaining.
       */
      public Builder setProgress(long value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 progress = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgress() {
        
        progress_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgBuffState)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgBuffState)
    private static final MsgBuffState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgBuffState();
    }

    public static MsgBuffState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgBuffState>
        PARSER = new com.google.protobuf.AbstractParser<MsgBuffState>() {
      @Override
      public MsgBuffState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgBuffState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgBuffState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgBuffState> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgBuffState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgCmd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgCmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_ResultMsgCmd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_ResultMsgCmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgBuffState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgBuffState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tcmd.proto\022\010shuguang\"\322\001\n\006MsgCmd\022%\n\004type" +
      "\030\001 \001(\0162\027.shuguang.ResultCmdType\022\021\n\tabili" +
      "tyID\030\002 \001(\005\022\022\n\ntargetPosX\030\004 \001(\005\022\022\n\ntarget" +
      "PosY\030\005 \001(\005\022\017\n\007targeID\030\006 \001(\003\022\017\n\007degreeX\030\007" +
      " \001(\005\022\017\n\007degreeY\030\010 \001(\005\022\020\n\010equiptId\030\t \001(\005\022" +
      "\r\n\005angle\030\n \001(\005\022\022\n\nskillLevel\030\013 \001(\005\"\271\002\n\014R" +
      "esultMsgCmd\022%\n\004type\030\001 \001(\0162\027.shuguang.Res" +
      "ultCmdType\022\020\n\010battleID\030\002 \001(\003\022\014\n\004luid\030\003 \001" +
      "(\003\022\016\n\006heroID\030\004 \001(\005\022\017\n\007skillID\030\005 \001(\005\022\022\n\nt" +
      "argetPosX\030\006 \001(\005\022\022\n\ntargetPosY\030\007 \001(\005\022\017\n\007t" +
      "argeID\030\010 \001(\003\022\022\n\ndirectionX\030\t \001(\005\022\022\n\ndire" +
      "ctionY\030\n \001(\005\022\020\n\010equiptId\030\013 \001(\005\022\017\n\007frameN" +
      "o\030\014 \001(\005\022\014\n\004slot\030\r \001(\005\022\021\n\tdirection\030\016 \001(\005" +
      "\022\r\n\005level\030\017 \001(\005\022\r\n\005index\030\020 \001(\005\"_\n\014MsgBuf" +
      "fState\022\n\n\002id\030\001 \001(\005\022\r\n\005stack\030\002 \001(\005\022\021\n\tbeg" +
      "inTime\030\003 \001(\003\022\017\n\007endTime\030\004 \001(\003\022\020\n\010progres" +
      "s\030\005 \001(\003*\347\002\n\007CmdType\022\020\n\014COMMAND_NONE\020\000\022\023\n" +
      "\017COMMAND_MOVEPOS\020\001\022\023\n\017COMMAND_MOVEDIR\020\002\022" +
      "\024\n\020COMMAND_MOVESTOP\020\003\022\030\n\024COMMAND_ATTACKC" +
      "OMMON\020\004\022\026\n\022COMMAND_OBJABILITY\020\005\022\026\n\022COMMA" +
      "ND_DIRABILITY\020\006\022\026\n\022COMMAND_POSABILITY\020\007\022" +
      "\032\n\026COMMAND_LEVELUPABILITY\020\010\022\031\n\025COMMAND_P" +
      "URCHASEQUIPT\020\t\022\026\n\022COMMAND_SELLEQUIPT\020\n\022\020" +
      "\n\014COMMAND_HEAL\020\013\022\024\n\020COMMAND_TELEPORT\020\014\022\030" +
      "\n\024COMMAND_BATTLE_SKILL\020\r\022\027\n\023COMMAND_EQUI" +
      "P_SKILL\020\016*\211\002\n\rResultCmdType\022\032\n\026RESULT_CO" +
      "MMAND_MOVEDIR\020\000\022\033\n\027RESULT_COMMAND_MOVEST" +
      "OP\020\001\022\037\n\033RESULT_COMMAND_ATTACKCOMMON\020\002\022\036\n" +
      "\032RESULT_COMMAND_AUTO_ATTACK\020\003\022!\n\035RESULT_" +
      "COMMAND_LEVELUPABILITY\020\005\022 \n\034RESULT_COMMA" +
      "ND_PURCHASEQUIPT\020\006\022\035\n\031RESULT_COMMAND_SEL" +
      "LEQUIPT\020\007\022\032\n\026RESULT_COMMAND_HOLDING\020\010B\031\n" +
      "\027cn.jj.simulation.pb_newb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_shuguang_MsgCmd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shuguang_MsgCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgCmd_descriptor,
        new String[] { "Type", "AbilityID", "TargetPosX", "TargetPosY", "TargeID", "DegreeX", "DegreeY", "EquiptId", "Angle", "SkillLevel", });
    internal_static_shuguang_ResultMsgCmd_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_shuguang_ResultMsgCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_ResultMsgCmd_descriptor,
        new String[] { "Type", "BattleID", "Luid", "HeroID", "SkillID", "TargetPosX", "TargetPosY", "TargeID", "DirectionX", "DirectionY", "EquiptId", "FrameNo", "Slot", "Direction", "Level", "Index", });
    internal_static_shuguang_MsgBuffState_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_shuguang_MsgBuffState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgBuffState_descriptor,
        new String[] { "Id", "Stack", "BeginTime", "EndTime", "Progress", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
