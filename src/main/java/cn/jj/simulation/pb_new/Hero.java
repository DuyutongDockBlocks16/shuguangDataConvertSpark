// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hero.proto

package cn.jj.simulation.pb_new;

public final class Hero {
  private Hero() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code shuguang.MsgSkillSlotType}
   */
  public enum MsgSkillSlotType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SKILL_SLOT_NONE = 0;</code>
     */
    SKILL_SLOT_NONE(0),
    /**
     * <code>SKILL_SLOT_NORMAL_ATTACK = 1;</code>
     */
    SKILL_SLOT_NORMAL_ATTACK(1),
    /**
     * <code>SKILL_SLOT_SKLL1 = 2;</code>
     */
    SKILL_SLOT_SKLL1(2),
    /**
     * <code>SKILL_SLOT_SKLL2 = 3;</code>
     */
    SKILL_SLOT_SKLL2(3),
    /**
     * <code>SKILL_SLOT_SKLL3 = 4;</code>
     */
    SKILL_SLOT_SKLL3(4),
    /**
     * <code>SKILL_SLOT_SKLL4 = 5;</code>
     */
    SKILL_SLOT_SKLL4(5),
    /**
     * <code>SKILL_SLOT_PASSIVE = 6;</code>
     */
    SKILL_SLOT_PASSIVE(6),
    /**
     * <code>SKILL_SLOT_SUMMONER = 7;</code>
     */
    SKILL_SLOT_SUMMONER(7),
    /**
     * <code>SKILL_SLOT_EQUIP = 8;</code>
     */
    SKILL_SLOT_EQUIP(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SKILL_SLOT_NONE = 0;</code>
     */
    public static final int SKILL_SLOT_NONE_VALUE = 0;
    /**
     * <code>SKILL_SLOT_NORMAL_ATTACK = 1;</code>
     */
    public static final int SKILL_SLOT_NORMAL_ATTACK_VALUE = 1;
    /**
     * <code>SKILL_SLOT_SKLL1 = 2;</code>
     */
    public static final int SKILL_SLOT_SKLL1_VALUE = 2;
    /**
     * <code>SKILL_SLOT_SKLL2 = 3;</code>
     */
    public static final int SKILL_SLOT_SKLL2_VALUE = 3;
    /**
     * <code>SKILL_SLOT_SKLL3 = 4;</code>
     */
    public static final int SKILL_SLOT_SKLL3_VALUE = 4;
    /**
     * <code>SKILL_SLOT_SKLL4 = 5;</code>
     */
    public static final int SKILL_SLOT_SKLL4_VALUE = 5;
    /**
     * <code>SKILL_SLOT_PASSIVE = 6;</code>
     */
    public static final int SKILL_SLOT_PASSIVE_VALUE = 6;
    /**
     * <code>SKILL_SLOT_SUMMONER = 7;</code>
     */
    public static final int SKILL_SLOT_SUMMONER_VALUE = 7;
    /**
     * <code>SKILL_SLOT_EQUIP = 8;</code>
     */
    public static final int SKILL_SLOT_EQUIP_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MsgSkillSlotType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MsgSkillSlotType forNumber(int value) {
      switch (value) {
        case 0: return SKILL_SLOT_NONE;
        case 1: return SKILL_SLOT_NORMAL_ATTACK;
        case 2: return SKILL_SLOT_SKLL1;
        case 3: return SKILL_SLOT_SKLL2;
        case 4: return SKILL_SLOT_SKLL3;
        case 5: return SKILL_SLOT_SKLL4;
        case 6: return SKILL_SLOT_PASSIVE;
        case 7: return SKILL_SLOT_SUMMONER;
        case 8: return SKILL_SLOT_EQUIP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgSkillSlotType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MsgSkillSlotType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgSkillSlotType>() {
            public MsgSkillSlotType findValueByNumber(int number) {
              return MsgSkillSlotType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Hero.getDescriptor().getEnumTypes().get(0);
    }

    private static final MsgSkillSlotType[] VALUES = values();

    public static MsgSkillSlotType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MsgSkillSlotType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuguang.MsgSkillSlotType)
  }

  /**
   * Protobuf enum {@code shuguang.MsgSkillTargetType}
   */
  public enum MsgSkillTargetType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *不需要参数。目标为自身、或无目标、或自身为圆心的圆形
     * </pre>
     *
     * <code>SKILL_TARGET_NONE = 0;</code>
     */
    SKILL_TARGET_NONE(0),
    /**
     * <pre>
     *需要选择单位。目标为敌方特定角色、友方特定角色
     * </pre>
     *
     * <code>SKILL_TARGET_UNIT = 1;</code>
     */
    SKILL_TARGET_UNIT(1),
    /**
     * <pre>
     *需要选择方向。目标为自身为端点的射线、自身为圆心的扇形、自身为中心的矩形等
     * </pre>
     *
     * <code>SKILL_TARGET_DIRCTION = 2;</code>
     */
    SKILL_TARGET_DIRCTION(2),
    /**
     * <pre>
     *需要选择位置。目标为坐标点、任意位置的圆形、任意位置的矩形等
     * </pre>
     *
     * <code>SKILL_TARGET_POSITION = 3;</code>
     */
    SKILL_TARGET_POSITION(3),
    /**
     * <code>SKILL_NORMAL_ATTACK = 4;</code>
     */
    SKILL_NORMAL_ATTACK(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *不需要参数。目标为自身、或无目标、或自身为圆心的圆形
     * </pre>
     *
     * <code>SKILL_TARGET_NONE = 0;</code>
     */
    public static final int SKILL_TARGET_NONE_VALUE = 0;
    /**
     * <pre>
     *需要选择单位。目标为敌方特定角色、友方特定角色
     * </pre>
     *
     * <code>SKILL_TARGET_UNIT = 1;</code>
     */
    public static final int SKILL_TARGET_UNIT_VALUE = 1;
    /**
     * <pre>
     *需要选择方向。目标为自身为端点的射线、自身为圆心的扇形、自身为中心的矩形等
     * </pre>
     *
     * <code>SKILL_TARGET_DIRCTION = 2;</code>
     */
    public static final int SKILL_TARGET_DIRCTION_VALUE = 2;
    /**
     * <pre>
     *需要选择位置。目标为坐标点、任意位置的圆形、任意位置的矩形等
     * </pre>
     *
     * <code>SKILL_TARGET_POSITION = 3;</code>
     */
    public static final int SKILL_TARGET_POSITION_VALUE = 3;
    /**
     * <code>SKILL_NORMAL_ATTACK = 4;</code>
     */
    public static final int SKILL_NORMAL_ATTACK_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MsgSkillTargetType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MsgSkillTargetType forNumber(int value) {
      switch (value) {
        case 0: return SKILL_TARGET_NONE;
        case 1: return SKILL_TARGET_UNIT;
        case 2: return SKILL_TARGET_DIRCTION;
        case 3: return SKILL_TARGET_POSITION;
        case 4: return SKILL_NORMAL_ATTACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgSkillTargetType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MsgSkillTargetType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgSkillTargetType>() {
            public MsgSkillTargetType findValueByNumber(int number) {
              return MsgSkillTargetType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Hero.getDescriptor().getEnumTypes().get(1);
    }

    private static final MsgSkillTargetType[] VALUES = values();

    public static MsgSkillTargetType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MsgSkillTargetType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:shuguang.MsgSkillTargetType)
  }

  public interface VInt2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.VInt2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 x = 1;</code>
     * @return The x.
     */
    int getX();

    /**
     * <code>int32 y = 2;</code>
     * @return The y.
     */
    int getY();
  }
  /**
   * <pre>
   *2维向量
   * </pre>
   *
   * Protobuf type {@code shuguang.VInt2D}
   */
  public static final class VInt2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.VInt2D)
      VInt2DOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VInt2D.newBuilder() to construct.
    private VInt2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VInt2D() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new VInt2D();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VInt2D(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              x_ = input.readInt32();
              break;
            }
            case 16: {

              y_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_VInt2D_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_VInt2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VInt2D.class, Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>int32 x = 1;</code>
     * @return The x.
     */
    @Override
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>int32 y = 2;</code>
     * @return The y.
     */
    @Override
    public int getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0) {
        output.writeInt32(1, x_);
      }
      if (y_ != 0) {
        output.writeInt32(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VInt2D)) {
        return super.equals(obj);
      }
      VInt2D other = (VInt2D) obj;

      if (getX()
          != other.getX()) return false;
      if (getY()
          != other.getY()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VInt2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VInt2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VInt2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VInt2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VInt2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VInt2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VInt2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VInt2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VInt2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VInt2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VInt2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VInt2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VInt2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *2维向量
     * </pre>
     *
     * Protobuf type {@code shuguang.VInt2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.VInt2D)
        VInt2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_VInt2D_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_VInt2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VInt2D.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.VInt2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        x_ = 0;

        y_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_VInt2D_descriptor;
      }

      @Override
      public VInt2D getDefaultInstanceForType() {
        return VInt2D.getDefaultInstance();
      }

      @Override
      public VInt2D build() {
        VInt2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public VInt2D buildPartial() {
        VInt2D result = new VInt2D(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VInt2D) {
          return mergeFrom((VInt2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VInt2D other) {
        if (other == VInt2D.getDefaultInstance()) return this;
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VInt2D parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VInt2D) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x_ ;
      /**
       * <code>int32 x = 1;</code>
       * @return The x.
       */
      @Override
      public int getX() {
        return x_;
      }
      /**
       * <code>int32 x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>int32 y = 2;</code>
       * @return The y.
       */
      @Override
      public int getY() {
        return y_;
      }
      /**
       * <code>int32 y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.VInt2D)
    }

    // @@protoc_insertion_point(class_scope:shuguang.VInt2D)
    private static final VInt2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VInt2D();
    }

    public static VInt2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VInt2D>
        PARSER = new com.google.protobuf.AbstractParser<VInt2D>() {
      @Override
      public VInt2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VInt2D(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VInt2D> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VInt2D> getParserForType() {
      return PARSER;
    }

    @Override
    public VInt2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgSkillRangeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgSkillRangeData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 value = 1;</code>
     * @return The value.
     */
    int getValue();

    /**
     * <code>int32 nextValue = 2;</code>
     * @return The nextValue.
     */
    int getNextValue();

    /**
     * <code>int32 startTime = 3;</code>
     * @return The startTime.
     */
    int getStartTime();

    /**
     * <code>int32 duration = 4;</code>
     * @return The duration.
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code shuguang.MsgSkillRangeData}
   */
  public static final class MsgSkillRangeData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgSkillRangeData)
      MsgSkillRangeDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgSkillRangeData.newBuilder() to construct.
    private MsgSkillRangeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgSkillRangeData() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgSkillRangeData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgSkillRangeData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              value_ = input.readInt32();
              break;
            }
            case 16: {

              nextValue_ = input.readInt32();
              break;
            }
            case 24: {

              startTime_ = input.readInt32();
              break;
            }
            case 32: {

              duration_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgSkillRangeData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgSkillRangeData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgSkillRangeData.class, Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>int32 value = 1;</code>
     * @return The value.
     */
    @Override
    public int getValue() {
      return value_;
    }

    public static final int NEXTVALUE_FIELD_NUMBER = 2;
    private int nextValue_;
    /**
     * <code>int32 nextValue = 2;</code>
     * @return The nextValue.
     */
    @Override
    public int getNextValue() {
      return nextValue_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 3;
    private int startTime_;
    /**
     * <code>int32 startTime = 3;</code>
     * @return The startTime.
     */
    @Override
    public int getStartTime() {
      return startTime_;
    }

    public static final int DURATION_FIELD_NUMBER = 4;
    private int duration_;
    /**
     * <code>int32 duration = 4;</code>
     * @return The duration.
     */
    @Override
    public int getDuration() {
      return duration_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeInt32(1, value_);
      }
      if (nextValue_ != 0) {
        output.writeInt32(2, nextValue_);
      }
      if (startTime_ != 0) {
        output.writeInt32(3, startTime_);
      }
      if (duration_ != 0) {
        output.writeInt32(4, duration_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, value_);
      }
      if (nextValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nextValue_);
      }
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, startTime_);
      }
      if (duration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, duration_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgSkillRangeData)) {
        return super.equals(obj);
      }
      MsgSkillRangeData other = (MsgSkillRangeData) obj;

      if (getValue()
          != other.getValue()) return false;
      if (getNextValue()
          != other.getNextValue()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getDuration()
          != other.getDuration()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (37 * hash) + NEXTVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getNextValue();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgSkillRangeData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRangeData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRangeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRangeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRangeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRangeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRangeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgSkillRangeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgSkillRangeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgSkillRangeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgSkillRangeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgSkillRangeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgSkillRangeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgSkillRangeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgSkillRangeData)
        MsgSkillRangeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgSkillRangeData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgSkillRangeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgSkillRangeData.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgSkillRangeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        value_ = 0;

        nextValue_ = 0;

        startTime_ = 0;

        duration_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgSkillRangeData_descriptor;
      }

      @Override
      public MsgSkillRangeData getDefaultInstanceForType() {
        return MsgSkillRangeData.getDefaultInstance();
      }

      @Override
      public MsgSkillRangeData build() {
        MsgSkillRangeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgSkillRangeData buildPartial() {
        MsgSkillRangeData result = new MsgSkillRangeData(this);
        result.value_ = value_;
        result.nextValue_ = nextValue_;
        result.startTime_ = startTime_;
        result.duration_ = duration_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgSkillRangeData) {
          return mergeFrom((MsgSkillRangeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgSkillRangeData other) {
        if (other == MsgSkillRangeData.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        if (other.getNextValue() != 0) {
          setNextValue(other.getNextValue());
        }
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getDuration() != 0) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgSkillRangeData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgSkillRangeData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int value_ ;
      /**
       * <code>int32 value = 1;</code>
       * @return The value.
       */
      @Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>int32 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }

      private int nextValue_ ;
      /**
       * <code>int32 nextValue = 2;</code>
       * @return The nextValue.
       */
      @Override
      public int getNextValue() {
        return nextValue_;
      }
      /**
       * <code>int32 nextValue = 2;</code>
       * @param value The nextValue to set.
       * @return This builder for chaining.
       */
      public Builder setNextValue(int value) {
        
        nextValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nextValue = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextValue() {
        
        nextValue_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>int32 startTime = 3;</code>
       * @return The startTime.
       */
      @Override
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>int32 startTime = 3;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(int value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 startTime = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>int32 duration = 4;</code>
       * @return The duration.
       */
      @Override
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>int32 duration = 4;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(int value) {
        
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 duration = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        
        duration_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgSkillRangeData)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgSkillRangeData)
    private static final MsgSkillRangeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgSkillRangeData();
    }

    public static MsgSkillRangeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgSkillRangeData>
        PARSER = new com.google.protobuf.AbstractParser<MsgSkillRangeData>() {
      @Override
      public MsgSkillRangeData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgSkillRangeData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgSkillRangeData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgSkillRangeData> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgSkillRangeData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgSkillRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgSkillRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     * @return Whether the chaseRange field is set.
     */
    boolean hasChaseRange();
    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     * @return The chaseRange.
     */
    MsgSkillRangeData getChaseRange();
    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     */
    MsgSkillRangeDataOrBuilder getChaseRangeOrBuilder();

    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     * @return Whether the castRange field is set.
     */
    boolean hasCastRange();
    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     * @return The castRange.
     */
    MsgSkillRangeData getCastRange();
    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     */
    MsgSkillRangeDataOrBuilder getCastRangeOrBuilder();

    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     * @return Whether the castRangeWithoutTarget field is set.
     */
    boolean hasCastRangeWithoutTarget();
    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     * @return The castRangeWithoutTarget.
     */
    MsgSkillRangeData getCastRangeWithoutTarget();
    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     */
    MsgSkillRangeDataOrBuilder getCastRangeWithoutTargetOrBuilder();
  }
  /**
   * Protobuf type {@code shuguang.MsgSkillRange}
   */
  public static final class MsgSkillRange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgSkillRange)
      MsgSkillRangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgSkillRange.newBuilder() to construct.
    private MsgSkillRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgSkillRange() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgSkillRange();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgSkillRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              MsgSkillRangeData.Builder subBuilder = null;
              if (chaseRange_ != null) {
                subBuilder = chaseRange_.toBuilder();
              }
              chaseRange_ = input.readMessage(MsgSkillRangeData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chaseRange_);
                chaseRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              MsgSkillRangeData.Builder subBuilder = null;
              if (castRange_ != null) {
                subBuilder = castRange_.toBuilder();
              }
              castRange_ = input.readMessage(MsgSkillRangeData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(castRange_);
                castRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              MsgSkillRangeData.Builder subBuilder = null;
              if (castRangeWithoutTarget_ != null) {
                subBuilder = castRangeWithoutTarget_.toBuilder();
              }
              castRangeWithoutTarget_ = input.readMessage(MsgSkillRangeData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(castRangeWithoutTarget_);
                castRangeWithoutTarget_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgSkillRange_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgSkillRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgSkillRange.class, Builder.class);
    }

    public static final int CHASERANGE_FIELD_NUMBER = 1;
    private MsgSkillRangeData chaseRange_;
    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     * @return Whether the chaseRange field is set.
     */
    @Override
    public boolean hasChaseRange() {
      return chaseRange_ != null;
    }
    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     * @return The chaseRange.
     */
    @Override
    public MsgSkillRangeData getChaseRange() {
      return chaseRange_ == null ? MsgSkillRangeData.getDefaultInstance() : chaseRange_;
    }
    /**
     * <pre>
     * 追击范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
     */
    @Override
    public MsgSkillRangeDataOrBuilder getChaseRangeOrBuilder() {
      return getChaseRange();
    }

    public static final int CASTRANGE_FIELD_NUMBER = 2;
    private MsgSkillRangeData castRange_;
    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     * @return Whether the castRange field is set.
     */
    @Override
    public boolean hasCastRange() {
      return castRange_ != null;
    }
    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     * @return The castRange.
     */
    @Override
    public MsgSkillRangeData getCastRange() {
      return castRange_ == null ? MsgSkillRangeData.getDefaultInstance() : castRange_;
    }
    /**
     * <pre>
     *  最大半径
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
     */
    @Override
    public MsgSkillRangeDataOrBuilder getCastRangeOrBuilder() {
      return getCastRange();
    }

    public static final int CASTRANGEWITHOUTTARGET_FIELD_NUMBER = 3;
    private MsgSkillRangeData castRangeWithoutTarget_;
    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     * @return Whether the castRangeWithoutTarget field is set.
     */
    @Override
    public boolean hasCastRangeWithoutTarget() {
      return castRangeWithoutTarget_ != null;
    }
    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     * @return The castRangeWithoutTarget.
     */
    @Override
    public MsgSkillRangeData getCastRangeWithoutTarget() {
      return castRangeWithoutTarget_ == null ? MsgSkillRangeData.getDefaultInstance() : castRangeWithoutTarget_;
    }
    /**
     * <pre>
     * 空挥范围
     * </pre>
     *
     * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
     */
    @Override
    public MsgSkillRangeDataOrBuilder getCastRangeWithoutTargetOrBuilder() {
      return getCastRangeWithoutTarget();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chaseRange_ != null) {
        output.writeMessage(1, getChaseRange());
      }
      if (castRange_ != null) {
        output.writeMessage(2, getCastRange());
      }
      if (castRangeWithoutTarget_ != null) {
        output.writeMessage(3, getCastRangeWithoutTarget());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chaseRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChaseRange());
      }
      if (castRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCastRange());
      }
      if (castRangeWithoutTarget_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCastRangeWithoutTarget());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgSkillRange)) {
        return super.equals(obj);
      }
      MsgSkillRange other = (MsgSkillRange) obj;

      if (hasChaseRange() != other.hasChaseRange()) return false;
      if (hasChaseRange()) {
        if (!getChaseRange()
            .equals(other.getChaseRange())) return false;
      }
      if (hasCastRange() != other.hasCastRange()) return false;
      if (hasCastRange()) {
        if (!getCastRange()
            .equals(other.getCastRange())) return false;
      }
      if (hasCastRangeWithoutTarget() != other.hasCastRangeWithoutTarget()) return false;
      if (hasCastRangeWithoutTarget()) {
        if (!getCastRangeWithoutTarget()
            .equals(other.getCastRangeWithoutTarget())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChaseRange()) {
        hash = (37 * hash) + CHASERANGE_FIELD_NUMBER;
        hash = (53 * hash) + getChaseRange().hashCode();
      }
      if (hasCastRange()) {
        hash = (37 * hash) + CASTRANGE_FIELD_NUMBER;
        hash = (53 * hash) + getCastRange().hashCode();
      }
      if (hasCastRangeWithoutTarget()) {
        hash = (37 * hash) + CASTRANGEWITHOUTTARGET_FIELD_NUMBER;
        hash = (53 * hash) + getCastRangeWithoutTarget().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgSkillRange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgSkillRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgSkillRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgSkillRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgSkillRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgSkillRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgSkillRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgSkillRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgSkillRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgSkillRange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgSkillRange)
        MsgSkillRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgSkillRange_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgSkillRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgSkillRange.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgSkillRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (chaseRangeBuilder_ == null) {
          chaseRange_ = null;
        } else {
          chaseRange_ = null;
          chaseRangeBuilder_ = null;
        }
        if (castRangeBuilder_ == null) {
          castRange_ = null;
        } else {
          castRange_ = null;
          castRangeBuilder_ = null;
        }
        if (castRangeWithoutTargetBuilder_ == null) {
          castRangeWithoutTarget_ = null;
        } else {
          castRangeWithoutTarget_ = null;
          castRangeWithoutTargetBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgSkillRange_descriptor;
      }

      @Override
      public MsgSkillRange getDefaultInstanceForType() {
        return MsgSkillRange.getDefaultInstance();
      }

      @Override
      public MsgSkillRange build() {
        MsgSkillRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgSkillRange buildPartial() {
        MsgSkillRange result = new MsgSkillRange(this);
        if (chaseRangeBuilder_ == null) {
          result.chaseRange_ = chaseRange_;
        } else {
          result.chaseRange_ = chaseRangeBuilder_.build();
        }
        if (castRangeBuilder_ == null) {
          result.castRange_ = castRange_;
        } else {
          result.castRange_ = castRangeBuilder_.build();
        }
        if (castRangeWithoutTargetBuilder_ == null) {
          result.castRangeWithoutTarget_ = castRangeWithoutTarget_;
        } else {
          result.castRangeWithoutTarget_ = castRangeWithoutTargetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgSkillRange) {
          return mergeFrom((MsgSkillRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgSkillRange other) {
        if (other == MsgSkillRange.getDefaultInstance()) return this;
        if (other.hasChaseRange()) {
          mergeChaseRange(other.getChaseRange());
        }
        if (other.hasCastRange()) {
          mergeCastRange(other.getCastRange());
        }
        if (other.hasCastRangeWithoutTarget()) {
          mergeCastRangeWithoutTarget(other.getCastRangeWithoutTarget());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgSkillRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgSkillRange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private MsgSkillRangeData chaseRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder> chaseRangeBuilder_;
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       * @return Whether the chaseRange field is set.
       */
      public boolean hasChaseRange() {
        return chaseRangeBuilder_ != null || chaseRange_ != null;
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       * @return The chaseRange.
       */
      public MsgSkillRangeData getChaseRange() {
        if (chaseRangeBuilder_ == null) {
          return chaseRange_ == null ? MsgSkillRangeData.getDefaultInstance() : chaseRange_;
        } else {
          return chaseRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public Builder setChaseRange(MsgSkillRangeData value) {
        if (chaseRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chaseRange_ = value;
          onChanged();
        } else {
          chaseRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public Builder setChaseRange(
          MsgSkillRangeData.Builder builderForValue) {
        if (chaseRangeBuilder_ == null) {
          chaseRange_ = builderForValue.build();
          onChanged();
        } else {
          chaseRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public Builder mergeChaseRange(MsgSkillRangeData value) {
        if (chaseRangeBuilder_ == null) {
          if (chaseRange_ != null) {
            chaseRange_ =
              MsgSkillRangeData.newBuilder(chaseRange_).mergeFrom(value).buildPartial();
          } else {
            chaseRange_ = value;
          }
          onChanged();
        } else {
          chaseRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public Builder clearChaseRange() {
        if (chaseRangeBuilder_ == null) {
          chaseRange_ = null;
          onChanged();
        } else {
          chaseRange_ = null;
          chaseRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public MsgSkillRangeData.Builder getChaseRangeBuilder() {
        
        onChanged();
        return getChaseRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      public MsgSkillRangeDataOrBuilder getChaseRangeOrBuilder() {
        if (chaseRangeBuilder_ != null) {
          return chaseRangeBuilder_.getMessageOrBuilder();
        } else {
          return chaseRange_ == null ?
              MsgSkillRangeData.getDefaultInstance() : chaseRange_;
        }
      }
      /**
       * <pre>
       * 追击范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData chaseRange = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>
          getChaseRangeFieldBuilder() {
        if (chaseRangeBuilder_ == null) {
          chaseRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>(
                  getChaseRange(),
                  getParentForChildren(),
                  isClean());
          chaseRange_ = null;
        }
        return chaseRangeBuilder_;
      }

      private MsgSkillRangeData castRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder> castRangeBuilder_;
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       * @return Whether the castRange field is set.
       */
      public boolean hasCastRange() {
        return castRangeBuilder_ != null || castRange_ != null;
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       * @return The castRange.
       */
      public MsgSkillRangeData getCastRange() {
        if (castRangeBuilder_ == null) {
          return castRange_ == null ? MsgSkillRangeData.getDefaultInstance() : castRange_;
        } else {
          return castRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public Builder setCastRange(MsgSkillRangeData value) {
        if (castRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          castRange_ = value;
          onChanged();
        } else {
          castRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public Builder setCastRange(
          MsgSkillRangeData.Builder builderForValue) {
        if (castRangeBuilder_ == null) {
          castRange_ = builderForValue.build();
          onChanged();
        } else {
          castRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public Builder mergeCastRange(MsgSkillRangeData value) {
        if (castRangeBuilder_ == null) {
          if (castRange_ != null) {
            castRange_ =
              MsgSkillRangeData.newBuilder(castRange_).mergeFrom(value).buildPartial();
          } else {
            castRange_ = value;
          }
          onChanged();
        } else {
          castRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public Builder clearCastRange() {
        if (castRangeBuilder_ == null) {
          castRange_ = null;
          onChanged();
        } else {
          castRange_ = null;
          castRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public MsgSkillRangeData.Builder getCastRangeBuilder() {
        
        onChanged();
        return getCastRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      public MsgSkillRangeDataOrBuilder getCastRangeOrBuilder() {
        if (castRangeBuilder_ != null) {
          return castRangeBuilder_.getMessageOrBuilder();
        } else {
          return castRange_ == null ?
              MsgSkillRangeData.getDefaultInstance() : castRange_;
        }
      }
      /**
       * <pre>
       *  最大半径
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRange = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>
          getCastRangeFieldBuilder() {
        if (castRangeBuilder_ == null) {
          castRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>(
                  getCastRange(),
                  getParentForChildren(),
                  isClean());
          castRange_ = null;
        }
        return castRangeBuilder_;
      }

      private MsgSkillRangeData castRangeWithoutTarget_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder> castRangeWithoutTargetBuilder_;
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       * @return Whether the castRangeWithoutTarget field is set.
       */
      public boolean hasCastRangeWithoutTarget() {
        return castRangeWithoutTargetBuilder_ != null || castRangeWithoutTarget_ != null;
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       * @return The castRangeWithoutTarget.
       */
      public MsgSkillRangeData getCastRangeWithoutTarget() {
        if (castRangeWithoutTargetBuilder_ == null) {
          return castRangeWithoutTarget_ == null ? MsgSkillRangeData.getDefaultInstance() : castRangeWithoutTarget_;
        } else {
          return castRangeWithoutTargetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public Builder setCastRangeWithoutTarget(MsgSkillRangeData value) {
        if (castRangeWithoutTargetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          castRangeWithoutTarget_ = value;
          onChanged();
        } else {
          castRangeWithoutTargetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public Builder setCastRangeWithoutTarget(
          MsgSkillRangeData.Builder builderForValue) {
        if (castRangeWithoutTargetBuilder_ == null) {
          castRangeWithoutTarget_ = builderForValue.build();
          onChanged();
        } else {
          castRangeWithoutTargetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public Builder mergeCastRangeWithoutTarget(MsgSkillRangeData value) {
        if (castRangeWithoutTargetBuilder_ == null) {
          if (castRangeWithoutTarget_ != null) {
            castRangeWithoutTarget_ =
              MsgSkillRangeData.newBuilder(castRangeWithoutTarget_).mergeFrom(value).buildPartial();
          } else {
            castRangeWithoutTarget_ = value;
          }
          onChanged();
        } else {
          castRangeWithoutTargetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public Builder clearCastRangeWithoutTarget() {
        if (castRangeWithoutTargetBuilder_ == null) {
          castRangeWithoutTarget_ = null;
          onChanged();
        } else {
          castRangeWithoutTarget_ = null;
          castRangeWithoutTargetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public MsgSkillRangeData.Builder getCastRangeWithoutTargetBuilder() {
        
        onChanged();
        return getCastRangeWithoutTargetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      public MsgSkillRangeDataOrBuilder getCastRangeWithoutTargetOrBuilder() {
        if (castRangeWithoutTargetBuilder_ != null) {
          return castRangeWithoutTargetBuilder_.getMessageOrBuilder();
        } else {
          return castRangeWithoutTarget_ == null ?
              MsgSkillRangeData.getDefaultInstance() : castRangeWithoutTarget_;
        }
      }
      /**
       * <pre>
       * 空挥范围
       * </pre>
       *
       * <code>.shuguang.MsgSkillRangeData castRangeWithoutTarget = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>
          getCastRangeWithoutTargetFieldBuilder() {
        if (castRangeWithoutTargetBuilder_ == null) {
          castRangeWithoutTargetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgSkillRangeData, MsgSkillRangeData.Builder, MsgSkillRangeDataOrBuilder>(
                  getCastRangeWithoutTarget(),
                  getParentForChildren(),
                  isClean());
          castRangeWithoutTarget_ = null;
        }
        return castRangeWithoutTargetBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgSkillRange)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgSkillRange)
    private static final MsgSkillRange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgSkillRange();
    }

    public static MsgSkillRange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgSkillRange>
        PARSER = new com.google.protobuf.AbstractParser<MsgSkillRange>() {
      @Override
      public MsgSkillRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgSkillRange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgSkillRange> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgSkillRange> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgSkillRange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgAbilityStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgAbilityState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 技能ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * 等级
     * </pre>
     *
     * <code>int32 level = 2;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <pre>
     * 类型(0:代表普攻, 其它数值:代表技能1~n)
     * </pre>
     *
     * <code>int32 slot = 3;</code>
     * @return The slot.
     */
    int getSlot();

    /**
     * <pre>
     * 技能属于哪种类型
     * </pre>
     *
     * <code>int32 type = 4;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * 能否使用
     * </pre>
     *
     * <code>bool usable = 5;</code>
     * @return The usable.
     */
    boolean getUsable();

    /**
     * <pre>
     * 当前冷却时间
     * </pre>
     *
     * <code>int32 cd = 6;</code>
     * @return The cd.
     */
    int getCd();

    /**
     * <pre>
     * 最大冷却时间
     * </pre>
     *
     * <code>int32 cdMax = 7;</code>
     * @return The cdMax.
     */
    int getCdMax();

    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    java.util.List<MsgSkillRange>
        getAtkRangeList();
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    MsgSkillRange getAtkRange(int index);
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    int getAtkRangeCount();
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    java.util.List<? extends MsgSkillRangeOrBuilder>
        getAtkRangeOrBuilderList();
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    MsgSkillRangeOrBuilder getAtkRangeOrBuilder(
        int index);

    /**
     * <pre>
     * 消耗血量
     * </pre>
     *
     * <code>int32 hpCost = 9;</code>
     * @return The hpCost.
     */
    int getHpCost();

    /**
     * <pre>
     * 蓝量消耗
     * </pre>
     *
     * <code>int32 mpCost = 10;</code>
     * @return The mpCost.
     */
    int getMpCost();

    /**
     * <pre>
     * 能量消耗
     * </pre>
     *
     * <code>int32 xpCost = 11;</code>
     * @return The xpCost.
     */
    int getXpCost();

    /**
     * <pre>
     * 当前属于第几段
     * </pre>
     *
     * <code>int32 segment = 12;</code>
     * @return The segment.
     */
    int getSegment();

    /**
     * <pre>
     * 技能进展  
     * </pre>
     *
     * <code>int32 progress = 13;</code>
     * @return The progress.
     */
    int getProgress();

    /**
     * <pre>
     * 是否没有蓝
     * </pre>
     *
     * <code>int32 isOutofMana = 14;</code>
     * @return The isOutofMana.
     */
    int getIsOutofMana();

    /**
     * <pre>
     *叠层剩余使用次数
     * </pre>
     *
     * <code>int32 storage = 15;</code>
     * @return The storage.
     */
    int getStorage();

    /**
     * <pre>
     *普攻前摇	
     * </pre>
     *
     * <code>bool attackAnimation = 16;</code>
     * @return The attackAnimation.
     */
    boolean getAttackAnimation();
  }
  /**
   * <pre>
   * 英雄技能属性
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgAbilityState}
   */
  public static final class MsgAbilityState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgAbilityState)
      MsgAbilityStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgAbilityState.newBuilder() to construct.
    private MsgAbilityState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgAbilityState() {
      atkRange_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgAbilityState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgAbilityState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              level_ = input.readInt32();
              break;
            }
            case 24: {

              slot_ = input.readInt32();
              break;
            }
            case 32: {

              type_ = input.readInt32();
              break;
            }
            case 40: {

              usable_ = input.readBool();
              break;
            }
            case 48: {

              cd_ = input.readInt32();
              break;
            }
            case 56: {

              cdMax_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                atkRange_ = new java.util.ArrayList<MsgSkillRange>();
                mutable_bitField0_ |= 0x00000001;
              }
              atkRange_.add(
                  input.readMessage(MsgSkillRange.parser(), extensionRegistry));
              break;
            }
            case 72: {

              hpCost_ = input.readInt32();
              break;
            }
            case 80: {

              mpCost_ = input.readInt32();
              break;
            }
            case 88: {

              xpCost_ = input.readInt32();
              break;
            }
            case 96: {

              segment_ = input.readInt32();
              break;
            }
            case 104: {

              progress_ = input.readInt32();
              break;
            }
            case 112: {

              isOutofMana_ = input.readInt32();
              break;
            }
            case 120: {

              storage_ = input.readInt32();
              break;
            }
            case 128: {

              attackAnimation_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          atkRange_ = java.util.Collections.unmodifiableList(atkRange_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgAbilityState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgAbilityState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgAbilityState.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 技能ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <pre>
     * 等级
     * </pre>
     *
     * <code>int32 level = 2;</code>
     * @return The level.
     */
    @Override
    public int getLevel() {
      return level_;
    }

    public static final int SLOT_FIELD_NUMBER = 3;
    private int slot_;
    /**
     * <pre>
     * 类型(0:代表普攻, 其它数值:代表技能1~n)
     * </pre>
     *
     * <code>int32 slot = 3;</code>
     * @return The slot.
     */
    @Override
    public int getSlot() {
      return slot_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <pre>
     * 技能属于哪种类型
     * </pre>
     *
     * <code>int32 type = 4;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int USABLE_FIELD_NUMBER = 5;
    private boolean usable_;
    /**
     * <pre>
     * 能否使用
     * </pre>
     *
     * <code>bool usable = 5;</code>
     * @return The usable.
     */
    @Override
    public boolean getUsable() {
      return usable_;
    }

    public static final int CD_FIELD_NUMBER = 6;
    private int cd_;
    /**
     * <pre>
     * 当前冷却时间
     * </pre>
     *
     * <code>int32 cd = 6;</code>
     * @return The cd.
     */
    @Override
    public int getCd() {
      return cd_;
    }

    public static final int CDMAX_FIELD_NUMBER = 7;
    private int cdMax_;
    /**
     * <pre>
     * 最大冷却时间
     * </pre>
     *
     * <code>int32 cdMax = 7;</code>
     * @return The cdMax.
     */
    @Override
    public int getCdMax() {
      return cdMax_;
    }

    public static final int ATKRANGE_FIELD_NUMBER = 8;
    private java.util.List<MsgSkillRange> atkRange_;
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    @Override
    public java.util.List<MsgSkillRange> getAtkRangeList() {
      return atkRange_;
    }
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    @Override
    public java.util.List<? extends MsgSkillRangeOrBuilder>
        getAtkRangeOrBuilderList() {
      return atkRange_;
    }
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    @Override
    public int getAtkRangeCount() {
      return atkRange_.size();
    }
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    @Override
    public MsgSkillRange getAtkRange(int index) {
      return atkRange_.get(index);
    }
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
     */
    @Override
    public MsgSkillRangeOrBuilder getAtkRangeOrBuilder(
        int index) {
      return atkRange_.get(index);
    }

    public static final int HPCOST_FIELD_NUMBER = 9;
    private int hpCost_;
    /**
     * <pre>
     * 消耗血量
     * </pre>
     *
     * <code>int32 hpCost = 9;</code>
     * @return The hpCost.
     */
    @Override
    public int getHpCost() {
      return hpCost_;
    }

    public static final int MPCOST_FIELD_NUMBER = 10;
    private int mpCost_;
    /**
     * <pre>
     * 蓝量消耗
     * </pre>
     *
     * <code>int32 mpCost = 10;</code>
     * @return The mpCost.
     */
    @Override
    public int getMpCost() {
      return mpCost_;
    }

    public static final int XPCOST_FIELD_NUMBER = 11;
    private int xpCost_;
    /**
     * <pre>
     * 能量消耗
     * </pre>
     *
     * <code>int32 xpCost = 11;</code>
     * @return The xpCost.
     */
    @Override
    public int getXpCost() {
      return xpCost_;
    }

    public static final int SEGMENT_FIELD_NUMBER = 12;
    private int segment_;
    /**
     * <pre>
     * 当前属于第几段
     * </pre>
     *
     * <code>int32 segment = 12;</code>
     * @return The segment.
     */
    @Override
    public int getSegment() {
      return segment_;
    }

    public static final int PROGRESS_FIELD_NUMBER = 13;
    private int progress_;
    /**
     * <pre>
     * 技能进展  
     * </pre>
     *
     * <code>int32 progress = 13;</code>
     * @return The progress.
     */
    @Override
    public int getProgress() {
      return progress_;
    }

    public static final int ISOUTOFMANA_FIELD_NUMBER = 14;
    private int isOutofMana_;
    /**
     * <pre>
     * 是否没有蓝
     * </pre>
     *
     * <code>int32 isOutofMana = 14;</code>
     * @return The isOutofMana.
     */
    @Override
    public int getIsOutofMana() {
      return isOutofMana_;
    }

    public static final int STORAGE_FIELD_NUMBER = 15;
    private int storage_;
    /**
     * <pre>
     *叠层剩余使用次数
     * </pre>
     *
     * <code>int32 storage = 15;</code>
     * @return The storage.
     */
    @Override
    public int getStorage() {
      return storage_;
    }

    public static final int ATTACKANIMATION_FIELD_NUMBER = 16;
    private boolean attackAnimation_;
    /**
     * <pre>
     *普攻前摇	
     * </pre>
     *
     * <code>bool attackAnimation = 16;</code>
     * @return The attackAnimation.
     */
    @Override
    public boolean getAttackAnimation() {
      return attackAnimation_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (level_ != 0) {
        output.writeInt32(2, level_);
      }
      if (slot_ != 0) {
        output.writeInt32(3, slot_);
      }
      if (type_ != 0) {
        output.writeInt32(4, type_);
      }
      if (usable_ != false) {
        output.writeBool(5, usable_);
      }
      if (cd_ != 0) {
        output.writeInt32(6, cd_);
      }
      if (cdMax_ != 0) {
        output.writeInt32(7, cdMax_);
      }
      for (int i = 0; i < atkRange_.size(); i++) {
        output.writeMessage(8, atkRange_.get(i));
      }
      if (hpCost_ != 0) {
        output.writeInt32(9, hpCost_);
      }
      if (mpCost_ != 0) {
        output.writeInt32(10, mpCost_);
      }
      if (xpCost_ != 0) {
        output.writeInt32(11, xpCost_);
      }
      if (segment_ != 0) {
        output.writeInt32(12, segment_);
      }
      if (progress_ != 0) {
        output.writeInt32(13, progress_);
      }
      if (isOutofMana_ != 0) {
        output.writeInt32(14, isOutofMana_);
      }
      if (storage_ != 0) {
        output.writeInt32(15, storage_);
      }
      if (attackAnimation_ != false) {
        output.writeBool(16, attackAnimation_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (slot_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, slot_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (usable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, usable_);
      }
      if (cd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cd_);
      }
      if (cdMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cdMax_);
      }
      for (int i = 0; i < atkRange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, atkRange_.get(i));
      }
      if (hpCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, hpCost_);
      }
      if (mpCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mpCost_);
      }
      if (xpCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, xpCost_);
      }
      if (segment_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, segment_);
      }
      if (progress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, progress_);
      }
      if (isOutofMana_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isOutofMana_);
      }
      if (storage_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, storage_);
      }
      if (attackAnimation_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, attackAnimation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgAbilityState)) {
        return super.equals(obj);
      }
      MsgAbilityState other = (MsgAbilityState) obj;

      if (getId()
          != other.getId()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getSlot()
          != other.getSlot()) return false;
      if (getType()
          != other.getType()) return false;
      if (getUsable()
          != other.getUsable()) return false;
      if (getCd()
          != other.getCd()) return false;
      if (getCdMax()
          != other.getCdMax()) return false;
      if (!getAtkRangeList()
          .equals(other.getAtkRangeList())) return false;
      if (getHpCost()
          != other.getHpCost()) return false;
      if (getMpCost()
          != other.getMpCost()) return false;
      if (getXpCost()
          != other.getXpCost()) return false;
      if (getSegment()
          != other.getSegment()) return false;
      if (getProgress()
          != other.getProgress()) return false;
      if (getIsOutofMana()
          != other.getIsOutofMana()) return false;
      if (getStorage()
          != other.getStorage()) return false;
      if (getAttackAnimation()
          != other.getAttackAnimation()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + SLOT_FIELD_NUMBER;
      hash = (53 * hash) + getSlot();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + USABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUsable());
      hash = (37 * hash) + CD_FIELD_NUMBER;
      hash = (53 * hash) + getCd();
      hash = (37 * hash) + CDMAX_FIELD_NUMBER;
      hash = (53 * hash) + getCdMax();
      if (getAtkRangeCount() > 0) {
        hash = (37 * hash) + ATKRANGE_FIELD_NUMBER;
        hash = (53 * hash) + getAtkRangeList().hashCode();
      }
      hash = (37 * hash) + HPCOST_FIELD_NUMBER;
      hash = (53 * hash) + getHpCost();
      hash = (37 * hash) + MPCOST_FIELD_NUMBER;
      hash = (53 * hash) + getMpCost();
      hash = (37 * hash) + XPCOST_FIELD_NUMBER;
      hash = (53 * hash) + getXpCost();
      hash = (37 * hash) + SEGMENT_FIELD_NUMBER;
      hash = (53 * hash) + getSegment();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getProgress();
      hash = (37 * hash) + ISOUTOFMANA_FIELD_NUMBER;
      hash = (53 * hash) + getIsOutofMana();
      hash = (37 * hash) + STORAGE_FIELD_NUMBER;
      hash = (53 * hash) + getStorage();
      hash = (37 * hash) + ATTACKANIMATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAttackAnimation());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgAbilityState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgAbilityState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgAbilityState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgAbilityState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgAbilityState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgAbilityState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgAbilityState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgAbilityState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgAbilityState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgAbilityState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgAbilityState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgAbilityState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgAbilityState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 英雄技能属性
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgAbilityState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgAbilityState)
        MsgAbilityStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgAbilityState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgAbilityState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgAbilityState.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgAbilityState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAtkRangeFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        level_ = 0;

        slot_ = 0;

        type_ = 0;

        usable_ = false;

        cd_ = 0;

        cdMax_ = 0;

        if (atkRangeBuilder_ == null) {
          atkRange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          atkRangeBuilder_.clear();
        }
        hpCost_ = 0;

        mpCost_ = 0;

        xpCost_ = 0;

        segment_ = 0;

        progress_ = 0;

        isOutofMana_ = 0;

        storage_ = 0;

        attackAnimation_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgAbilityState_descriptor;
      }

      @Override
      public MsgAbilityState getDefaultInstanceForType() {
        return MsgAbilityState.getDefaultInstance();
      }

      @Override
      public MsgAbilityState build() {
        MsgAbilityState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgAbilityState buildPartial() {
        MsgAbilityState result = new MsgAbilityState(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.level_ = level_;
        result.slot_ = slot_;
        result.type_ = type_;
        result.usable_ = usable_;
        result.cd_ = cd_;
        result.cdMax_ = cdMax_;
        if (atkRangeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            atkRange_ = java.util.Collections.unmodifiableList(atkRange_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.atkRange_ = atkRange_;
        } else {
          result.atkRange_ = atkRangeBuilder_.build();
        }
        result.hpCost_ = hpCost_;
        result.mpCost_ = mpCost_;
        result.xpCost_ = xpCost_;
        result.segment_ = segment_;
        result.progress_ = progress_;
        result.isOutofMana_ = isOutofMana_;
        result.storage_ = storage_;
        result.attackAnimation_ = attackAnimation_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgAbilityState) {
          return mergeFrom((MsgAbilityState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgAbilityState other) {
        if (other == MsgAbilityState.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getSlot() != 0) {
          setSlot(other.getSlot());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getUsable() != false) {
          setUsable(other.getUsable());
        }
        if (other.getCd() != 0) {
          setCd(other.getCd());
        }
        if (other.getCdMax() != 0) {
          setCdMax(other.getCdMax());
        }
        if (atkRangeBuilder_ == null) {
          if (!other.atkRange_.isEmpty()) {
            if (atkRange_.isEmpty()) {
              atkRange_ = other.atkRange_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAtkRangeIsMutable();
              atkRange_.addAll(other.atkRange_);
            }
            onChanged();
          }
        } else {
          if (!other.atkRange_.isEmpty()) {
            if (atkRangeBuilder_.isEmpty()) {
              atkRangeBuilder_.dispose();
              atkRangeBuilder_ = null;
              atkRange_ = other.atkRange_;
              bitField0_ = (bitField0_ & ~0x00000001);
              atkRangeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAtkRangeFieldBuilder() : null;
            } else {
              atkRangeBuilder_.addAllMessages(other.atkRange_);
            }
          }
        }
        if (other.getHpCost() != 0) {
          setHpCost(other.getHpCost());
        }
        if (other.getMpCost() != 0) {
          setMpCost(other.getMpCost());
        }
        if (other.getXpCost() != 0) {
          setXpCost(other.getXpCost());
        }
        if (other.getSegment() != 0) {
          setSegment(other.getSegment());
        }
        if (other.getProgress() != 0) {
          setProgress(other.getProgress());
        }
        if (other.getIsOutofMana() != 0) {
          setIsOutofMana(other.getIsOutofMana());
        }
        if (other.getStorage() != 0) {
          setStorage(other.getStorage());
        }
        if (other.getAttackAnimation() != false) {
          setAttackAnimation(other.getAttackAnimation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgAbilityState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgAbilityState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * 技能ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 技能ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 2;</code>
       * @return The level.
       */
      @Override
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 2;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int slot_ ;
      /**
       * <pre>
       * 类型(0:代表普攻, 其它数值:代表技能1~n)
       * </pre>
       *
       * <code>int32 slot = 3;</code>
       * @return The slot.
       */
      @Override
      public int getSlot() {
        return slot_;
      }
      /**
       * <pre>
       * 类型(0:代表普攻, 其它数值:代表技能1~n)
       * </pre>
       *
       * <code>int32 slot = 3;</code>
       * @param value The slot to set.
       * @return This builder for chaining.
       */
      public Builder setSlot(int value) {
        
        slot_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 类型(0:代表普攻, 其它数值:代表技能1~n)
       * </pre>
       *
       * <code>int32 slot = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlot() {
        
        slot_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 技能属于哪种类型
       * </pre>
       *
       * <code>int32 type = 4;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 技能属于哪种类型
       * </pre>
       *
       * <code>int32 type = 4;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能属于哪种类型
       * </pre>
       *
       * <code>int32 type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private boolean usable_ ;
      /**
       * <pre>
       * 能否使用
       * </pre>
       *
       * <code>bool usable = 5;</code>
       * @return The usable.
       */
      @Override
      public boolean getUsable() {
        return usable_;
      }
      /**
       * <pre>
       * 能否使用
       * </pre>
       *
       * <code>bool usable = 5;</code>
       * @param value The usable to set.
       * @return This builder for chaining.
       */
      public Builder setUsable(boolean value) {
        
        usable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 能否使用
       * </pre>
       *
       * <code>bool usable = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsable() {
        
        usable_ = false;
        onChanged();
        return this;
      }

      private int cd_ ;
      /**
       * <pre>
       * 当前冷却时间
       * </pre>
       *
       * <code>int32 cd = 6;</code>
       * @return The cd.
       */
      @Override
      public int getCd() {
        return cd_;
      }
      /**
       * <pre>
       * 当前冷却时间
       * </pre>
       *
       * <code>int32 cd = 6;</code>
       * @param value The cd to set.
       * @return This builder for chaining.
       */
      public Builder setCd(int value) {
        
        cd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前冷却时间
       * </pre>
       *
       * <code>int32 cd = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCd() {
        
        cd_ = 0;
        onChanged();
        return this;
      }

      private int cdMax_ ;
      /**
       * <pre>
       * 最大冷却时间
       * </pre>
       *
       * <code>int32 cdMax = 7;</code>
       * @return The cdMax.
       */
      @Override
      public int getCdMax() {
        return cdMax_;
      }
      /**
       * <pre>
       * 最大冷却时间
       * </pre>
       *
       * <code>int32 cdMax = 7;</code>
       * @param value The cdMax to set.
       * @return This builder for chaining.
       */
      public Builder setCdMax(int value) {
        
        cdMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最大冷却时间
       * </pre>
       *
       * <code>int32 cdMax = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCdMax() {
        
        cdMax_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgSkillRange> atkRange_ =
        java.util.Collections.emptyList();
      private void ensureAtkRangeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          atkRange_ = new java.util.ArrayList<MsgSkillRange>(atkRange_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgSkillRange, MsgSkillRange.Builder, MsgSkillRangeOrBuilder> atkRangeBuilder_;

      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public java.util.List<MsgSkillRange> getAtkRangeList() {
        if (atkRangeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(atkRange_);
        } else {
          return atkRangeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public int getAtkRangeCount() {
        if (atkRangeBuilder_ == null) {
          return atkRange_.size();
        } else {
          return atkRangeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public MsgSkillRange getAtkRange(int index) {
        if (atkRangeBuilder_ == null) {
          return atkRange_.get(index);
        } else {
          return atkRangeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder setAtkRange(
          int index, MsgSkillRange value) {
        if (atkRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkRangeIsMutable();
          atkRange_.set(index, value);
          onChanged();
        } else {
          atkRangeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder setAtkRange(
          int index, MsgSkillRange.Builder builderForValue) {
        if (atkRangeBuilder_ == null) {
          ensureAtkRangeIsMutable();
          atkRange_.set(index, builderForValue.build());
          onChanged();
        } else {
          atkRangeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder addAtkRange(MsgSkillRange value) {
        if (atkRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkRangeIsMutable();
          atkRange_.add(value);
          onChanged();
        } else {
          atkRangeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder addAtkRange(
          int index, MsgSkillRange value) {
        if (atkRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtkRangeIsMutable();
          atkRange_.add(index, value);
          onChanged();
        } else {
          atkRangeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder addAtkRange(
          MsgSkillRange.Builder builderForValue) {
        if (atkRangeBuilder_ == null) {
          ensureAtkRangeIsMutable();
          atkRange_.add(builderForValue.build());
          onChanged();
        } else {
          atkRangeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder addAtkRange(
          int index, MsgSkillRange.Builder builderForValue) {
        if (atkRangeBuilder_ == null) {
          ensureAtkRangeIsMutable();
          atkRange_.add(index, builderForValue.build());
          onChanged();
        } else {
          atkRangeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder addAllAtkRange(
          Iterable<? extends MsgSkillRange> values) {
        if (atkRangeBuilder_ == null) {
          ensureAtkRangeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, atkRange_);
          onChanged();
        } else {
          atkRangeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder clearAtkRange() {
        if (atkRangeBuilder_ == null) {
          atkRange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          atkRangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public Builder removeAtkRange(int index) {
        if (atkRangeBuilder_ == null) {
          ensureAtkRangeIsMutable();
          atkRange_.remove(index);
          onChanged();
        } else {
          atkRangeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public MsgSkillRange.Builder getAtkRangeBuilder(
          int index) {
        return getAtkRangeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public MsgSkillRangeOrBuilder getAtkRangeOrBuilder(
          int index) {
        if (atkRangeBuilder_ == null) {
          return atkRange_.get(index);  } else {
          return atkRangeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public java.util.List<? extends MsgSkillRangeOrBuilder>
           getAtkRangeOrBuilderList() {
        if (atkRangeBuilder_ != null) {
          return atkRangeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(atkRange_);
        }
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public MsgSkillRange.Builder addAtkRangeBuilder() {
        return getAtkRangeFieldBuilder().addBuilder(
            MsgSkillRange.getDefaultInstance());
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public MsgSkillRange.Builder addAtkRangeBuilder(
          int index) {
        return getAtkRangeFieldBuilder().addBuilder(
            index, MsgSkillRange.getDefaultInstance());
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>repeated .shuguang.MsgSkillRange atkRange = 8;</code>
       */
      public java.util.List<MsgSkillRange.Builder>
           getAtkRangeBuilderList() {
        return getAtkRangeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgSkillRange, MsgSkillRange.Builder, MsgSkillRangeOrBuilder>
          getAtkRangeFieldBuilder() {
        if (atkRangeBuilder_ == null) {
          atkRangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgSkillRange, MsgSkillRange.Builder, MsgSkillRangeOrBuilder>(
                  atkRange_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          atkRange_ = null;
        }
        return atkRangeBuilder_;
      }

      private int hpCost_ ;
      /**
       * <pre>
       * 消耗血量
       * </pre>
       *
       * <code>int32 hpCost = 9;</code>
       * @return The hpCost.
       */
      @Override
      public int getHpCost() {
        return hpCost_;
      }
      /**
       * <pre>
       * 消耗血量
       * </pre>
       *
       * <code>int32 hpCost = 9;</code>
       * @param value The hpCost to set.
       * @return This builder for chaining.
       */
      public Builder setHpCost(int value) {
        
        hpCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消耗血量
       * </pre>
       *
       * <code>int32 hpCost = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHpCost() {
        
        hpCost_ = 0;
        onChanged();
        return this;
      }

      private int mpCost_ ;
      /**
       * <pre>
       * 蓝量消耗
       * </pre>
       *
       * <code>int32 mpCost = 10;</code>
       * @return The mpCost.
       */
      @Override
      public int getMpCost() {
        return mpCost_;
      }
      /**
       * <pre>
       * 蓝量消耗
       * </pre>
       *
       * <code>int32 mpCost = 10;</code>
       * @param value The mpCost to set.
       * @return This builder for chaining.
       */
      public Builder setMpCost(int value) {
        
        mpCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 蓝量消耗
       * </pre>
       *
       * <code>int32 mpCost = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMpCost() {
        
        mpCost_ = 0;
        onChanged();
        return this;
      }

      private int xpCost_ ;
      /**
       * <pre>
       * 能量消耗
       * </pre>
       *
       * <code>int32 xpCost = 11;</code>
       * @return The xpCost.
       */
      @Override
      public int getXpCost() {
        return xpCost_;
      }
      /**
       * <pre>
       * 能量消耗
       * </pre>
       *
       * <code>int32 xpCost = 11;</code>
       * @param value The xpCost to set.
       * @return This builder for chaining.
       */
      public Builder setXpCost(int value) {
        
        xpCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 能量消耗
       * </pre>
       *
       * <code>int32 xpCost = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearXpCost() {
        
        xpCost_ = 0;
        onChanged();
        return this;
      }

      private int segment_ ;
      /**
       * <pre>
       * 当前属于第几段
       * </pre>
       *
       * <code>int32 segment = 12;</code>
       * @return The segment.
       */
      @Override
      public int getSegment() {
        return segment_;
      }
      /**
       * <pre>
       * 当前属于第几段
       * </pre>
       *
       * <code>int32 segment = 12;</code>
       * @param value The segment to set.
       * @return This builder for chaining.
       */
      public Builder setSegment(int value) {
        
        segment_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前属于第几段
       * </pre>
       *
       * <code>int32 segment = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSegment() {
        
        segment_ = 0;
        onChanged();
        return this;
      }

      private int progress_ ;
      /**
       * <pre>
       * 技能进展  
       * </pre>
       *
       * <code>int32 progress = 13;</code>
       * @return The progress.
       */
      @Override
      public int getProgress() {
        return progress_;
      }
      /**
       * <pre>
       * 技能进展  
       * </pre>
       *
       * <code>int32 progress = 13;</code>
       * @param value The progress to set.
       * @return This builder for chaining.
       */
      public Builder setProgress(int value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 技能进展  
       * </pre>
       *
       * <code>int32 progress = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgress() {
        
        progress_ = 0;
        onChanged();
        return this;
      }

      private int isOutofMana_ ;
      /**
       * <pre>
       * 是否没有蓝
       * </pre>
       *
       * <code>int32 isOutofMana = 14;</code>
       * @return The isOutofMana.
       */
      @Override
      public int getIsOutofMana() {
        return isOutofMana_;
      }
      /**
       * <pre>
       * 是否没有蓝
       * </pre>
       *
       * <code>int32 isOutofMana = 14;</code>
       * @param value The isOutofMana to set.
       * @return This builder for chaining.
       */
      public Builder setIsOutofMana(int value) {
        
        isOutofMana_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否没有蓝
       * </pre>
       *
       * <code>int32 isOutofMana = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsOutofMana() {
        
        isOutofMana_ = 0;
        onChanged();
        return this;
      }

      private int storage_ ;
      /**
       * <pre>
       *叠层剩余使用次数
       * </pre>
       *
       * <code>int32 storage = 15;</code>
       * @return The storage.
       */
      @Override
      public int getStorage() {
        return storage_;
      }
      /**
       * <pre>
       *叠层剩余使用次数
       * </pre>
       *
       * <code>int32 storage = 15;</code>
       * @param value The storage to set.
       * @return This builder for chaining.
       */
      public Builder setStorage(int value) {
        
        storage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *叠层剩余使用次数
       * </pre>
       *
       * <code>int32 storage = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearStorage() {
        
        storage_ = 0;
        onChanged();
        return this;
      }

      private boolean attackAnimation_ ;
      /**
       * <pre>
       *普攻前摇	
       * </pre>
       *
       * <code>bool attackAnimation = 16;</code>
       * @return The attackAnimation.
       */
      @Override
      public boolean getAttackAnimation() {
        return attackAnimation_;
      }
      /**
       * <pre>
       *普攻前摇	
       * </pre>
       *
       * <code>bool attackAnimation = 16;</code>
       * @param value The attackAnimation to set.
       * @return This builder for chaining.
       */
      public Builder setAttackAnimation(boolean value) {
        
        attackAnimation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *普攻前摇	
       * </pre>
       *
       * <code>bool attackAnimation = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackAnimation() {
        
        attackAnimation_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgAbilityState)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgAbilityState)
    private static final MsgAbilityState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgAbilityState();
    }

    public static MsgAbilityState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgAbilityState>
        PARSER = new com.google.protobuf.AbstractParser<MsgAbilityState>() {
      @Override
      public MsgAbilityState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgAbilityState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgAbilityState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgAbilityState> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgAbilityState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgActorStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgActorState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 阵营
     * </pre>
     *
     * <code>int32 campId = 1;</code>
     * @return The campId.
     */
    int getCampId();

    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     * @return The location.
     */
    VInt2D getLocation();
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     */
    VInt2DOrBuilder getLocationOrBuilder();

    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     * @return Whether the direction field is set.
     */
    boolean hasDirection();
    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     * @return The direction.
     */
    VInt2D getDirection();
    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     */
    VInt2DOrBuilder getDirectionOrBuilder();

    /**
     * <pre>
     * 血量
     * </pre>
     *
     * <code>int32 hp = 4;</code>
     * @return The hp.
     */
    int getHp();

    /**
     * <pre>
     * 最大血量
     * </pre>
     *
     * <code>int32 hpMax = 5;</code>
     * @return The hpMax.
     */
    int getHpMax();

    /**
     * <pre>
     * 能量
     * </pre>
     *
     * <code>int32 energy = 6;</code>
     * @return The energy.
     */
    int getEnergy();

    /**
     * <pre>
     * 能量最大值
     * </pre>
     *
     * <code>int32 energyMax = 7;</code>
     * @return The energyMax.
     */
    int getEnergyMax();

    /**
     * <pre>
     * 蓝量
     * </pre>
     *
     * <code>int32 mana = 8;</code>
     * @return The mana.
     */
    int getMana();

    /**
     * <pre>
     * 蓝量最大值
     * </pre>
     *
     * <code>int32 manaMax = 9;</code>
     * @return The manaMax.
     */
    int getManaMax();

    /**
     * <pre>
     * 怒气值
     * </pre>
     *
     * <code>int32 anger = 10;</code>
     * @return The anger.
     */
    int getAnger();

    /**
     * <pre>
     * 怒气最大值
     * </pre>
     *
     * <code>int32 angerMax = 11;</code>
     * @return The angerMax.
     */
    int getAngerMax();

    /**
     * <pre>
     * 等级
     * </pre>
     *
     * <code>int32 level = 12;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <pre>
     * 经验
     * </pre>
     *
     * <code>int32 exp = 13;</code>
     * @return The exp.
     */
    int getExp();

    /**
     * <pre>
     * 当前金钱
     * </pre>
     *
     * <code>int32 curGold = 14;</code>
     * @return The curGold.
     */
    int getCurGold();

    /**
     * <pre>
     * 累积金钱
     * </pre>
     *
     * <code>int32 gold = 15;</code>
     * @return The gold.
     */
    int getGold();

    /**
     * <pre>
     * 物理攻击
     * </pre>
     *
     * <code>int32 phyAtk = 16;</code>
     * @return The phyAtk.
     */
    int getPhyAtk();

    /**
     * <pre>
     * 物理防御
     * </pre>
     *
     * <code>int32 phyDef = 17;</code>
     * @return The phyDef.
     */
    int getPhyDef();

    /**
     * <pre>
     * 魔法攻击
     * </pre>
     *
     * <code>int32 mgcAtk = 18;</code>
     * @return The mgcAtk.
     */
    int getMgcAtk();

    /**
     * <pre>
     * 魔法防御
     * </pre>
     *
     * <code>int32 mgcDef = 19;</code>
     * @return The mgcDef.
     */
    int getMgcDef();

    /**
     * <pre>
     * 韧性
     * </pre>
     *
     * <code>int32 toughness = 20;</code>
     * @return The toughness.
     */
    int getToughness();

    /**
     * <pre>
     * 冷却缩减
     * </pre>
     *
     * <code>int32 cdr = 21;</code>
     * @return The cdr.
     */
    int getCdr();

    /**
     * <pre>
     * 复活时间
     * </pre>
     *
     * <code>int32 respawn = 22;</code>
     * @return The respawn.
     */
    int getRespawn();

    /**
     * <pre>
     * 是否能被敌人可见
     * </pre>
     *
     * <code>bool isVisiable = 23;</code>
     * @return The isVisiable.
     */
    boolean getIsVisiable();

    /**
     * <pre>
     * 移动速度
     * </pre>
     *
     * <code>int32 moveSpeed = 24;</code>
     * @return The moveSpeed.
     */
    int getMoveSpeed();

    /**
     * <pre>
     * 击杀数
     * </pre>
     *
     * <code>int32 kill = 25;</code>
     * @return The kill.
     */
    int getKill();

    /**
     * <pre>
     * 死亡数
     * </pre>
     *
     * <code>int32 dead = 26;</code>
     * @return The dead.
     */
    int getDead();

    /**
     * <pre>
     * 助攻数
     * </pre>
     *
     * <code>int32 assist = 27;</code>
     * @return The assist.
     */
    int getAssist();

    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @return A list containing the curSkillID.
     */
    java.util.List<Integer> getCurSkillIDList();
    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @return The count of curSkillID.
     */
    int getCurSkillIDCount();
    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @param index The index of the element to return.
     * @return The curSkillID at the given index.
     */
    int getCurSkillID(int index);

    /**
     * <pre>
     * 生命恢复
     * </pre>
     *
     * <code>int32 hpRecover = 29;</code>
     * @return The hpRecover.
     */
    int getHpRecover();

    /**
     * <pre>
     * 魔法恢复
     * </pre>
     *
     * <code>int32 energyRecover = 30;</code>
     * @return The energyRecover.
     */
    int getEnergyRecover();

    /**
     * <pre>
     * 攻击速度
     * </pre>
     *
     * <code>int32 atkSpeed = 31;</code>
     * @return The atkSpeed.
     */
    int getAtkSpeed();

    /**
     * <pre>
     * 暴击概率
     * </pre>
     *
     * <code>int32 crt = 32;</code>
     * @return The crt.
     */
    int getCrt();

    /**
     * <pre>
     * 暴击倍数
     * </pre>
     *
     * <code>int32 crtTimes = 33;</code>
     * @return The crtTimes.
     */
    int getCrtTimes();

    /**
     * <pre>
     * 物理护甲穿透
     * </pre>
     *
     * <code>int32 phyThrough = 34;</code>
     * @return The phyThrough.
     */
    int getPhyThrough();

    /**
     * <pre>
     * 魔法护甲穿透
     * </pre>
     *
     * <code>int32 magThrough = 35;</code>
     * @return The magThrough.
     */
    int getMagThrough();

    /**
     * <pre>
     * 物理护甲穿透百分比
     * </pre>
     *
     * <code>int32 phyThroughPercent = 36;</code>
     * @return The phyThroughPercent.
     */
    int getPhyThroughPercent();

    /**
     * <pre>
     * 物理护甲穿透百分比
     * </pre>
     *
     * <code>int32 magThroughPercent = 37;</code>
     * @return The magThroughPercent.
     */
    int getMagThroughPercent();

    /**
     * <pre>
     * 魔法吸血
     * </pre>
     *
     * <code>int32 spellSorb = 38;</code>
     * @return The spellSorb.
     */
    int getSpellSorb();

    /**
     * <pre>
     * 物理吸血 
     * </pre>
     *
     * <code>int32 atkSorb = 39;</code>
     * @return The atkSorb.
     */
    int getAtkSorb();

    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @return A list containing the exState.
     */
    java.util.List<Integer> getExStateList();
    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @return The count of exState.
     */
    int getExStateCount();
    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @param index The index of the element to return.
     * @return The exState at the given index.
     */
    int getExState(int index);

    /**
     * <pre>
     * 护盾最大值得
     * </pre>
     *
     * <code>int32 shield = 41;</code>
     * @return The shield.
     */
    int getShield();

    /**
     * <pre>
     * 物理护盾
     * </pre>
     *
     * <code>int32 shieldPhy = 42;</code>
     * @return The shieldPhy.
     */
    int getShieldPhy();

    /**
     * <pre>
     * 魔法护盾
     * </pre>
     *
     * <code>int32 shieldMgc = 43;</code>
     * @return The shieldMgc.
     */
    int getShieldMgc();

    /**
     * <pre>
     * 通用护盾
     * </pre>
     *
     * <code>int32 shieldAll = 44;</code>
     * @return The shieldAll.
     */
    int getShieldAll();

    /**
     * <pre>
     * 物理护盾
     * </pre>
     *
     * <code>int32 shieldPhyMax = 45;</code>
     * @return The shieldPhyMax.
     */
    int getShieldPhyMax();

    /**
     * <pre>
     * 魔法护盾
     * </pre>
     *
     * <code>int32 shieldMgcMax = 46;</code>
     * @return The shieldMgcMax.
     */
    int getShieldMgcMax();

    /**
     * <pre>
     * 通用护盾
     * </pre>
     *
     * <code>int32 shieldAllMax = 47;</code>
     * @return The shieldAllMax.
     */
    int getShieldAllMax();

    /**
     * <pre>
     * 正在锁定目标中
     * </pre>
     *
     * <code>int64 headIconLockOnTargetIid = 48;</code>
     * @return The headIconLockOnTargetIid.
     */
    long getHeadIconLockOnTargetIid();

    /**
     * <pre>
     * 追随目标Iid，与lockOnTargetIid不同，可以是友方
     * </pre>
     *
     * <code>int32 chaseTargetIid = 49;</code>
     * @return The chaseTargetIid.
     */
    int getChaseTargetIid();

    /**
     * <pre>
     * 正在追击移动
     * </pre>
     *
     * <code>bool isChaseMove = 50;</code>
     * @return The isChaseMove.
     */
    boolean getIsChaseMove();

    /**
     * <pre>
     * 是否在自动攻击中
     * </pre>
     *
     * <code>bool isAutoAttacking = 51;</code>
     * @return The isAutoAttacking.
     */
    boolean getIsAutoAttacking();

    /**
     * <pre>
     * 锁定攻击目标，一定是敌人
     * </pre>
     *
     * <code>int32 lockOnTargetIid = 52;</code>
     * @return The lockOnTargetIid.
     */
    int getLockOnTargetIid();

    /**
     * <code>bool isDead = 53;</code>
     * @return The isDead.
     */
    boolean getIsDead();

    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    java.util.List<Cmd.MsgBuffState>
        getBuffStateList();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    Cmd.MsgBuffState getBuffState(int index);
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    int getBuffStateCount();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
        getBuffStateOrBuilderList();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
        int index);

    /**
     * <pre>
     * 子弹数目
     * </pre>
     *
     * <code>int32 bulletNum = 55;</code>
     * @return The bulletNum.
     */
    int getBulletNum();

    /**
     * <pre>
     * 传送阵CD
     * </pre>
     *
     * <code>int64 portalCD = 56;</code>
     * @return The portalCD.
     */
    long getPortalCD();

    /**
     * <pre>
     * 是否可以拾取金币
     * </pre>
     *
     * <code>bool canEatCoin = 57;</code>
     * @return The canEatCoin.
     */
    boolean getCanEatCoin();

    /**
     * <pre>
     *回城技能使用成功
     * </pre>
     *
     * <code>bool springPortalSuccess = 58;</code>
     * @return The springPortalSuccess.
     */
    boolean getSpringPortalSuccess();

    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @return A list containing the delcurSkillID.
     */
    java.util.List<Integer> getDelcurSkillIDList();
    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @return The count of delcurSkillID.
     */
    int getDelcurSkillIDCount();
    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @param index The index of the element to return.
     * @return The delcurSkillID at the given index.
     */
    int getDelcurSkillID(int index);

    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @return A list containing the delexState.
     */
    java.util.List<Integer> getDelexStateList();
    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @return The count of delexState.
     */
    int getDelexStateCount();
    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @param index The index of the element to return.
     * @return The delexState at the given index.
     */
    int getDelexState(int index);

    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @return A list containing the delbuffs.
     */
    java.util.List<Integer> getDelbuffsList();
    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @return The count of delbuffs.
     */
    int getDelbuffsCount();
    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @param index The index of the element to return.
     * @return The delbuffs at the given index.
     */
    int getDelbuffs(int index);
  }
  /**
   * <pre>
   * 英雄基础属性
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgActorState}
   */
  public static final class MsgActorState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgActorState)
      MsgActorStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgActorState.newBuilder() to construct.
    private MsgActorState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgActorState() {
      curSkillID_ = emptyIntList();
      exState_ = emptyIntList();
      buffState_ = java.util.Collections.emptyList();
      delcurSkillID_ = emptyIntList();
      delexState_ = emptyIntList();
      delbuffs_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgActorState();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgActorState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              campId_ = input.readInt32();
              break;
            }
            case 18: {
              VInt2D.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(VInt2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              VInt2D.Builder subBuilder = null;
              if (direction_ != null) {
                subBuilder = direction_.toBuilder();
              }
              direction_ = input.readMessage(VInt2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(direction_);
                direction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              hp_ = input.readInt32();
              break;
            }
            case 40: {

              hpMax_ = input.readInt32();
              break;
            }
            case 48: {

              energy_ = input.readInt32();
              break;
            }
            case 56: {

              energyMax_ = input.readInt32();
              break;
            }
            case 64: {

              mana_ = input.readInt32();
              break;
            }
            case 72: {

              manaMax_ = input.readInt32();
              break;
            }
            case 80: {

              anger_ = input.readInt32();
              break;
            }
            case 88: {

              angerMax_ = input.readInt32();
              break;
            }
            case 96: {

              level_ = input.readInt32();
              break;
            }
            case 104: {

              exp_ = input.readInt32();
              break;
            }
            case 112: {

              curGold_ = input.readInt32();
              break;
            }
            case 120: {

              gold_ = input.readInt32();
              break;
            }
            case 128: {

              phyAtk_ = input.readInt32();
              break;
            }
            case 136: {

              phyDef_ = input.readInt32();
              break;
            }
            case 144: {

              mgcAtk_ = input.readInt32();
              break;
            }
            case 152: {

              mgcDef_ = input.readInt32();
              break;
            }
            case 160: {

              toughness_ = input.readInt32();
              break;
            }
            case 168: {

              cdr_ = input.readInt32();
              break;
            }
            case 176: {

              respawn_ = input.readInt32();
              break;
            }
            case 184: {

              isVisiable_ = input.readBool();
              break;
            }
            case 192: {

              moveSpeed_ = input.readInt32();
              break;
            }
            case 200: {

              kill_ = input.readInt32();
              break;
            }
            case 208: {

              dead_ = input.readInt32();
              break;
            }
            case 216: {

              assist_ = input.readInt32();
              break;
            }
            case 224: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                curSkillID_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              curSkillID_.addInt(input.readInt32());
              break;
            }
            case 226: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                curSkillID_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                curSkillID_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 232: {

              hpRecover_ = input.readInt32();
              break;
            }
            case 240: {

              energyRecover_ = input.readInt32();
              break;
            }
            case 248: {

              atkSpeed_ = input.readInt32();
              break;
            }
            case 256: {

              crt_ = input.readInt32();
              break;
            }
            case 264: {

              crtTimes_ = input.readInt32();
              break;
            }
            case 272: {

              phyThrough_ = input.readInt32();
              break;
            }
            case 280: {

              magThrough_ = input.readInt32();
              break;
            }
            case 288: {

              phyThroughPercent_ = input.readInt32();
              break;
            }
            case 296: {

              magThroughPercent_ = input.readInt32();
              break;
            }
            case 304: {

              spellSorb_ = input.readInt32();
              break;
            }
            case 312: {

              atkSorb_ = input.readInt32();
              break;
            }
            case 320: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                exState_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              exState_.addInt(input.readInt32());
              break;
            }
            case 322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                exState_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                exState_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 328: {

              shield_ = input.readInt32();
              break;
            }
            case 336: {

              shieldPhy_ = input.readInt32();
              break;
            }
            case 344: {

              shieldMgc_ = input.readInt32();
              break;
            }
            case 352: {

              shieldAll_ = input.readInt32();
              break;
            }
            case 360: {

              shieldPhyMax_ = input.readInt32();
              break;
            }
            case 368: {

              shieldMgcMax_ = input.readInt32();
              break;
            }
            case 376: {

              shieldAllMax_ = input.readInt32();
              break;
            }
            case 384: {

              headIconLockOnTargetIid_ = input.readInt64();
              break;
            }
            case 392: {

              chaseTargetIid_ = input.readInt32();
              break;
            }
            case 400: {

              isChaseMove_ = input.readBool();
              break;
            }
            case 408: {

              isAutoAttacking_ = input.readBool();
              break;
            }
            case 416: {

              lockOnTargetIid_ = input.readInt32();
              break;
            }
            case 424: {

              isDead_ = input.readBool();
              break;
            }
            case 434: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                buffState_ = new java.util.ArrayList<Cmd.MsgBuffState>();
                mutable_bitField0_ |= 0x00000004;
              }
              buffState_.add(
                  input.readMessage(Cmd.MsgBuffState.parser(), extensionRegistry));
              break;
            }
            case 440: {

              bulletNum_ = input.readInt32();
              break;
            }
            case 448: {

              portalCD_ = input.readInt64();
              break;
            }
            case 456: {

              canEatCoin_ = input.readBool();
              break;
            }
            case 464: {

              springPortalSuccess_ = input.readBool();
              break;
            }
            case 80224: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                delcurSkillID_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              delcurSkillID_.addInt(input.readInt32());
              break;
            }
            case 80226: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                delcurSkillID_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                delcurSkillID_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80320: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                delexState_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              delexState_.addInt(input.readInt32());
              break;
            }
            case 80322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                delexState_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                delexState_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80400: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                delbuffs_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              delbuffs_.addInt(input.readInt32());
              break;
            }
            case 80402: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                delbuffs_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                delbuffs_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          curSkillID_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          exState_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          buffState_ = java.util.Collections.unmodifiableList(buffState_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          delcurSkillID_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          delexState_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          delbuffs_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgActorState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgActorState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgActorState.class, Builder.class);
    }

    public static final int CAMPID_FIELD_NUMBER = 1;
    private int campId_;
    /**
     * <pre>
     * 阵营
     * </pre>
     *
     * <code>int32 campId = 1;</code>
     * @return The campId.
     */
    @Override
    public int getCampId() {
      return campId_;
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private VInt2D location_;
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     * @return Whether the location field is set.
     */
    @Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     * @return The location.
     */
    @Override
    public VInt2D getLocation() {
      return location_ == null ? VInt2D.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>.shuguang.VInt2D location = 2;</code>
     */
    @Override
    public VInt2DOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int DIRECTION_FIELD_NUMBER = 3;
    private VInt2D direction_;
    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     * @return Whether the direction field is set.
     */
    @Override
    public boolean hasDirection() {
      return direction_ != null;
    }
    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     * @return The direction.
     */
    @Override
    public VInt2D getDirection() {
      return direction_ == null ? VInt2D.getDefaultInstance() : direction_;
    }
    /**
     * <pre>
     * 朝向
     * </pre>
     *
     * <code>.shuguang.VInt2D direction = 3;</code>
     */
    @Override
    public VInt2DOrBuilder getDirectionOrBuilder() {
      return getDirection();
    }

    public static final int HP_FIELD_NUMBER = 4;
    private int hp_;
    /**
     * <pre>
     * 血量
     * </pre>
     *
     * <code>int32 hp = 4;</code>
     * @return The hp.
     */
    @Override
    public int getHp() {
      return hp_;
    }

    public static final int HPMAX_FIELD_NUMBER = 5;
    private int hpMax_;
    /**
     * <pre>
     * 最大血量
     * </pre>
     *
     * <code>int32 hpMax = 5;</code>
     * @return The hpMax.
     */
    @Override
    public int getHpMax() {
      return hpMax_;
    }

    public static final int ENERGY_FIELD_NUMBER = 6;
    private int energy_;
    /**
     * <pre>
     * 能量
     * </pre>
     *
     * <code>int32 energy = 6;</code>
     * @return The energy.
     */
    @Override
    public int getEnergy() {
      return energy_;
    }

    public static final int ENERGYMAX_FIELD_NUMBER = 7;
    private int energyMax_;
    /**
     * <pre>
     * 能量最大值
     * </pre>
     *
     * <code>int32 energyMax = 7;</code>
     * @return The energyMax.
     */
    @Override
    public int getEnergyMax() {
      return energyMax_;
    }

    public static final int MANA_FIELD_NUMBER = 8;
    private int mana_;
    /**
     * <pre>
     * 蓝量
     * </pre>
     *
     * <code>int32 mana = 8;</code>
     * @return The mana.
     */
    @Override
    public int getMana() {
      return mana_;
    }

    public static final int MANAMAX_FIELD_NUMBER = 9;
    private int manaMax_;
    /**
     * <pre>
     * 蓝量最大值
     * </pre>
     *
     * <code>int32 manaMax = 9;</code>
     * @return The manaMax.
     */
    @Override
    public int getManaMax() {
      return manaMax_;
    }

    public static final int ANGER_FIELD_NUMBER = 10;
    private int anger_;
    /**
     * <pre>
     * 怒气值
     * </pre>
     *
     * <code>int32 anger = 10;</code>
     * @return The anger.
     */
    @Override
    public int getAnger() {
      return anger_;
    }

    public static final int ANGERMAX_FIELD_NUMBER = 11;
    private int angerMax_;
    /**
     * <pre>
     * 怒气最大值
     * </pre>
     *
     * <code>int32 angerMax = 11;</code>
     * @return The angerMax.
     */
    @Override
    public int getAngerMax() {
      return angerMax_;
    }

    public static final int LEVEL_FIELD_NUMBER = 12;
    private int level_;
    /**
     * <pre>
     * 等级
     * </pre>
     *
     * <code>int32 level = 12;</code>
     * @return The level.
     */
    @Override
    public int getLevel() {
      return level_;
    }

    public static final int EXP_FIELD_NUMBER = 13;
    private int exp_;
    /**
     * <pre>
     * 经验
     * </pre>
     *
     * <code>int32 exp = 13;</code>
     * @return The exp.
     */
    @Override
    public int getExp() {
      return exp_;
    }

    public static final int CURGOLD_FIELD_NUMBER = 14;
    private int curGold_;
    /**
     * <pre>
     * 当前金钱
     * </pre>
     *
     * <code>int32 curGold = 14;</code>
     * @return The curGold.
     */
    @Override
    public int getCurGold() {
      return curGold_;
    }

    public static final int GOLD_FIELD_NUMBER = 15;
    private int gold_;
    /**
     * <pre>
     * 累积金钱
     * </pre>
     *
     * <code>int32 gold = 15;</code>
     * @return The gold.
     */
    @Override
    public int getGold() {
      return gold_;
    }

    public static final int PHYATK_FIELD_NUMBER = 16;
    private int phyAtk_;
    /**
     * <pre>
     * 物理攻击
     * </pre>
     *
     * <code>int32 phyAtk = 16;</code>
     * @return The phyAtk.
     */
    @Override
    public int getPhyAtk() {
      return phyAtk_;
    }

    public static final int PHYDEF_FIELD_NUMBER = 17;
    private int phyDef_;
    /**
     * <pre>
     * 物理防御
     * </pre>
     *
     * <code>int32 phyDef = 17;</code>
     * @return The phyDef.
     */
    @Override
    public int getPhyDef() {
      return phyDef_;
    }

    public static final int MGCATK_FIELD_NUMBER = 18;
    private int mgcAtk_;
    /**
     * <pre>
     * 魔法攻击
     * </pre>
     *
     * <code>int32 mgcAtk = 18;</code>
     * @return The mgcAtk.
     */
    @Override
    public int getMgcAtk() {
      return mgcAtk_;
    }

    public static final int MGCDEF_FIELD_NUMBER = 19;
    private int mgcDef_;
    /**
     * <pre>
     * 魔法防御
     * </pre>
     *
     * <code>int32 mgcDef = 19;</code>
     * @return The mgcDef.
     */
    @Override
    public int getMgcDef() {
      return mgcDef_;
    }

    public static final int TOUGHNESS_FIELD_NUMBER = 20;
    private int toughness_;
    /**
     * <pre>
     * 韧性
     * </pre>
     *
     * <code>int32 toughness = 20;</code>
     * @return The toughness.
     */
    @Override
    public int getToughness() {
      return toughness_;
    }

    public static final int CDR_FIELD_NUMBER = 21;
    private int cdr_;
    /**
     * <pre>
     * 冷却缩减
     * </pre>
     *
     * <code>int32 cdr = 21;</code>
     * @return The cdr.
     */
    @Override
    public int getCdr() {
      return cdr_;
    }

    public static final int RESPAWN_FIELD_NUMBER = 22;
    private int respawn_;
    /**
     * <pre>
     * 复活时间
     * </pre>
     *
     * <code>int32 respawn = 22;</code>
     * @return The respawn.
     */
    @Override
    public int getRespawn() {
      return respawn_;
    }

    public static final int ISVISIABLE_FIELD_NUMBER = 23;
    private boolean isVisiable_;
    /**
     * <pre>
     * 是否能被敌人可见
     * </pre>
     *
     * <code>bool isVisiable = 23;</code>
     * @return The isVisiable.
     */
    @Override
    public boolean getIsVisiable() {
      return isVisiable_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 24;
    private int moveSpeed_;
    /**
     * <pre>
     * 移动速度
     * </pre>
     *
     * <code>int32 moveSpeed = 24;</code>
     * @return The moveSpeed.
     */
    @Override
    public int getMoveSpeed() {
      return moveSpeed_;
    }

    public static final int KILL_FIELD_NUMBER = 25;
    private int kill_;
    /**
     * <pre>
     * 击杀数
     * </pre>
     *
     * <code>int32 kill = 25;</code>
     * @return The kill.
     */
    @Override
    public int getKill() {
      return kill_;
    }

    public static final int DEAD_FIELD_NUMBER = 26;
    private int dead_;
    /**
     * <pre>
     * 死亡数
     * </pre>
     *
     * <code>int32 dead = 26;</code>
     * @return The dead.
     */
    @Override
    public int getDead() {
      return dead_;
    }

    public static final int ASSIST_FIELD_NUMBER = 27;
    private int assist_;
    /**
     * <pre>
     * 助攻数
     * </pre>
     *
     * <code>int32 assist = 27;</code>
     * @return The assist.
     */
    @Override
    public int getAssist() {
      return assist_;
    }

    public static final int CURSKILLID_FIELD_NUMBER = 28;
    private com.google.protobuf.Internal.IntList curSkillID_;
    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @return A list containing the curSkillID.
     */
    @Override
    public java.util.List<Integer>
        getCurSkillIDList() {
      return curSkillID_;
    }
    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @return The count of curSkillID.
     */
    public int getCurSkillIDCount() {
      return curSkillID_.size();
    }
    /**
     * <pre>
     * 当前正在释放的技能ID
     * </pre>
     *
     * <code>repeated int32 curSkillID = 28;</code>
     * @param index The index of the element to return.
     * @return The curSkillID at the given index.
     */
    public int getCurSkillID(int index) {
      return curSkillID_.getInt(index);
    }
    private int curSkillIDMemoizedSerializedSize = -1;

    public static final int HPRECOVER_FIELD_NUMBER = 29;
    private int hpRecover_;
    /**
     * <pre>
     * 生命恢复
     * </pre>
     *
     * <code>int32 hpRecover = 29;</code>
     * @return The hpRecover.
     */
    @Override
    public int getHpRecover() {
      return hpRecover_;
    }

    public static final int ENERGYRECOVER_FIELD_NUMBER = 30;
    private int energyRecover_;
    /**
     * <pre>
     * 魔法恢复
     * </pre>
     *
     * <code>int32 energyRecover = 30;</code>
     * @return The energyRecover.
     */
    @Override
    public int getEnergyRecover() {
      return energyRecover_;
    }

    public static final int ATKSPEED_FIELD_NUMBER = 31;
    private int atkSpeed_;
    /**
     * <pre>
     * 攻击速度
     * </pre>
     *
     * <code>int32 atkSpeed = 31;</code>
     * @return The atkSpeed.
     */
    @Override
    public int getAtkSpeed() {
      return atkSpeed_;
    }

    public static final int CRT_FIELD_NUMBER = 32;
    private int crt_;
    /**
     * <pre>
     * 暴击概率
     * </pre>
     *
     * <code>int32 crt = 32;</code>
     * @return The crt.
     */
    @Override
    public int getCrt() {
      return crt_;
    }

    public static final int CRTTIMES_FIELD_NUMBER = 33;
    private int crtTimes_;
    /**
     * <pre>
     * 暴击倍数
     * </pre>
     *
     * <code>int32 crtTimes = 33;</code>
     * @return The crtTimes.
     */
    @Override
    public int getCrtTimes() {
      return crtTimes_;
    }

    public static final int PHYTHROUGH_FIELD_NUMBER = 34;
    private int phyThrough_;
    /**
     * <pre>
     * 物理护甲穿透
     * </pre>
     *
     * <code>int32 phyThrough = 34;</code>
     * @return The phyThrough.
     */
    @Override
    public int getPhyThrough() {
      return phyThrough_;
    }

    public static final int MAGTHROUGH_FIELD_NUMBER = 35;
    private int magThrough_;
    /**
     * <pre>
     * 魔法护甲穿透
     * </pre>
     *
     * <code>int32 magThrough = 35;</code>
     * @return The magThrough.
     */
    @Override
    public int getMagThrough() {
      return magThrough_;
    }

    public static final int PHYTHROUGHPERCENT_FIELD_NUMBER = 36;
    private int phyThroughPercent_;
    /**
     * <pre>
     * 物理护甲穿透百分比
     * </pre>
     *
     * <code>int32 phyThroughPercent = 36;</code>
     * @return The phyThroughPercent.
     */
    @Override
    public int getPhyThroughPercent() {
      return phyThroughPercent_;
    }

    public static final int MAGTHROUGHPERCENT_FIELD_NUMBER = 37;
    private int magThroughPercent_;
    /**
     * <pre>
     * 物理护甲穿透百分比
     * </pre>
     *
     * <code>int32 magThroughPercent = 37;</code>
     * @return The magThroughPercent.
     */
    @Override
    public int getMagThroughPercent() {
      return magThroughPercent_;
    }

    public static final int SPELLSORB_FIELD_NUMBER = 38;
    private int spellSorb_;
    /**
     * <pre>
     * 魔法吸血
     * </pre>
     *
     * <code>int32 spellSorb = 38;</code>
     * @return The spellSorb.
     */
    @Override
    public int getSpellSorb() {
      return spellSorb_;
    }

    public static final int ATKSORB_FIELD_NUMBER = 39;
    private int atkSorb_;
    /**
     * <pre>
     * 物理吸血 
     * </pre>
     *
     * <code>int32 atkSorb = 39;</code>
     * @return The atkSorb.
     */
    @Override
    public int getAtkSorb() {
      return atkSorb_;
    }

    public static final int EXSTATE_FIELD_NUMBER = 40;
    private com.google.protobuf.Internal.IntList exState_;
    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @return A list containing the exState.
     */
    @Override
    public java.util.List<Integer>
        getExStateList() {
      return exState_;
    }
    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @return The count of exState.
     */
    public int getExStateCount() {
      return exState_.size();
    }
    /**
     * <pre>
     * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
     * </pre>
     *
     * <code>repeated int32 exState = 40;</code>
     * @param index The index of the element to return.
     * @return The exState at the given index.
     */
    public int getExState(int index) {
      return exState_.getInt(index);
    }
    private int exStateMemoizedSerializedSize = -1;

    public static final int SHIELD_FIELD_NUMBER = 41;
    private int shield_;
    /**
     * <pre>
     * 护盾最大值得
     * </pre>
     *
     * <code>int32 shield = 41;</code>
     * @return The shield.
     */
    @Override
    public int getShield() {
      return shield_;
    }

    public static final int SHIELDPHY_FIELD_NUMBER = 42;
    private int shieldPhy_;
    /**
     * <pre>
     * 物理护盾
     * </pre>
     *
     * <code>int32 shieldPhy = 42;</code>
     * @return The shieldPhy.
     */
    @Override
    public int getShieldPhy() {
      return shieldPhy_;
    }

    public static final int SHIELDMGC_FIELD_NUMBER = 43;
    private int shieldMgc_;
    /**
     * <pre>
     * 魔法护盾
     * </pre>
     *
     * <code>int32 shieldMgc = 43;</code>
     * @return The shieldMgc.
     */
    @Override
    public int getShieldMgc() {
      return shieldMgc_;
    }

    public static final int SHIELDALL_FIELD_NUMBER = 44;
    private int shieldAll_;
    /**
     * <pre>
     * 通用护盾
     * </pre>
     *
     * <code>int32 shieldAll = 44;</code>
     * @return The shieldAll.
     */
    @Override
    public int getShieldAll() {
      return shieldAll_;
    }

    public static final int SHIELDPHYMAX_FIELD_NUMBER = 45;
    private int shieldPhyMax_;
    /**
     * <pre>
     * 物理护盾
     * </pre>
     *
     * <code>int32 shieldPhyMax = 45;</code>
     * @return The shieldPhyMax.
     */
    @Override
    public int getShieldPhyMax() {
      return shieldPhyMax_;
    }

    public static final int SHIELDMGCMAX_FIELD_NUMBER = 46;
    private int shieldMgcMax_;
    /**
     * <pre>
     * 魔法护盾
     * </pre>
     *
     * <code>int32 shieldMgcMax = 46;</code>
     * @return The shieldMgcMax.
     */
    @Override
    public int getShieldMgcMax() {
      return shieldMgcMax_;
    }

    public static final int SHIELDALLMAX_FIELD_NUMBER = 47;
    private int shieldAllMax_;
    /**
     * <pre>
     * 通用护盾
     * </pre>
     *
     * <code>int32 shieldAllMax = 47;</code>
     * @return The shieldAllMax.
     */
    @Override
    public int getShieldAllMax() {
      return shieldAllMax_;
    }

    public static final int HEADICONLOCKONTARGETIID_FIELD_NUMBER = 48;
    private long headIconLockOnTargetIid_;
    /**
     * <pre>
     * 正在锁定目标中
     * </pre>
     *
     * <code>int64 headIconLockOnTargetIid = 48;</code>
     * @return The headIconLockOnTargetIid.
     */
    @Override
    public long getHeadIconLockOnTargetIid() {
      return headIconLockOnTargetIid_;
    }

    public static final int CHASETARGETIID_FIELD_NUMBER = 49;
    private int chaseTargetIid_;
    /**
     * <pre>
     * 追随目标Iid，与lockOnTargetIid不同，可以是友方
     * </pre>
     *
     * <code>int32 chaseTargetIid = 49;</code>
     * @return The chaseTargetIid.
     */
    @Override
    public int getChaseTargetIid() {
      return chaseTargetIid_;
    }

    public static final int ISCHASEMOVE_FIELD_NUMBER = 50;
    private boolean isChaseMove_;
    /**
     * <pre>
     * 正在追击移动
     * </pre>
     *
     * <code>bool isChaseMove = 50;</code>
     * @return The isChaseMove.
     */
    @Override
    public boolean getIsChaseMove() {
      return isChaseMove_;
    }

    public static final int ISAUTOATTACKING_FIELD_NUMBER = 51;
    private boolean isAutoAttacking_;
    /**
     * <pre>
     * 是否在自动攻击中
     * </pre>
     *
     * <code>bool isAutoAttacking = 51;</code>
     * @return The isAutoAttacking.
     */
    @Override
    public boolean getIsAutoAttacking() {
      return isAutoAttacking_;
    }

    public static final int LOCKONTARGETIID_FIELD_NUMBER = 52;
    private int lockOnTargetIid_;
    /**
     * <pre>
     * 锁定攻击目标，一定是敌人
     * </pre>
     *
     * <code>int32 lockOnTargetIid = 52;</code>
     * @return The lockOnTargetIid.
     */
    @Override
    public int getLockOnTargetIid() {
      return lockOnTargetIid_;
    }

    public static final int ISDEAD_FIELD_NUMBER = 53;
    private boolean isDead_;
    /**
     * <code>bool isDead = 53;</code>
     * @return The isDead.
     */
    @Override
    public boolean getIsDead() {
      return isDead_;
    }

    public static final int BUFFSTATE_FIELD_NUMBER = 54;
    private java.util.List<Cmd.MsgBuffState> buffState_;
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    @Override
    public java.util.List<Cmd.MsgBuffState> getBuffStateList() {
      return buffState_;
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    @Override
    public java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
        getBuffStateOrBuilderList() {
      return buffState_;
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    @Override
    public int getBuffStateCount() {
      return buffState_.size();
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    @Override
    public Cmd.MsgBuffState getBuffState(int index) {
      return buffState_.get(index);
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
     */
    @Override
    public Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
        int index) {
      return buffState_.get(index);
    }

    public static final int BULLETNUM_FIELD_NUMBER = 55;
    private int bulletNum_;
    /**
     * <pre>
     * 子弹数目
     * </pre>
     *
     * <code>int32 bulletNum = 55;</code>
     * @return The bulletNum.
     */
    @Override
    public int getBulletNum() {
      return bulletNum_;
    }

    public static final int PORTALCD_FIELD_NUMBER = 56;
    private long portalCD_;
    /**
     * <pre>
     * 传送阵CD
     * </pre>
     *
     * <code>int64 portalCD = 56;</code>
     * @return The portalCD.
     */
    @Override
    public long getPortalCD() {
      return portalCD_;
    }

    public static final int CANEATCOIN_FIELD_NUMBER = 57;
    private boolean canEatCoin_;
    /**
     * <pre>
     * 是否可以拾取金币
     * </pre>
     *
     * <code>bool canEatCoin = 57;</code>
     * @return The canEatCoin.
     */
    @Override
    public boolean getCanEatCoin() {
      return canEatCoin_;
    }

    public static final int SPRINGPORTALSUCCESS_FIELD_NUMBER = 58;
    private boolean springPortalSuccess_;
    /**
     * <pre>
     *回城技能使用成功
     * </pre>
     *
     * <code>bool springPortalSuccess = 58;</code>
     * @return The springPortalSuccess.
     */
    @Override
    public boolean getSpringPortalSuccess() {
      return springPortalSuccess_;
    }

    public static final int DELCURSKILLID_FIELD_NUMBER = 10028;
    private com.google.protobuf.Internal.IntList delcurSkillID_;
    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @return A list containing the delcurSkillID.
     */
    @Override
    public java.util.List<Integer>
        getDelcurSkillIDList() {
      return delcurSkillID_;
    }
    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @return The count of delcurSkillID.
     */
    public int getDelcurSkillIDCount() {
      return delcurSkillID_.size();
    }
    /**
     * <code>repeated int32 delcurSkillID = 10028;</code>
     * @param index The index of the element to return.
     * @return The delcurSkillID at the given index.
     */
    public int getDelcurSkillID(int index) {
      return delcurSkillID_.getInt(index);
    }
    private int delcurSkillIDMemoizedSerializedSize = -1;

    public static final int DELEXSTATE_FIELD_NUMBER = 10040;
    private com.google.protobuf.Internal.IntList delexState_;
    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @return A list containing the delexState.
     */
    @Override
    public java.util.List<Integer>
        getDelexStateList() {
      return delexState_;
    }
    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @return The count of delexState.
     */
    public int getDelexStateCount() {
      return delexState_.size();
    }
    /**
     * <code>repeated int32 delexState = 10040;</code>
     * @param index The index of the element to return.
     * @return The delexState at the given index.
     */
    public int getDelexState(int index) {
      return delexState_.getInt(index);
    }
    private int delexStateMemoizedSerializedSize = -1;

    public static final int DELBUFFS_FIELD_NUMBER = 10050;
    private com.google.protobuf.Internal.IntList delbuffs_;
    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @return A list containing the delbuffs.
     */
    @Override
    public java.util.List<Integer>
        getDelbuffsList() {
      return delbuffs_;
    }
    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @return The count of delbuffs.
     */
    public int getDelbuffsCount() {
      return delbuffs_.size();
    }
    /**
     * <code>repeated int32 delbuffs = 10050;</code>
     * @param index The index of the element to return.
     * @return The delbuffs at the given index.
     */
    public int getDelbuffs(int index) {
      return delbuffs_.getInt(index);
    }
    private int delbuffsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (campId_ != 0) {
        output.writeInt32(1, campId_);
      }
      if (location_ != null) {
        output.writeMessage(2, getLocation());
      }
      if (direction_ != null) {
        output.writeMessage(3, getDirection());
      }
      if (hp_ != 0) {
        output.writeInt32(4, hp_);
      }
      if (hpMax_ != 0) {
        output.writeInt32(5, hpMax_);
      }
      if (energy_ != 0) {
        output.writeInt32(6, energy_);
      }
      if (energyMax_ != 0) {
        output.writeInt32(7, energyMax_);
      }
      if (mana_ != 0) {
        output.writeInt32(8, mana_);
      }
      if (manaMax_ != 0) {
        output.writeInt32(9, manaMax_);
      }
      if (anger_ != 0) {
        output.writeInt32(10, anger_);
      }
      if (angerMax_ != 0) {
        output.writeInt32(11, angerMax_);
      }
      if (level_ != 0) {
        output.writeInt32(12, level_);
      }
      if (exp_ != 0) {
        output.writeInt32(13, exp_);
      }
      if (curGold_ != 0) {
        output.writeInt32(14, curGold_);
      }
      if (gold_ != 0) {
        output.writeInt32(15, gold_);
      }
      if (phyAtk_ != 0) {
        output.writeInt32(16, phyAtk_);
      }
      if (phyDef_ != 0) {
        output.writeInt32(17, phyDef_);
      }
      if (mgcAtk_ != 0) {
        output.writeInt32(18, mgcAtk_);
      }
      if (mgcDef_ != 0) {
        output.writeInt32(19, mgcDef_);
      }
      if (toughness_ != 0) {
        output.writeInt32(20, toughness_);
      }
      if (cdr_ != 0) {
        output.writeInt32(21, cdr_);
      }
      if (respawn_ != 0) {
        output.writeInt32(22, respawn_);
      }
      if (isVisiable_ != false) {
        output.writeBool(23, isVisiable_);
      }
      if (moveSpeed_ != 0) {
        output.writeInt32(24, moveSpeed_);
      }
      if (kill_ != 0) {
        output.writeInt32(25, kill_);
      }
      if (dead_ != 0) {
        output.writeInt32(26, dead_);
      }
      if (assist_ != 0) {
        output.writeInt32(27, assist_);
      }
      if (getCurSkillIDList().size() > 0) {
        output.writeUInt32NoTag(226);
        output.writeUInt32NoTag(curSkillIDMemoizedSerializedSize);
      }
      for (int i = 0; i < curSkillID_.size(); i++) {
        output.writeInt32NoTag(curSkillID_.getInt(i));
      }
      if (hpRecover_ != 0) {
        output.writeInt32(29, hpRecover_);
      }
      if (energyRecover_ != 0) {
        output.writeInt32(30, energyRecover_);
      }
      if (atkSpeed_ != 0) {
        output.writeInt32(31, atkSpeed_);
      }
      if (crt_ != 0) {
        output.writeInt32(32, crt_);
      }
      if (crtTimes_ != 0) {
        output.writeInt32(33, crtTimes_);
      }
      if (phyThrough_ != 0) {
        output.writeInt32(34, phyThrough_);
      }
      if (magThrough_ != 0) {
        output.writeInt32(35, magThrough_);
      }
      if (phyThroughPercent_ != 0) {
        output.writeInt32(36, phyThroughPercent_);
      }
      if (magThroughPercent_ != 0) {
        output.writeInt32(37, magThroughPercent_);
      }
      if (spellSorb_ != 0) {
        output.writeInt32(38, spellSorb_);
      }
      if (atkSorb_ != 0) {
        output.writeInt32(39, atkSorb_);
      }
      if (getExStateList().size() > 0) {
        output.writeUInt32NoTag(322);
        output.writeUInt32NoTag(exStateMemoizedSerializedSize);
      }
      for (int i = 0; i < exState_.size(); i++) {
        output.writeInt32NoTag(exState_.getInt(i));
      }
      if (shield_ != 0) {
        output.writeInt32(41, shield_);
      }
      if (shieldPhy_ != 0) {
        output.writeInt32(42, shieldPhy_);
      }
      if (shieldMgc_ != 0) {
        output.writeInt32(43, shieldMgc_);
      }
      if (shieldAll_ != 0) {
        output.writeInt32(44, shieldAll_);
      }
      if (shieldPhyMax_ != 0) {
        output.writeInt32(45, shieldPhyMax_);
      }
      if (shieldMgcMax_ != 0) {
        output.writeInt32(46, shieldMgcMax_);
      }
      if (shieldAllMax_ != 0) {
        output.writeInt32(47, shieldAllMax_);
      }
      if (headIconLockOnTargetIid_ != 0L) {
        output.writeInt64(48, headIconLockOnTargetIid_);
      }
      if (chaseTargetIid_ != 0) {
        output.writeInt32(49, chaseTargetIid_);
      }
      if (isChaseMove_ != false) {
        output.writeBool(50, isChaseMove_);
      }
      if (isAutoAttacking_ != false) {
        output.writeBool(51, isAutoAttacking_);
      }
      if (lockOnTargetIid_ != 0) {
        output.writeInt32(52, lockOnTargetIid_);
      }
      if (isDead_ != false) {
        output.writeBool(53, isDead_);
      }
      for (int i = 0; i < buffState_.size(); i++) {
        output.writeMessage(54, buffState_.get(i));
      }
      if (bulletNum_ != 0) {
        output.writeInt32(55, bulletNum_);
      }
      if (portalCD_ != 0L) {
        output.writeInt64(56, portalCD_);
      }
      if (canEatCoin_ != false) {
        output.writeBool(57, canEatCoin_);
      }
      if (springPortalSuccess_ != false) {
        output.writeBool(58, springPortalSuccess_);
      }
      if (getDelcurSkillIDList().size() > 0) {
        output.writeUInt32NoTag(80226);
        output.writeUInt32NoTag(delcurSkillIDMemoizedSerializedSize);
      }
      for (int i = 0; i < delcurSkillID_.size(); i++) {
        output.writeInt32NoTag(delcurSkillID_.getInt(i));
      }
      if (getDelexStateList().size() > 0) {
        output.writeUInt32NoTag(80322);
        output.writeUInt32NoTag(delexStateMemoizedSerializedSize);
      }
      for (int i = 0; i < delexState_.size(); i++) {
        output.writeInt32NoTag(delexState_.getInt(i));
      }
      if (getDelbuffsList().size() > 0) {
        output.writeUInt32NoTag(80402);
        output.writeUInt32NoTag(delbuffsMemoizedSerializedSize);
      }
      for (int i = 0; i < delbuffs_.size(); i++) {
        output.writeInt32NoTag(delbuffs_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (campId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, campId_);
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLocation());
      }
      if (direction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDirection());
      }
      if (hp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hp_);
      }
      if (hpMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hpMax_);
      }
      if (energy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, energy_);
      }
      if (energyMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, energyMax_);
      }
      if (mana_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, mana_);
      }
      if (manaMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, manaMax_);
      }
      if (anger_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, anger_);
      }
      if (angerMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, angerMax_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, level_);
      }
      if (exp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, exp_);
      }
      if (curGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, curGold_);
      }
      if (gold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, gold_);
      }
      if (phyAtk_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, phyAtk_);
      }
      if (phyDef_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, phyDef_);
      }
      if (mgcAtk_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, mgcAtk_);
      }
      if (mgcDef_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, mgcDef_);
      }
      if (toughness_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, toughness_);
      }
      if (cdr_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, cdr_);
      }
      if (respawn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, respawn_);
      }
      if (isVisiable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, isVisiable_);
      }
      if (moveSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, moveSpeed_);
      }
      if (kill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, kill_);
      }
      if (dead_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, dead_);
      }
      if (assist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, assist_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < curSkillID_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(curSkillID_.getInt(i));
        }
        size += dataSize;
        if (!getCurSkillIDList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        curSkillIDMemoizedSerializedSize = dataSize;
      }
      if (hpRecover_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, hpRecover_);
      }
      if (energyRecover_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, energyRecover_);
      }
      if (atkSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, atkSpeed_);
      }
      if (crt_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, crt_);
      }
      if (crtTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, crtTimes_);
      }
      if (phyThrough_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, phyThrough_);
      }
      if (magThrough_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, magThrough_);
      }
      if (phyThroughPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, phyThroughPercent_);
      }
      if (magThroughPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, magThroughPercent_);
      }
      if (spellSorb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, spellSorb_);
      }
      if (atkSorb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, atkSorb_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < exState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(exState_.getInt(i));
        }
        size += dataSize;
        if (!getExStateList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        exStateMemoizedSerializedSize = dataSize;
      }
      if (shield_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, shield_);
      }
      if (shieldPhy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, shieldPhy_);
      }
      if (shieldMgc_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, shieldMgc_);
      }
      if (shieldAll_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, shieldAll_);
      }
      if (shieldPhyMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, shieldPhyMax_);
      }
      if (shieldMgcMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, shieldMgcMax_);
      }
      if (shieldAllMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, shieldAllMax_);
      }
      if (headIconLockOnTargetIid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(48, headIconLockOnTargetIid_);
      }
      if (chaseTargetIid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, chaseTargetIid_);
      }
      if (isChaseMove_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(50, isChaseMove_);
      }
      if (isAutoAttacking_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(51, isAutoAttacking_);
      }
      if (lockOnTargetIid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, lockOnTargetIid_);
      }
      if (isDead_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(53, isDead_);
      }
      for (int i = 0; i < buffState_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, buffState_.get(i));
      }
      if (bulletNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, bulletNum_);
      }
      if (portalCD_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(56, portalCD_);
      }
      if (canEatCoin_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(57, canEatCoin_);
      }
      if (springPortalSuccess_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(58, springPortalSuccess_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < delcurSkillID_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(delcurSkillID_.getInt(i));
        }
        size += dataSize;
        if (!getDelcurSkillIDList().isEmpty()) {
          size += 3;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        delcurSkillIDMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < delexState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(delexState_.getInt(i));
        }
        size += dataSize;
        if (!getDelexStateList().isEmpty()) {
          size += 3;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        delexStateMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < delbuffs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(delbuffs_.getInt(i));
        }
        size += dataSize;
        if (!getDelbuffsList().isEmpty()) {
          size += 3;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        delbuffsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgActorState)) {
        return super.equals(obj);
      }
      MsgActorState other = (MsgActorState) obj;

      if (getCampId()
          != other.getCampId()) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (hasDirection() != other.hasDirection()) return false;
      if (hasDirection()) {
        if (!getDirection()
            .equals(other.getDirection())) return false;
      }
      if (getHp()
          != other.getHp()) return false;
      if (getHpMax()
          != other.getHpMax()) return false;
      if (getEnergy()
          != other.getEnergy()) return false;
      if (getEnergyMax()
          != other.getEnergyMax()) return false;
      if (getMana()
          != other.getMana()) return false;
      if (getManaMax()
          != other.getManaMax()) return false;
      if (getAnger()
          != other.getAnger()) return false;
      if (getAngerMax()
          != other.getAngerMax()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getExp()
          != other.getExp()) return false;
      if (getCurGold()
          != other.getCurGold()) return false;
      if (getGold()
          != other.getGold()) return false;
      if (getPhyAtk()
          != other.getPhyAtk()) return false;
      if (getPhyDef()
          != other.getPhyDef()) return false;
      if (getMgcAtk()
          != other.getMgcAtk()) return false;
      if (getMgcDef()
          != other.getMgcDef()) return false;
      if (getToughness()
          != other.getToughness()) return false;
      if (getCdr()
          != other.getCdr()) return false;
      if (getRespawn()
          != other.getRespawn()) return false;
      if (getIsVisiable()
          != other.getIsVisiable()) return false;
      if (getMoveSpeed()
          != other.getMoveSpeed()) return false;
      if (getKill()
          != other.getKill()) return false;
      if (getDead()
          != other.getDead()) return false;
      if (getAssist()
          != other.getAssist()) return false;
      if (!getCurSkillIDList()
          .equals(other.getCurSkillIDList())) return false;
      if (getHpRecover()
          != other.getHpRecover()) return false;
      if (getEnergyRecover()
          != other.getEnergyRecover()) return false;
      if (getAtkSpeed()
          != other.getAtkSpeed()) return false;
      if (getCrt()
          != other.getCrt()) return false;
      if (getCrtTimes()
          != other.getCrtTimes()) return false;
      if (getPhyThrough()
          != other.getPhyThrough()) return false;
      if (getMagThrough()
          != other.getMagThrough()) return false;
      if (getPhyThroughPercent()
          != other.getPhyThroughPercent()) return false;
      if (getMagThroughPercent()
          != other.getMagThroughPercent()) return false;
      if (getSpellSorb()
          != other.getSpellSorb()) return false;
      if (getAtkSorb()
          != other.getAtkSorb()) return false;
      if (!getExStateList()
          .equals(other.getExStateList())) return false;
      if (getShield()
          != other.getShield()) return false;
      if (getShieldPhy()
          != other.getShieldPhy()) return false;
      if (getShieldMgc()
          != other.getShieldMgc()) return false;
      if (getShieldAll()
          != other.getShieldAll()) return false;
      if (getShieldPhyMax()
          != other.getShieldPhyMax()) return false;
      if (getShieldMgcMax()
          != other.getShieldMgcMax()) return false;
      if (getShieldAllMax()
          != other.getShieldAllMax()) return false;
      if (getHeadIconLockOnTargetIid()
          != other.getHeadIconLockOnTargetIid()) return false;
      if (getChaseTargetIid()
          != other.getChaseTargetIid()) return false;
      if (getIsChaseMove()
          != other.getIsChaseMove()) return false;
      if (getIsAutoAttacking()
          != other.getIsAutoAttacking()) return false;
      if (getLockOnTargetIid()
          != other.getLockOnTargetIid()) return false;
      if (getIsDead()
          != other.getIsDead()) return false;
      if (!getBuffStateList()
          .equals(other.getBuffStateList())) return false;
      if (getBulletNum()
          != other.getBulletNum()) return false;
      if (getPortalCD()
          != other.getPortalCD()) return false;
      if (getCanEatCoin()
          != other.getCanEatCoin()) return false;
      if (getSpringPortalSuccess()
          != other.getSpringPortalSuccess()) return false;
      if (!getDelcurSkillIDList()
          .equals(other.getDelcurSkillIDList())) return false;
      if (!getDelexStateList()
          .equals(other.getDelexStateList())) return false;
      if (!getDelbuffsList()
          .equals(other.getDelbuffsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CAMPID_FIELD_NUMBER;
      hash = (53 * hash) + getCampId();
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDirection().hashCode();
      }
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + getHp();
      hash = (37 * hash) + HPMAX_FIELD_NUMBER;
      hash = (53 * hash) + getHpMax();
      hash = (37 * hash) + ENERGY_FIELD_NUMBER;
      hash = (53 * hash) + getEnergy();
      hash = (37 * hash) + ENERGYMAX_FIELD_NUMBER;
      hash = (53 * hash) + getEnergyMax();
      hash = (37 * hash) + MANA_FIELD_NUMBER;
      hash = (53 * hash) + getMana();
      hash = (37 * hash) + MANAMAX_FIELD_NUMBER;
      hash = (53 * hash) + getManaMax();
      hash = (37 * hash) + ANGER_FIELD_NUMBER;
      hash = (53 * hash) + getAnger();
      hash = (37 * hash) + ANGERMAX_FIELD_NUMBER;
      hash = (53 * hash) + getAngerMax();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + EXP_FIELD_NUMBER;
      hash = (53 * hash) + getExp();
      hash = (37 * hash) + CURGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getCurGold();
      hash = (37 * hash) + GOLD_FIELD_NUMBER;
      hash = (53 * hash) + getGold();
      hash = (37 * hash) + PHYATK_FIELD_NUMBER;
      hash = (53 * hash) + getPhyAtk();
      hash = (37 * hash) + PHYDEF_FIELD_NUMBER;
      hash = (53 * hash) + getPhyDef();
      hash = (37 * hash) + MGCATK_FIELD_NUMBER;
      hash = (53 * hash) + getMgcAtk();
      hash = (37 * hash) + MGCDEF_FIELD_NUMBER;
      hash = (53 * hash) + getMgcDef();
      hash = (37 * hash) + TOUGHNESS_FIELD_NUMBER;
      hash = (53 * hash) + getToughness();
      hash = (37 * hash) + CDR_FIELD_NUMBER;
      hash = (53 * hash) + getCdr();
      hash = (37 * hash) + RESPAWN_FIELD_NUMBER;
      hash = (53 * hash) + getRespawn();
      hash = (37 * hash) + ISVISIABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsVisiable());
      hash = (37 * hash) + MOVESPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMoveSpeed();
      hash = (37 * hash) + KILL_FIELD_NUMBER;
      hash = (53 * hash) + getKill();
      hash = (37 * hash) + DEAD_FIELD_NUMBER;
      hash = (53 * hash) + getDead();
      hash = (37 * hash) + ASSIST_FIELD_NUMBER;
      hash = (53 * hash) + getAssist();
      if (getCurSkillIDCount() > 0) {
        hash = (37 * hash) + CURSKILLID_FIELD_NUMBER;
        hash = (53 * hash) + getCurSkillIDList().hashCode();
      }
      hash = (37 * hash) + HPRECOVER_FIELD_NUMBER;
      hash = (53 * hash) + getHpRecover();
      hash = (37 * hash) + ENERGYRECOVER_FIELD_NUMBER;
      hash = (53 * hash) + getEnergyRecover();
      hash = (37 * hash) + ATKSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getAtkSpeed();
      hash = (37 * hash) + CRT_FIELD_NUMBER;
      hash = (53 * hash) + getCrt();
      hash = (37 * hash) + CRTTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getCrtTimes();
      hash = (37 * hash) + PHYTHROUGH_FIELD_NUMBER;
      hash = (53 * hash) + getPhyThrough();
      hash = (37 * hash) + MAGTHROUGH_FIELD_NUMBER;
      hash = (53 * hash) + getMagThrough();
      hash = (37 * hash) + PHYTHROUGHPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getPhyThroughPercent();
      hash = (37 * hash) + MAGTHROUGHPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getMagThroughPercent();
      hash = (37 * hash) + SPELLSORB_FIELD_NUMBER;
      hash = (53 * hash) + getSpellSorb();
      hash = (37 * hash) + ATKSORB_FIELD_NUMBER;
      hash = (53 * hash) + getAtkSorb();
      if (getExStateCount() > 0) {
        hash = (37 * hash) + EXSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getExStateList().hashCode();
      }
      hash = (37 * hash) + SHIELD_FIELD_NUMBER;
      hash = (53 * hash) + getShield();
      hash = (37 * hash) + SHIELDPHY_FIELD_NUMBER;
      hash = (53 * hash) + getShieldPhy();
      hash = (37 * hash) + SHIELDMGC_FIELD_NUMBER;
      hash = (53 * hash) + getShieldMgc();
      hash = (37 * hash) + SHIELDALL_FIELD_NUMBER;
      hash = (53 * hash) + getShieldAll();
      hash = (37 * hash) + SHIELDPHYMAX_FIELD_NUMBER;
      hash = (53 * hash) + getShieldPhyMax();
      hash = (37 * hash) + SHIELDMGCMAX_FIELD_NUMBER;
      hash = (53 * hash) + getShieldMgcMax();
      hash = (37 * hash) + SHIELDALLMAX_FIELD_NUMBER;
      hash = (53 * hash) + getShieldAllMax();
      hash = (37 * hash) + HEADICONLOCKONTARGETIID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeadIconLockOnTargetIid());
      hash = (37 * hash) + CHASETARGETIID_FIELD_NUMBER;
      hash = (53 * hash) + getChaseTargetIid();
      hash = (37 * hash) + ISCHASEMOVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsChaseMove());
      hash = (37 * hash) + ISAUTOATTACKING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsAutoAttacking());
      hash = (37 * hash) + LOCKONTARGETIID_FIELD_NUMBER;
      hash = (53 * hash) + getLockOnTargetIid();
      hash = (37 * hash) + ISDEAD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsDead());
      if (getBuffStateCount() > 0) {
        hash = (37 * hash) + BUFFSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getBuffStateList().hashCode();
      }
      hash = (37 * hash) + BULLETNUM_FIELD_NUMBER;
      hash = (53 * hash) + getBulletNum();
      hash = (37 * hash) + PORTALCD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPortalCD());
      hash = (37 * hash) + CANEATCOIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCanEatCoin());
      hash = (37 * hash) + SPRINGPORTALSUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSpringPortalSuccess());
      if (getDelcurSkillIDCount() > 0) {
        hash = (37 * hash) + DELCURSKILLID_FIELD_NUMBER;
        hash = (53 * hash) + getDelcurSkillIDList().hashCode();
      }
      if (getDelexStateCount() > 0) {
        hash = (37 * hash) + DELEXSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getDelexStateList().hashCode();
      }
      if (getDelbuffsCount() > 0) {
        hash = (37 * hash) + DELBUFFS_FIELD_NUMBER;
        hash = (53 * hash) + getDelbuffsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgActorState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgActorState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgActorState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgActorState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgActorState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgActorState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgActorState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgActorState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgActorState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgActorState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgActorState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgActorState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgActorState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 英雄基础属性
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgActorState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgActorState)
        MsgActorStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgActorState_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgActorState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgActorState.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgActorState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBuffStateFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        campId_ = 0;

        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        if (directionBuilder_ == null) {
          direction_ = null;
        } else {
          direction_ = null;
          directionBuilder_ = null;
        }
        hp_ = 0;

        hpMax_ = 0;

        energy_ = 0;

        energyMax_ = 0;

        mana_ = 0;

        manaMax_ = 0;

        anger_ = 0;

        angerMax_ = 0;

        level_ = 0;

        exp_ = 0;

        curGold_ = 0;

        gold_ = 0;

        phyAtk_ = 0;

        phyDef_ = 0;

        mgcAtk_ = 0;

        mgcDef_ = 0;

        toughness_ = 0;

        cdr_ = 0;

        respawn_ = 0;

        isVisiable_ = false;

        moveSpeed_ = 0;

        kill_ = 0;

        dead_ = 0;

        assist_ = 0;

        curSkillID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        hpRecover_ = 0;

        energyRecover_ = 0;

        atkSpeed_ = 0;

        crt_ = 0;

        crtTimes_ = 0;

        phyThrough_ = 0;

        magThrough_ = 0;

        phyThroughPercent_ = 0;

        magThroughPercent_ = 0;

        spellSorb_ = 0;

        atkSorb_ = 0;

        exState_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        shield_ = 0;

        shieldPhy_ = 0;

        shieldMgc_ = 0;

        shieldAll_ = 0;

        shieldPhyMax_ = 0;

        shieldMgcMax_ = 0;

        shieldAllMax_ = 0;

        headIconLockOnTargetIid_ = 0L;

        chaseTargetIid_ = 0;

        isChaseMove_ = false;

        isAutoAttacking_ = false;

        lockOnTargetIid_ = 0;

        isDead_ = false;

        if (buffStateBuilder_ == null) {
          buffState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          buffStateBuilder_.clear();
        }
        bulletNum_ = 0;

        portalCD_ = 0L;

        canEatCoin_ = false;

        springPortalSuccess_ = false;

        delcurSkillID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        delexState_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        delbuffs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgActorState_descriptor;
      }

      @Override
      public MsgActorState getDefaultInstanceForType() {
        return MsgActorState.getDefaultInstance();
      }

      @Override
      public MsgActorState build() {
        MsgActorState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgActorState buildPartial() {
        MsgActorState result = new MsgActorState(this);
        int from_bitField0_ = bitField0_;
        result.campId_ = campId_;
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (directionBuilder_ == null) {
          result.direction_ = direction_;
        } else {
          result.direction_ = directionBuilder_.build();
        }
        result.hp_ = hp_;
        result.hpMax_ = hpMax_;
        result.energy_ = energy_;
        result.energyMax_ = energyMax_;
        result.mana_ = mana_;
        result.manaMax_ = manaMax_;
        result.anger_ = anger_;
        result.angerMax_ = angerMax_;
        result.level_ = level_;
        result.exp_ = exp_;
        result.curGold_ = curGold_;
        result.gold_ = gold_;
        result.phyAtk_ = phyAtk_;
        result.phyDef_ = phyDef_;
        result.mgcAtk_ = mgcAtk_;
        result.mgcDef_ = mgcDef_;
        result.toughness_ = toughness_;
        result.cdr_ = cdr_;
        result.respawn_ = respawn_;
        result.isVisiable_ = isVisiable_;
        result.moveSpeed_ = moveSpeed_;
        result.kill_ = kill_;
        result.dead_ = dead_;
        result.assist_ = assist_;
        if (((bitField0_ & 0x00000001) != 0)) {
          curSkillID_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.curSkillID_ = curSkillID_;
        result.hpRecover_ = hpRecover_;
        result.energyRecover_ = energyRecover_;
        result.atkSpeed_ = atkSpeed_;
        result.crt_ = crt_;
        result.crtTimes_ = crtTimes_;
        result.phyThrough_ = phyThrough_;
        result.magThrough_ = magThrough_;
        result.phyThroughPercent_ = phyThroughPercent_;
        result.magThroughPercent_ = magThroughPercent_;
        result.spellSorb_ = spellSorb_;
        result.atkSorb_ = atkSorb_;
        if (((bitField0_ & 0x00000002) != 0)) {
          exState_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.exState_ = exState_;
        result.shield_ = shield_;
        result.shieldPhy_ = shieldPhy_;
        result.shieldMgc_ = shieldMgc_;
        result.shieldAll_ = shieldAll_;
        result.shieldPhyMax_ = shieldPhyMax_;
        result.shieldMgcMax_ = shieldMgcMax_;
        result.shieldAllMax_ = shieldAllMax_;
        result.headIconLockOnTargetIid_ = headIconLockOnTargetIid_;
        result.chaseTargetIid_ = chaseTargetIid_;
        result.isChaseMove_ = isChaseMove_;
        result.isAutoAttacking_ = isAutoAttacking_;
        result.lockOnTargetIid_ = lockOnTargetIid_;
        result.isDead_ = isDead_;
        if (buffStateBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            buffState_ = java.util.Collections.unmodifiableList(buffState_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.buffState_ = buffState_;
        } else {
          result.buffState_ = buffStateBuilder_.build();
        }
        result.bulletNum_ = bulletNum_;
        result.portalCD_ = portalCD_;
        result.canEatCoin_ = canEatCoin_;
        result.springPortalSuccess_ = springPortalSuccess_;
        if (((bitField0_ & 0x00000008) != 0)) {
          delcurSkillID_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.delcurSkillID_ = delcurSkillID_;
        if (((bitField0_ & 0x00000010) != 0)) {
          delexState_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.delexState_ = delexState_;
        if (((bitField0_ & 0x00000020) != 0)) {
          delbuffs_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.delbuffs_ = delbuffs_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgActorState) {
          return mergeFrom((MsgActorState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgActorState other) {
        if (other == MsgActorState.getDefaultInstance()) return this;
        if (other.getCampId() != 0) {
          setCampId(other.getCampId());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasDirection()) {
          mergeDirection(other.getDirection());
        }
        if (other.getHp() != 0) {
          setHp(other.getHp());
        }
        if (other.getHpMax() != 0) {
          setHpMax(other.getHpMax());
        }
        if (other.getEnergy() != 0) {
          setEnergy(other.getEnergy());
        }
        if (other.getEnergyMax() != 0) {
          setEnergyMax(other.getEnergyMax());
        }
        if (other.getMana() != 0) {
          setMana(other.getMana());
        }
        if (other.getManaMax() != 0) {
          setManaMax(other.getManaMax());
        }
        if (other.getAnger() != 0) {
          setAnger(other.getAnger());
        }
        if (other.getAngerMax() != 0) {
          setAngerMax(other.getAngerMax());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getExp() != 0) {
          setExp(other.getExp());
        }
        if (other.getCurGold() != 0) {
          setCurGold(other.getCurGold());
        }
        if (other.getGold() != 0) {
          setGold(other.getGold());
        }
        if (other.getPhyAtk() != 0) {
          setPhyAtk(other.getPhyAtk());
        }
        if (other.getPhyDef() != 0) {
          setPhyDef(other.getPhyDef());
        }
        if (other.getMgcAtk() != 0) {
          setMgcAtk(other.getMgcAtk());
        }
        if (other.getMgcDef() != 0) {
          setMgcDef(other.getMgcDef());
        }
        if (other.getToughness() != 0) {
          setToughness(other.getToughness());
        }
        if (other.getCdr() != 0) {
          setCdr(other.getCdr());
        }
        if (other.getRespawn() != 0) {
          setRespawn(other.getRespawn());
        }
        if (other.getIsVisiable() != false) {
          setIsVisiable(other.getIsVisiable());
        }
        if (other.getMoveSpeed() != 0) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (other.getKill() != 0) {
          setKill(other.getKill());
        }
        if (other.getDead() != 0) {
          setDead(other.getDead());
        }
        if (other.getAssist() != 0) {
          setAssist(other.getAssist());
        }
        if (!other.curSkillID_.isEmpty()) {
          if (curSkillID_.isEmpty()) {
            curSkillID_ = other.curSkillID_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCurSkillIDIsMutable();
            curSkillID_.addAll(other.curSkillID_);
          }
          onChanged();
        }
        if (other.getHpRecover() != 0) {
          setHpRecover(other.getHpRecover());
        }
        if (other.getEnergyRecover() != 0) {
          setEnergyRecover(other.getEnergyRecover());
        }
        if (other.getAtkSpeed() != 0) {
          setAtkSpeed(other.getAtkSpeed());
        }
        if (other.getCrt() != 0) {
          setCrt(other.getCrt());
        }
        if (other.getCrtTimes() != 0) {
          setCrtTimes(other.getCrtTimes());
        }
        if (other.getPhyThrough() != 0) {
          setPhyThrough(other.getPhyThrough());
        }
        if (other.getMagThrough() != 0) {
          setMagThrough(other.getMagThrough());
        }
        if (other.getPhyThroughPercent() != 0) {
          setPhyThroughPercent(other.getPhyThroughPercent());
        }
        if (other.getMagThroughPercent() != 0) {
          setMagThroughPercent(other.getMagThroughPercent());
        }
        if (other.getSpellSorb() != 0) {
          setSpellSorb(other.getSpellSorb());
        }
        if (other.getAtkSorb() != 0) {
          setAtkSorb(other.getAtkSorb());
        }
        if (!other.exState_.isEmpty()) {
          if (exState_.isEmpty()) {
            exState_ = other.exState_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExStateIsMutable();
            exState_.addAll(other.exState_);
          }
          onChanged();
        }
        if (other.getShield() != 0) {
          setShield(other.getShield());
        }
        if (other.getShieldPhy() != 0) {
          setShieldPhy(other.getShieldPhy());
        }
        if (other.getShieldMgc() != 0) {
          setShieldMgc(other.getShieldMgc());
        }
        if (other.getShieldAll() != 0) {
          setShieldAll(other.getShieldAll());
        }
        if (other.getShieldPhyMax() != 0) {
          setShieldPhyMax(other.getShieldPhyMax());
        }
        if (other.getShieldMgcMax() != 0) {
          setShieldMgcMax(other.getShieldMgcMax());
        }
        if (other.getShieldAllMax() != 0) {
          setShieldAllMax(other.getShieldAllMax());
        }
        if (other.getHeadIconLockOnTargetIid() != 0L) {
          setHeadIconLockOnTargetIid(other.getHeadIconLockOnTargetIid());
        }
        if (other.getChaseTargetIid() != 0) {
          setChaseTargetIid(other.getChaseTargetIid());
        }
        if (other.getIsChaseMove() != false) {
          setIsChaseMove(other.getIsChaseMove());
        }
        if (other.getIsAutoAttacking() != false) {
          setIsAutoAttacking(other.getIsAutoAttacking());
        }
        if (other.getLockOnTargetIid() != 0) {
          setLockOnTargetIid(other.getLockOnTargetIid());
        }
        if (other.getIsDead() != false) {
          setIsDead(other.getIsDead());
        }
        if (buffStateBuilder_ == null) {
          if (!other.buffState_.isEmpty()) {
            if (buffState_.isEmpty()) {
              buffState_ = other.buffState_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBuffStateIsMutable();
              buffState_.addAll(other.buffState_);
            }
            onChanged();
          }
        } else {
          if (!other.buffState_.isEmpty()) {
            if (buffStateBuilder_.isEmpty()) {
              buffStateBuilder_.dispose();
              buffStateBuilder_ = null;
              buffState_ = other.buffState_;
              bitField0_ = (bitField0_ & ~0x00000004);
              buffStateBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBuffStateFieldBuilder() : null;
            } else {
              buffStateBuilder_.addAllMessages(other.buffState_);
            }
          }
        }
        if (other.getBulletNum() != 0) {
          setBulletNum(other.getBulletNum());
        }
        if (other.getPortalCD() != 0L) {
          setPortalCD(other.getPortalCD());
        }
        if (other.getCanEatCoin() != false) {
          setCanEatCoin(other.getCanEatCoin());
        }
        if (other.getSpringPortalSuccess() != false) {
          setSpringPortalSuccess(other.getSpringPortalSuccess());
        }
        if (!other.delcurSkillID_.isEmpty()) {
          if (delcurSkillID_.isEmpty()) {
            delcurSkillID_ = other.delcurSkillID_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDelcurSkillIDIsMutable();
            delcurSkillID_.addAll(other.delcurSkillID_);
          }
          onChanged();
        }
        if (!other.delexState_.isEmpty()) {
          if (delexState_.isEmpty()) {
            delexState_ = other.delexState_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDelexStateIsMutable();
            delexState_.addAll(other.delexState_);
          }
          onChanged();
        }
        if (!other.delbuffs_.isEmpty()) {
          if (delbuffs_.isEmpty()) {
            delbuffs_ = other.delbuffs_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureDelbuffsIsMutable();
            delbuffs_.addAll(other.delbuffs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgActorState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgActorState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int campId_ ;
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 1;</code>
       * @return The campId.
       */
      @Override
      public int getCampId() {
        return campId_;
      }
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 1;</code>
       * @param value The campId to set.
       * @return This builder for chaining.
       */
      public Builder setCampId(int value) {
        
        campId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCampId() {
        
        campId_ = 0;
        onChanged();
        return this;
      }

      private VInt2D location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          VInt2D, VInt2D.Builder, VInt2DOrBuilder> locationBuilder_;
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       * @return The location.
       */
      public VInt2D getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? VInt2D.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public Builder setLocation(VInt2D value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public Builder setLocation(
          VInt2D.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public Builder mergeLocation(VInt2D value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              VInt2D.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public VInt2D.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      public VInt2DOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              VInt2D.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>.shuguang.VInt2D location = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VInt2D, VInt2D.Builder, VInt2DOrBuilder>
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VInt2D, VInt2D.Builder, VInt2DOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private VInt2D direction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          VInt2D, VInt2D.Builder, VInt2DOrBuilder> directionBuilder_;
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       * @return Whether the direction field is set.
       */
      public boolean hasDirection() {
        return directionBuilder_ != null || direction_ != null;
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       * @return The direction.
       */
      public VInt2D getDirection() {
        if (directionBuilder_ == null) {
          return direction_ == null ? VInt2D.getDefaultInstance() : direction_;
        } else {
          return directionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public Builder setDirection(VInt2D value) {
        if (directionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          direction_ = value;
          onChanged();
        } else {
          directionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public Builder setDirection(
          VInt2D.Builder builderForValue) {
        if (directionBuilder_ == null) {
          direction_ = builderForValue.build();
          onChanged();
        } else {
          directionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public Builder mergeDirection(VInt2D value) {
        if (directionBuilder_ == null) {
          if (direction_ != null) {
            direction_ =
              VInt2D.newBuilder(direction_).mergeFrom(value).buildPartial();
          } else {
            direction_ = value;
          }
          onChanged();
        } else {
          directionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public Builder clearDirection() {
        if (directionBuilder_ == null) {
          direction_ = null;
          onChanged();
        } else {
          direction_ = null;
          directionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public VInt2D.Builder getDirectionBuilder() {
        
        onChanged();
        return getDirectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      public VInt2DOrBuilder getDirectionOrBuilder() {
        if (directionBuilder_ != null) {
          return directionBuilder_.getMessageOrBuilder();
        } else {
          return direction_ == null ?
              VInt2D.getDefaultInstance() : direction_;
        }
      }
      /**
       * <pre>
       * 朝向
       * </pre>
       *
       * <code>.shuguang.VInt2D direction = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VInt2D, VInt2D.Builder, VInt2DOrBuilder>
          getDirectionFieldBuilder() {
        if (directionBuilder_ == null) {
          directionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VInt2D, VInt2D.Builder, VInt2DOrBuilder>(
                  getDirection(),
                  getParentForChildren(),
                  isClean());
          direction_ = null;
        }
        return directionBuilder_;
      }

      private int hp_ ;
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 4;</code>
       * @return The hp.
       */
      @Override
      public int getHp() {
        return hp_;
      }
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 4;</code>
       * @param value The hp to set.
       * @return This builder for chaining.
       */
      public Builder setHp(int value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHp() {
        
        hp_ = 0;
        onChanged();
        return this;
      }

      private int hpMax_ ;
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 5;</code>
       * @return The hpMax.
       */
      @Override
      public int getHpMax() {
        return hpMax_;
      }
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 5;</code>
       * @param value The hpMax to set.
       * @return This builder for chaining.
       */
      public Builder setHpMax(int value) {
        
        hpMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHpMax() {
        
        hpMax_ = 0;
        onChanged();
        return this;
      }

      private int energy_ ;
      /**
       * <pre>
       * 能量
       * </pre>
       *
       * <code>int32 energy = 6;</code>
       * @return The energy.
       */
      @Override
      public int getEnergy() {
        return energy_;
      }
      /**
       * <pre>
       * 能量
       * </pre>
       *
       * <code>int32 energy = 6;</code>
       * @param value The energy to set.
       * @return This builder for chaining.
       */
      public Builder setEnergy(int value) {
        
        energy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 能量
       * </pre>
       *
       * <code>int32 energy = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnergy() {
        
        energy_ = 0;
        onChanged();
        return this;
      }

      private int energyMax_ ;
      /**
       * <pre>
       * 能量最大值
       * </pre>
       *
       * <code>int32 energyMax = 7;</code>
       * @return The energyMax.
       */
      @Override
      public int getEnergyMax() {
        return energyMax_;
      }
      /**
       * <pre>
       * 能量最大值
       * </pre>
       *
       * <code>int32 energyMax = 7;</code>
       * @param value The energyMax to set.
       * @return This builder for chaining.
       */
      public Builder setEnergyMax(int value) {
        
        energyMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 能量最大值
       * </pre>
       *
       * <code>int32 energyMax = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnergyMax() {
        
        energyMax_ = 0;
        onChanged();
        return this;
      }

      private int mana_ ;
      /**
       * <pre>
       * 蓝量
       * </pre>
       *
       * <code>int32 mana = 8;</code>
       * @return The mana.
       */
      @Override
      public int getMana() {
        return mana_;
      }
      /**
       * <pre>
       * 蓝量
       * </pre>
       *
       * <code>int32 mana = 8;</code>
       * @param value The mana to set.
       * @return This builder for chaining.
       */
      public Builder setMana(int value) {
        
        mana_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 蓝量
       * </pre>
       *
       * <code>int32 mana = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMana() {
        
        mana_ = 0;
        onChanged();
        return this;
      }

      private int manaMax_ ;
      /**
       * <pre>
       * 蓝量最大值
       * </pre>
       *
       * <code>int32 manaMax = 9;</code>
       * @return The manaMax.
       */
      @Override
      public int getManaMax() {
        return manaMax_;
      }
      /**
       * <pre>
       * 蓝量最大值
       * </pre>
       *
       * <code>int32 manaMax = 9;</code>
       * @param value The manaMax to set.
       * @return This builder for chaining.
       */
      public Builder setManaMax(int value) {
        
        manaMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 蓝量最大值
       * </pre>
       *
       * <code>int32 manaMax = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearManaMax() {
        
        manaMax_ = 0;
        onChanged();
        return this;
      }

      private int anger_ ;
      /**
       * <pre>
       * 怒气值
       * </pre>
       *
       * <code>int32 anger = 10;</code>
       * @return The anger.
       */
      @Override
      public int getAnger() {
        return anger_;
      }
      /**
       * <pre>
       * 怒气值
       * </pre>
       *
       * <code>int32 anger = 10;</code>
       * @param value The anger to set.
       * @return This builder for chaining.
       */
      public Builder setAnger(int value) {
        
        anger_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 怒气值
       * </pre>
       *
       * <code>int32 anger = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnger() {
        
        anger_ = 0;
        onChanged();
        return this;
      }

      private int angerMax_ ;
      /**
       * <pre>
       * 怒气最大值
       * </pre>
       *
       * <code>int32 angerMax = 11;</code>
       * @return The angerMax.
       */
      @Override
      public int getAngerMax() {
        return angerMax_;
      }
      /**
       * <pre>
       * 怒气最大值
       * </pre>
       *
       * <code>int32 angerMax = 11;</code>
       * @param value The angerMax to set.
       * @return This builder for chaining.
       */
      public Builder setAngerMax(int value) {
        
        angerMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 怒气最大值
       * </pre>
       *
       * <code>int32 angerMax = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngerMax() {
        
        angerMax_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 12;</code>
       * @return The level.
       */
      @Override
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 12;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 等级
       * </pre>
       *
       * <code>int32 level = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int exp_ ;
      /**
       * <pre>
       * 经验
       * </pre>
       *
       * <code>int32 exp = 13;</code>
       * @return The exp.
       */
      @Override
      public int getExp() {
        return exp_;
      }
      /**
       * <pre>
       * 经验
       * </pre>
       *
       * <code>int32 exp = 13;</code>
       * @param value The exp to set.
       * @return This builder for chaining.
       */
      public Builder setExp(int value) {
        
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 经验
       * </pre>
       *
       * <code>int32 exp = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearExp() {
        
        exp_ = 0;
        onChanged();
        return this;
      }

      private int curGold_ ;
      /**
       * <pre>
       * 当前金钱
       * </pre>
       *
       * <code>int32 curGold = 14;</code>
       * @return The curGold.
       */
      @Override
      public int getCurGold() {
        return curGold_;
      }
      /**
       * <pre>
       * 当前金钱
       * </pre>
       *
       * <code>int32 curGold = 14;</code>
       * @param value The curGold to set.
       * @return This builder for chaining.
       */
      public Builder setCurGold(int value) {
        
        curGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前金钱
       * </pre>
       *
       * <code>int32 curGold = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurGold() {
        
        curGold_ = 0;
        onChanged();
        return this;
      }

      private int gold_ ;
      /**
       * <pre>
       * 累积金钱
       * </pre>
       *
       * <code>int32 gold = 15;</code>
       * @return The gold.
       */
      @Override
      public int getGold() {
        return gold_;
      }
      /**
       * <pre>
       * 累积金钱
       * </pre>
       *
       * <code>int32 gold = 15;</code>
       * @param value The gold to set.
       * @return This builder for chaining.
       */
      public Builder setGold(int value) {
        
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 累积金钱
       * </pre>
       *
       * <code>int32 gold = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearGold() {
        
        gold_ = 0;
        onChanged();
        return this;
      }

      private int phyAtk_ ;
      /**
       * <pre>
       * 物理攻击
       * </pre>
       *
       * <code>int32 phyAtk = 16;</code>
       * @return The phyAtk.
       */
      @Override
      public int getPhyAtk() {
        return phyAtk_;
      }
      /**
       * <pre>
       * 物理攻击
       * </pre>
       *
       * <code>int32 phyAtk = 16;</code>
       * @param value The phyAtk to set.
       * @return This builder for chaining.
       */
      public Builder setPhyAtk(int value) {
        
        phyAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理攻击
       * </pre>
       *
       * <code>int32 phyAtk = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyAtk() {
        
        phyAtk_ = 0;
        onChanged();
        return this;
      }

      private int phyDef_ ;
      /**
       * <pre>
       * 物理防御
       * </pre>
       *
       * <code>int32 phyDef = 17;</code>
       * @return The phyDef.
       */
      @Override
      public int getPhyDef() {
        return phyDef_;
      }
      /**
       * <pre>
       * 物理防御
       * </pre>
       *
       * <code>int32 phyDef = 17;</code>
       * @param value The phyDef to set.
       * @return This builder for chaining.
       */
      public Builder setPhyDef(int value) {
        
        phyDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理防御
       * </pre>
       *
       * <code>int32 phyDef = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyDef() {
        
        phyDef_ = 0;
        onChanged();
        return this;
      }

      private int mgcAtk_ ;
      /**
       * <pre>
       * 魔法攻击
       * </pre>
       *
       * <code>int32 mgcAtk = 18;</code>
       * @return The mgcAtk.
       */
      @Override
      public int getMgcAtk() {
        return mgcAtk_;
      }
      /**
       * <pre>
       * 魔法攻击
       * </pre>
       *
       * <code>int32 mgcAtk = 18;</code>
       * @param value The mgcAtk to set.
       * @return This builder for chaining.
       */
      public Builder setMgcAtk(int value) {
        
        mgcAtk_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法攻击
       * </pre>
       *
       * <code>int32 mgcAtk = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearMgcAtk() {
        
        mgcAtk_ = 0;
        onChanged();
        return this;
      }

      private int mgcDef_ ;
      /**
       * <pre>
       * 魔法防御
       * </pre>
       *
       * <code>int32 mgcDef = 19;</code>
       * @return The mgcDef.
       */
      @Override
      public int getMgcDef() {
        return mgcDef_;
      }
      /**
       * <pre>
       * 魔法防御
       * </pre>
       *
       * <code>int32 mgcDef = 19;</code>
       * @param value The mgcDef to set.
       * @return This builder for chaining.
       */
      public Builder setMgcDef(int value) {
        
        mgcDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法防御
       * </pre>
       *
       * <code>int32 mgcDef = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearMgcDef() {
        
        mgcDef_ = 0;
        onChanged();
        return this;
      }

      private int toughness_ ;
      /**
       * <pre>
       * 韧性
       * </pre>
       *
       * <code>int32 toughness = 20;</code>
       * @return The toughness.
       */
      @Override
      public int getToughness() {
        return toughness_;
      }
      /**
       * <pre>
       * 韧性
       * </pre>
       *
       * <code>int32 toughness = 20;</code>
       * @param value The toughness to set.
       * @return This builder for chaining.
       */
      public Builder setToughness(int value) {
        
        toughness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 韧性
       * </pre>
       *
       * <code>int32 toughness = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearToughness() {
        
        toughness_ = 0;
        onChanged();
        return this;
      }

      private int cdr_ ;
      /**
       * <pre>
       * 冷却缩减
       * </pre>
       *
       * <code>int32 cdr = 21;</code>
       * @return The cdr.
       */
      @Override
      public int getCdr() {
        return cdr_;
      }
      /**
       * <pre>
       * 冷却缩减
       * </pre>
       *
       * <code>int32 cdr = 21;</code>
       * @param value The cdr to set.
       * @return This builder for chaining.
       */
      public Builder setCdr(int value) {
        
        cdr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 冷却缩减
       * </pre>
       *
       * <code>int32 cdr = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearCdr() {
        
        cdr_ = 0;
        onChanged();
        return this;
      }

      private int respawn_ ;
      /**
       * <pre>
       * 复活时间
       * </pre>
       *
       * <code>int32 respawn = 22;</code>
       * @return The respawn.
       */
      @Override
      public int getRespawn() {
        return respawn_;
      }
      /**
       * <pre>
       * 复活时间
       * </pre>
       *
       * <code>int32 respawn = 22;</code>
       * @param value The respawn to set.
       * @return This builder for chaining.
       */
      public Builder setRespawn(int value) {
        
        respawn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 复活时间
       * </pre>
       *
       * <code>int32 respawn = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearRespawn() {
        
        respawn_ = 0;
        onChanged();
        return this;
      }

      private boolean isVisiable_ ;
      /**
       * <pre>
       * 是否能被敌人可见
       * </pre>
       *
       * <code>bool isVisiable = 23;</code>
       * @return The isVisiable.
       */
      @Override
      public boolean getIsVisiable() {
        return isVisiable_;
      }
      /**
       * <pre>
       * 是否能被敌人可见
       * </pre>
       *
       * <code>bool isVisiable = 23;</code>
       * @param value The isVisiable to set.
       * @return This builder for chaining.
       */
      public Builder setIsVisiable(boolean value) {
        
        isVisiable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否能被敌人可见
       * </pre>
       *
       * <code>bool isVisiable = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsVisiable() {
        
        isVisiable_ = false;
        onChanged();
        return this;
      }

      private int moveSpeed_ ;
      /**
       * <pre>
       * 移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 24;</code>
       * @return The moveSpeed.
       */
      @Override
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <pre>
       * 移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 24;</code>
       * @param value The moveSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMoveSpeed(int value) {
        
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearMoveSpeed() {
        
        moveSpeed_ = 0;
        onChanged();
        return this;
      }

      private int kill_ ;
      /**
       * <pre>
       * 击杀数
       * </pre>
       *
       * <code>int32 kill = 25;</code>
       * @return The kill.
       */
      @Override
      public int getKill() {
        return kill_;
      }
      /**
       * <pre>
       * 击杀数
       * </pre>
       *
       * <code>int32 kill = 25;</code>
       * @param value The kill to set.
       * @return This builder for chaining.
       */
      public Builder setKill(int value) {
        
        kill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 击杀数
       * </pre>
       *
       * <code>int32 kill = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearKill() {
        
        kill_ = 0;
        onChanged();
        return this;
      }

      private int dead_ ;
      /**
       * <pre>
       * 死亡数
       * </pre>
       *
       * <code>int32 dead = 26;</code>
       * @return The dead.
       */
      @Override
      public int getDead() {
        return dead_;
      }
      /**
       * <pre>
       * 死亡数
       * </pre>
       *
       * <code>int32 dead = 26;</code>
       * @param value The dead to set.
       * @return This builder for chaining.
       */
      public Builder setDead(int value) {
        
        dead_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 死亡数
       * </pre>
       *
       * <code>int32 dead = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearDead() {
        
        dead_ = 0;
        onChanged();
        return this;
      }

      private int assist_ ;
      /**
       * <pre>
       * 助攻数
       * </pre>
       *
       * <code>int32 assist = 27;</code>
       * @return The assist.
       */
      @Override
      public int getAssist() {
        return assist_;
      }
      /**
       * <pre>
       * 助攻数
       * </pre>
       *
       * <code>int32 assist = 27;</code>
       * @param value The assist to set.
       * @return This builder for chaining.
       */
      public Builder setAssist(int value) {
        
        assist_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 助攻数
       * </pre>
       *
       * <code>int32 assist = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssist() {
        
        assist_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList curSkillID_ = emptyIntList();
      private void ensureCurSkillIDIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          curSkillID_ = mutableCopy(curSkillID_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @return A list containing the curSkillID.
       */
      public java.util.List<Integer>
          getCurSkillIDList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(curSkillID_) : curSkillID_;
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @return The count of curSkillID.
       */
      public int getCurSkillIDCount() {
        return curSkillID_.size();
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @param index The index of the element to return.
       * @return The curSkillID at the given index.
       */
      public int getCurSkillID(int index) {
        return curSkillID_.getInt(index);
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @param index The index to set the value at.
       * @param value The curSkillID to set.
       * @return This builder for chaining.
       */
      public Builder setCurSkillID(
          int index, int value) {
        ensureCurSkillIDIsMutable();
        curSkillID_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @param value The curSkillID to add.
       * @return This builder for chaining.
       */
      public Builder addCurSkillID(int value) {
        ensureCurSkillIDIsMutable();
        curSkillID_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @param values The curSkillID to add.
       * @return This builder for chaining.
       */
      public Builder addAllCurSkillID(
          Iterable<? extends Integer> values) {
        ensureCurSkillIDIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, curSkillID_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前正在释放的技能ID
       * </pre>
       *
       * <code>repeated int32 curSkillID = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurSkillID() {
        curSkillID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int hpRecover_ ;
      /**
       * <pre>
       * 生命恢复
       * </pre>
       *
       * <code>int32 hpRecover = 29;</code>
       * @return The hpRecover.
       */
      @Override
      public int getHpRecover() {
        return hpRecover_;
      }
      /**
       * <pre>
       * 生命恢复
       * </pre>
       *
       * <code>int32 hpRecover = 29;</code>
       * @param value The hpRecover to set.
       * @return This builder for chaining.
       */
      public Builder setHpRecover(int value) {
        
        hpRecover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 生命恢复
       * </pre>
       *
       * <code>int32 hpRecover = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearHpRecover() {
        
        hpRecover_ = 0;
        onChanged();
        return this;
      }

      private int energyRecover_ ;
      /**
       * <pre>
       * 魔法恢复
       * </pre>
       *
       * <code>int32 energyRecover = 30;</code>
       * @return The energyRecover.
       */
      @Override
      public int getEnergyRecover() {
        return energyRecover_;
      }
      /**
       * <pre>
       * 魔法恢复
       * </pre>
       *
       * <code>int32 energyRecover = 30;</code>
       * @param value The energyRecover to set.
       * @return This builder for chaining.
       */
      public Builder setEnergyRecover(int value) {
        
        energyRecover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法恢复
       * </pre>
       *
       * <code>int32 energyRecover = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnergyRecover() {
        
        energyRecover_ = 0;
        onChanged();
        return this;
      }

      private int atkSpeed_ ;
      /**
       * <pre>
       * 攻击速度
       * </pre>
       *
       * <code>int32 atkSpeed = 31;</code>
       * @return The atkSpeed.
       */
      @Override
      public int getAtkSpeed() {
        return atkSpeed_;
      }
      /**
       * <pre>
       * 攻击速度
       * </pre>
       *
       * <code>int32 atkSpeed = 31;</code>
       * @param value The atkSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setAtkSpeed(int value) {
        
        atkSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击速度
       * </pre>
       *
       * <code>int32 atkSpeed = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtkSpeed() {
        
        atkSpeed_ = 0;
        onChanged();
        return this;
      }

      private int crt_ ;
      /**
       * <pre>
       * 暴击概率
       * </pre>
       *
       * <code>int32 crt = 32;</code>
       * @return The crt.
       */
      @Override
      public int getCrt() {
        return crt_;
      }
      /**
       * <pre>
       * 暴击概率
       * </pre>
       *
       * <code>int32 crt = 32;</code>
       * @param value The crt to set.
       * @return This builder for chaining.
       */
      public Builder setCrt(int value) {
        
        crt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 暴击概率
       * </pre>
       *
       * <code>int32 crt = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrt() {
        
        crt_ = 0;
        onChanged();
        return this;
      }

      private int crtTimes_ ;
      /**
       * <pre>
       * 暴击倍数
       * </pre>
       *
       * <code>int32 crtTimes = 33;</code>
       * @return The crtTimes.
       */
      @Override
      public int getCrtTimes() {
        return crtTimes_;
      }
      /**
       * <pre>
       * 暴击倍数
       * </pre>
       *
       * <code>int32 crtTimes = 33;</code>
       * @param value The crtTimes to set.
       * @return This builder for chaining.
       */
      public Builder setCrtTimes(int value) {
        
        crtTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 暴击倍数
       * </pre>
       *
       * <code>int32 crtTimes = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrtTimes() {
        
        crtTimes_ = 0;
        onChanged();
        return this;
      }

      private int phyThrough_ ;
      /**
       * <pre>
       * 物理护甲穿透
       * </pre>
       *
       * <code>int32 phyThrough = 34;</code>
       * @return The phyThrough.
       */
      @Override
      public int getPhyThrough() {
        return phyThrough_;
      }
      /**
       * <pre>
       * 物理护甲穿透
       * </pre>
       *
       * <code>int32 phyThrough = 34;</code>
       * @param value The phyThrough to set.
       * @return This builder for chaining.
       */
      public Builder setPhyThrough(int value) {
        
        phyThrough_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理护甲穿透
       * </pre>
       *
       * <code>int32 phyThrough = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyThrough() {
        
        phyThrough_ = 0;
        onChanged();
        return this;
      }

      private int magThrough_ ;
      /**
       * <pre>
       * 魔法护甲穿透
       * </pre>
       *
       * <code>int32 magThrough = 35;</code>
       * @return The magThrough.
       */
      @Override
      public int getMagThrough() {
        return magThrough_;
      }
      /**
       * <pre>
       * 魔法护甲穿透
       * </pre>
       *
       * <code>int32 magThrough = 35;</code>
       * @param value The magThrough to set.
       * @return This builder for chaining.
       */
      public Builder setMagThrough(int value) {
        
        magThrough_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法护甲穿透
       * </pre>
       *
       * <code>int32 magThrough = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearMagThrough() {
        
        magThrough_ = 0;
        onChanged();
        return this;
      }

      private int phyThroughPercent_ ;
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 phyThroughPercent = 36;</code>
       * @return The phyThroughPercent.
       */
      @Override
      public int getPhyThroughPercent() {
        return phyThroughPercent_;
      }
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 phyThroughPercent = 36;</code>
       * @param value The phyThroughPercent to set.
       * @return This builder for chaining.
       */
      public Builder setPhyThroughPercent(int value) {
        
        phyThroughPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 phyThroughPercent = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyThroughPercent() {
        
        phyThroughPercent_ = 0;
        onChanged();
        return this;
      }

      private int magThroughPercent_ ;
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 magThroughPercent = 37;</code>
       * @return The magThroughPercent.
       */
      @Override
      public int getMagThroughPercent() {
        return magThroughPercent_;
      }
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 magThroughPercent = 37;</code>
       * @param value The magThroughPercent to set.
       * @return This builder for chaining.
       */
      public Builder setMagThroughPercent(int value) {
        
        magThroughPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理护甲穿透百分比
       * </pre>
       *
       * <code>int32 magThroughPercent = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearMagThroughPercent() {
        
        magThroughPercent_ = 0;
        onChanged();
        return this;
      }

      private int spellSorb_ ;
      /**
       * <pre>
       * 魔法吸血
       * </pre>
       *
       * <code>int32 spellSorb = 38;</code>
       * @return The spellSorb.
       */
      @Override
      public int getSpellSorb() {
        return spellSorb_;
      }
      /**
       * <pre>
       * 魔法吸血
       * </pre>
       *
       * <code>int32 spellSorb = 38;</code>
       * @param value The spellSorb to set.
       * @return This builder for chaining.
       */
      public Builder setSpellSorb(int value) {
        
        spellSorb_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法吸血
       * </pre>
       *
       * <code>int32 spellSorb = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpellSorb() {
        
        spellSorb_ = 0;
        onChanged();
        return this;
      }

      private int atkSorb_ ;
      /**
       * <pre>
       * 物理吸血 
       * </pre>
       *
       * <code>int32 atkSorb = 39;</code>
       * @return The atkSorb.
       */
      @Override
      public int getAtkSorb() {
        return atkSorb_;
      }
      /**
       * <pre>
       * 物理吸血 
       * </pre>
       *
       * <code>int32 atkSorb = 39;</code>
       * @param value The atkSorb to set.
       * @return This builder for chaining.
       */
      public Builder setAtkSorb(int value) {
        
        atkSorb_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理吸血 
       * </pre>
       *
       * <code>int32 atkSorb = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtkSorb() {
        
        atkSorb_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList exState_ = emptyIntList();
      private void ensureExStateIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          exState_ = mutableCopy(exState_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @return A list containing the exState.
       */
      public java.util.List<Integer>
          getExStateList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(exState_) : exState_;
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @return The count of exState.
       */
      public int getExStateCount() {
        return exState_.size();
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @param index The index of the element to return.
       * @return The exState at the given index.
       */
      public int getExState(int index) {
        return exState_.getInt(index);
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @param index The index to set the value at.
       * @param value The exState to set.
       * @return This builder for chaining.
       */
      public Builder setExState(
          int index, int value) {
        ensureExStateIsMutable();
        exState_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @param value The exState to add.
       * @return This builder for chaining.
       */
      public Builder addExState(int value) {
        ensureExStateIsMutable();
        exState_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @param values The exState to add.
       * @return This builder for chaining.
       */
      public Builder addAllExState(
          Iterable<? extends Integer> values) {
        ensureExStateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, exState_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 异常状态（处于眩晕、减速、击飞，无敌、免控等）
       * </pre>
       *
       * <code>repeated int32 exState = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearExState() {
        exState_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int shield_ ;
      /**
       * <pre>
       * 护盾最大值得
       * </pre>
       *
       * <code>int32 shield = 41;</code>
       * @return The shield.
       */
      @Override
      public int getShield() {
        return shield_;
      }
      /**
       * <pre>
       * 护盾最大值得
       * </pre>
       *
       * <code>int32 shield = 41;</code>
       * @param value The shield to set.
       * @return This builder for chaining.
       */
      public Builder setShield(int value) {
        
        shield_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 护盾最大值得
       * </pre>
       *
       * <code>int32 shield = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearShield() {
        
        shield_ = 0;
        onChanged();
        return this;
      }

      private int shieldPhy_ ;
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhy = 42;</code>
       * @return The shieldPhy.
       */
      @Override
      public int getShieldPhy() {
        return shieldPhy_;
      }
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhy = 42;</code>
       * @param value The shieldPhy to set.
       * @return This builder for chaining.
       */
      public Builder setShieldPhy(int value) {
        
        shieldPhy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhy = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldPhy() {
        
        shieldPhy_ = 0;
        onChanged();
        return this;
      }

      private int shieldMgc_ ;
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgc = 43;</code>
       * @return The shieldMgc.
       */
      @Override
      public int getShieldMgc() {
        return shieldMgc_;
      }
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgc = 43;</code>
       * @param value The shieldMgc to set.
       * @return This builder for chaining.
       */
      public Builder setShieldMgc(int value) {
        
        shieldMgc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgc = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldMgc() {
        
        shieldMgc_ = 0;
        onChanged();
        return this;
      }

      private int shieldAll_ ;
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAll = 44;</code>
       * @return The shieldAll.
       */
      @Override
      public int getShieldAll() {
        return shieldAll_;
      }
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAll = 44;</code>
       * @param value The shieldAll to set.
       * @return This builder for chaining.
       */
      public Builder setShieldAll(int value) {
        
        shieldAll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAll = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldAll() {
        
        shieldAll_ = 0;
        onChanged();
        return this;
      }

      private int shieldPhyMax_ ;
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhyMax = 45;</code>
       * @return The shieldPhyMax.
       */
      @Override
      public int getShieldPhyMax() {
        return shieldPhyMax_;
      }
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhyMax = 45;</code>
       * @param value The shieldPhyMax to set.
       * @return This builder for chaining.
       */
      public Builder setShieldPhyMax(int value) {
        
        shieldPhyMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 物理护盾
       * </pre>
       *
       * <code>int32 shieldPhyMax = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldPhyMax() {
        
        shieldPhyMax_ = 0;
        onChanged();
        return this;
      }

      private int shieldMgcMax_ ;
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgcMax = 46;</code>
       * @return The shieldMgcMax.
       */
      @Override
      public int getShieldMgcMax() {
        return shieldMgcMax_;
      }
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgcMax = 46;</code>
       * @param value The shieldMgcMax to set.
       * @return This builder for chaining.
       */
      public Builder setShieldMgcMax(int value) {
        
        shieldMgcMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 魔法护盾
       * </pre>
       *
       * <code>int32 shieldMgcMax = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldMgcMax() {
        
        shieldMgcMax_ = 0;
        onChanged();
        return this;
      }

      private int shieldAllMax_ ;
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAllMax = 47;</code>
       * @return The shieldAllMax.
       */
      @Override
      public int getShieldAllMax() {
        return shieldAllMax_;
      }
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAllMax = 47;</code>
       * @param value The shieldAllMax to set.
       * @return This builder for chaining.
       */
      public Builder setShieldAllMax(int value) {
        
        shieldAllMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 通用护盾
       * </pre>
       *
       * <code>int32 shieldAllMax = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldAllMax() {
        
        shieldAllMax_ = 0;
        onChanged();
        return this;
      }

      private long headIconLockOnTargetIid_ ;
      /**
       * <pre>
       * 正在锁定目标中
       * </pre>
       *
       * <code>int64 headIconLockOnTargetIid = 48;</code>
       * @return The headIconLockOnTargetIid.
       */
      @Override
      public long getHeadIconLockOnTargetIid() {
        return headIconLockOnTargetIid_;
      }
      /**
       * <pre>
       * 正在锁定目标中
       * </pre>
       *
       * <code>int64 headIconLockOnTargetIid = 48;</code>
       * @param value The headIconLockOnTargetIid to set.
       * @return This builder for chaining.
       */
      public Builder setHeadIconLockOnTargetIid(long value) {
        
        headIconLockOnTargetIid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 正在锁定目标中
       * </pre>
       *
       * <code>int64 headIconLockOnTargetIid = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeadIconLockOnTargetIid() {
        
        headIconLockOnTargetIid_ = 0L;
        onChanged();
        return this;
      }

      private int chaseTargetIid_ ;
      /**
       * <pre>
       * 追随目标Iid，与lockOnTargetIid不同，可以是友方
       * </pre>
       *
       * <code>int32 chaseTargetIid = 49;</code>
       * @return The chaseTargetIid.
       */
      @Override
      public int getChaseTargetIid() {
        return chaseTargetIid_;
      }
      /**
       * <pre>
       * 追随目标Iid，与lockOnTargetIid不同，可以是友方
       * </pre>
       *
       * <code>int32 chaseTargetIid = 49;</code>
       * @param value The chaseTargetIid to set.
       * @return This builder for chaining.
       */
      public Builder setChaseTargetIid(int value) {
        
        chaseTargetIid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 追随目标Iid，与lockOnTargetIid不同，可以是友方
       * </pre>
       *
       * <code>int32 chaseTargetIid = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearChaseTargetIid() {
        
        chaseTargetIid_ = 0;
        onChanged();
        return this;
      }

      private boolean isChaseMove_ ;
      /**
       * <pre>
       * 正在追击移动
       * </pre>
       *
       * <code>bool isChaseMove = 50;</code>
       * @return The isChaseMove.
       */
      @Override
      public boolean getIsChaseMove() {
        return isChaseMove_;
      }
      /**
       * <pre>
       * 正在追击移动
       * </pre>
       *
       * <code>bool isChaseMove = 50;</code>
       * @param value The isChaseMove to set.
       * @return This builder for chaining.
       */
      public Builder setIsChaseMove(boolean value) {
        
        isChaseMove_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 正在追击移动
       * </pre>
       *
       * <code>bool isChaseMove = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsChaseMove() {
        
        isChaseMove_ = false;
        onChanged();
        return this;
      }

      private boolean isAutoAttacking_ ;
      /**
       * <pre>
       * 是否在自动攻击中
       * </pre>
       *
       * <code>bool isAutoAttacking = 51;</code>
       * @return The isAutoAttacking.
       */
      @Override
      public boolean getIsAutoAttacking() {
        return isAutoAttacking_;
      }
      /**
       * <pre>
       * 是否在自动攻击中
       * </pre>
       *
       * <code>bool isAutoAttacking = 51;</code>
       * @param value The isAutoAttacking to set.
       * @return This builder for chaining.
       */
      public Builder setIsAutoAttacking(boolean value) {
        
        isAutoAttacking_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否在自动攻击中
       * </pre>
       *
       * <code>bool isAutoAttacking = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAutoAttacking() {
        
        isAutoAttacking_ = false;
        onChanged();
        return this;
      }

      private int lockOnTargetIid_ ;
      /**
       * <pre>
       * 锁定攻击目标，一定是敌人
       * </pre>
       *
       * <code>int32 lockOnTargetIid = 52;</code>
       * @return The lockOnTargetIid.
       */
      @Override
      public int getLockOnTargetIid() {
        return lockOnTargetIid_;
      }
      /**
       * <pre>
       * 锁定攻击目标，一定是敌人
       * </pre>
       *
       * <code>int32 lockOnTargetIid = 52;</code>
       * @param value The lockOnTargetIid to set.
       * @return This builder for chaining.
       */
      public Builder setLockOnTargetIid(int value) {
        
        lockOnTargetIid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 锁定攻击目标，一定是敌人
       * </pre>
       *
       * <code>int32 lockOnTargetIid = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearLockOnTargetIid() {
        
        lockOnTargetIid_ = 0;
        onChanged();
        return this;
      }

      private boolean isDead_ ;
      /**
       * <code>bool isDead = 53;</code>
       * @return The isDead.
       */
      @Override
      public boolean getIsDead() {
        return isDead_;
      }
      /**
       * <code>bool isDead = 53;</code>
       * @param value The isDead to set.
       * @return This builder for chaining.
       */
      public Builder setIsDead(boolean value) {
        
        isDead_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isDead = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDead() {
        
        isDead_ = false;
        onChanged();
        return this;
      }

      private java.util.List<Cmd.MsgBuffState> buffState_ =
        java.util.Collections.emptyList();
      private void ensureBuffStateIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          buffState_ = new java.util.ArrayList<Cmd.MsgBuffState>(buffState_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder> buffStateBuilder_;

      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public java.util.List<Cmd.MsgBuffState> getBuffStateList() {
        if (buffStateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buffState_);
        } else {
          return buffStateBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public int getBuffStateCount() {
        if (buffStateBuilder_ == null) {
          return buffState_.size();
        } else {
          return buffStateBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Cmd.MsgBuffState getBuffState(int index) {
        if (buffStateBuilder_ == null) {
          return buffState_.get(index);
        } else {
          return buffStateBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder setBuffState(
          int index, Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.set(index, value);
          onChanged();
        } else {
          buffStateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder setBuffState(
          int index, Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.set(index, builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder addBuffState(Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.add(value);
          onChanged();
        } else {
          buffStateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder addBuffState(
          int index, Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.add(index, value);
          onChanged();
        } else {
          buffStateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder addBuffState(
          Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.add(builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder addBuffState(
          int index, Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.add(index, builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder addAllBuffState(
          Iterable<? extends Cmd.MsgBuffState> values) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buffState_);
          onChanged();
        } else {
          buffStateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder clearBuffState() {
        if (buffStateBuilder_ == null) {
          buffState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          buffStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Builder removeBuffState(int index) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.remove(index);
          onChanged();
        } else {
          buffStateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Cmd.MsgBuffState.Builder getBuffStateBuilder(
          int index) {
        return getBuffStateFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
          int index) {
        if (buffStateBuilder_ == null) {
          return buffState_.get(index);  } else {
          return buffStateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
           getBuffStateOrBuilderList() {
        if (buffStateBuilder_ != null) {
          return buffStateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buffState_);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Cmd.MsgBuffState.Builder addBuffStateBuilder() {
        return getBuffStateFieldBuilder().addBuilder(
            Cmd.MsgBuffState.getDefaultInstance());
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public Cmd.MsgBuffState.Builder addBuffStateBuilder(
          int index) {
        return getBuffStateFieldBuilder().addBuilder(
            index, Cmd.MsgBuffState.getDefaultInstance());
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 54;</code>
       */
      public java.util.List<Cmd.MsgBuffState.Builder>
           getBuffStateBuilderList() {
        return getBuffStateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder>
          getBuffStateFieldBuilder() {
        if (buffStateBuilder_ == null) {
          buffStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder>(
                  buffState_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          buffState_ = null;
        }
        return buffStateBuilder_;
      }

      private int bulletNum_ ;
      /**
       * <pre>
       * 子弹数目
       * </pre>
       *
       * <code>int32 bulletNum = 55;</code>
       * @return The bulletNum.
       */
      @Override
      public int getBulletNum() {
        return bulletNum_;
      }
      /**
       * <pre>
       * 子弹数目
       * </pre>
       *
       * <code>int32 bulletNum = 55;</code>
       * @param value The bulletNum to set.
       * @return This builder for chaining.
       */
      public Builder setBulletNum(int value) {
        
        bulletNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 子弹数目
       * </pre>
       *
       * <code>int32 bulletNum = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearBulletNum() {
        
        bulletNum_ = 0;
        onChanged();
        return this;
      }

      private long portalCD_ ;
      /**
       * <pre>
       * 传送阵CD
       * </pre>
       *
       * <code>int64 portalCD = 56;</code>
       * @return The portalCD.
       */
      @Override
      public long getPortalCD() {
        return portalCD_;
      }
      /**
       * <pre>
       * 传送阵CD
       * </pre>
       *
       * <code>int64 portalCD = 56;</code>
       * @param value The portalCD to set.
       * @return This builder for chaining.
       */
      public Builder setPortalCD(long value) {
        
        portalCD_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 传送阵CD
       * </pre>
       *
       * <code>int64 portalCD = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortalCD() {
        
        portalCD_ = 0L;
        onChanged();
        return this;
      }

      private boolean canEatCoin_ ;
      /**
       * <pre>
       * 是否可以拾取金币
       * </pre>
       *
       * <code>bool canEatCoin = 57;</code>
       * @return The canEatCoin.
       */
      @Override
      public boolean getCanEatCoin() {
        return canEatCoin_;
      }
      /**
       * <pre>
       * 是否可以拾取金币
       * </pre>
       *
       * <code>bool canEatCoin = 57;</code>
       * @param value The canEatCoin to set.
       * @return This builder for chaining.
       */
      public Builder setCanEatCoin(boolean value) {
        
        canEatCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否可以拾取金币
       * </pre>
       *
       * <code>bool canEatCoin = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearCanEatCoin() {
        
        canEatCoin_ = false;
        onChanged();
        return this;
      }

      private boolean springPortalSuccess_ ;
      /**
       * <pre>
       *回城技能使用成功
       * </pre>
       *
       * <code>bool springPortalSuccess = 58;</code>
       * @return The springPortalSuccess.
       */
      @Override
      public boolean getSpringPortalSuccess() {
        return springPortalSuccess_;
      }
      /**
       * <pre>
       *回城技能使用成功
       * </pre>
       *
       * <code>bool springPortalSuccess = 58;</code>
       * @param value The springPortalSuccess to set.
       * @return This builder for chaining.
       */
      public Builder setSpringPortalSuccess(boolean value) {
        
        springPortalSuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *回城技能使用成功
       * </pre>
       *
       * <code>bool springPortalSuccess = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpringPortalSuccess() {
        
        springPortalSuccess_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList delcurSkillID_ = emptyIntList();
      private void ensureDelcurSkillIDIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          delcurSkillID_ = mutableCopy(delcurSkillID_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @return A list containing the delcurSkillID.
       */
      public java.util.List<Integer>
          getDelcurSkillIDList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(delcurSkillID_) : delcurSkillID_;
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @return The count of delcurSkillID.
       */
      public int getDelcurSkillIDCount() {
        return delcurSkillID_.size();
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @param index The index of the element to return.
       * @return The delcurSkillID at the given index.
       */
      public int getDelcurSkillID(int index) {
        return delcurSkillID_.getInt(index);
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @param index The index to set the value at.
       * @param value The delcurSkillID to set.
       * @return This builder for chaining.
       */
      public Builder setDelcurSkillID(
          int index, int value) {
        ensureDelcurSkillIDIsMutable();
        delcurSkillID_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @param value The delcurSkillID to add.
       * @return This builder for chaining.
       */
      public Builder addDelcurSkillID(int value) {
        ensureDelcurSkillIDIsMutable();
        delcurSkillID_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @param values The delcurSkillID to add.
       * @return This builder for chaining.
       */
      public Builder addAllDelcurSkillID(
          Iterable<? extends Integer> values) {
        ensureDelcurSkillIDIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delcurSkillID_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delcurSkillID = 10028;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelcurSkillID() {
        delcurSkillID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList delexState_ = emptyIntList();
      private void ensureDelexStateIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          delexState_ = mutableCopy(delexState_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @return A list containing the delexState.
       */
      public java.util.List<Integer>
          getDelexStateList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(delexState_) : delexState_;
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @return The count of delexState.
       */
      public int getDelexStateCount() {
        return delexState_.size();
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @param index The index of the element to return.
       * @return The delexState at the given index.
       */
      public int getDelexState(int index) {
        return delexState_.getInt(index);
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @param index The index to set the value at.
       * @param value The delexState to set.
       * @return This builder for chaining.
       */
      public Builder setDelexState(
          int index, int value) {
        ensureDelexStateIsMutable();
        delexState_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @param value The delexState to add.
       * @return This builder for chaining.
       */
      public Builder addDelexState(int value) {
        ensureDelexStateIsMutable();
        delexState_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @param values The delexState to add.
       * @return This builder for chaining.
       */
      public Builder addAllDelexState(
          Iterable<? extends Integer> values) {
        ensureDelexStateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delexState_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delexState = 10040;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelexState() {
        delexState_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList delbuffs_ = emptyIntList();
      private void ensureDelbuffsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          delbuffs_ = mutableCopy(delbuffs_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @return A list containing the delbuffs.
       */
      public java.util.List<Integer>
          getDelbuffsList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(delbuffs_) : delbuffs_;
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @return The count of delbuffs.
       */
      public int getDelbuffsCount() {
        return delbuffs_.size();
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @param index The index of the element to return.
       * @return The delbuffs at the given index.
       */
      public int getDelbuffs(int index) {
        return delbuffs_.getInt(index);
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @param index The index to set the value at.
       * @param value The delbuffs to set.
       * @return This builder for chaining.
       */
      public Builder setDelbuffs(
          int index, int value) {
        ensureDelbuffsIsMutable();
        delbuffs_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @param value The delbuffs to add.
       * @return This builder for chaining.
       */
      public Builder addDelbuffs(int value) {
        ensureDelbuffsIsMutable();
        delbuffs_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @param values The delbuffs to add.
       * @return This builder for chaining.
       */
      public Builder addAllDelbuffs(
          Iterable<? extends Integer> values) {
        ensureDelbuffsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delbuffs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10050;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelbuffs() {
        delbuffs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgActorState)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgActorState)
    private static final MsgActorState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgActorState();
    }

    public static MsgActorState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgActorState>
        PARSER = new com.google.protobuf.AbstractParser<MsgActorState>() {
      @Override
      public MsgActorState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgActorState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgActorState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgActorState> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgActorState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgEquipRecommendOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgEquipRecommend)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 Id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated int32 equips = 2;</code>
     * @return A list containing the equips.
     */
    java.util.List<Integer> getEquipsList();
    /**
     * <code>repeated int32 equips = 2;</code>
     * @return The count of equips.
     */
    int getEquipsCount();
    /**
     * <code>repeated int32 equips = 2;</code>
     * @param index The index of the element to return.
     * @return The equips at the given index.
     */
    int getEquips(int index);

    /**
     * <code>repeated int32 lanes = 3;</code>
     * @return A list containing the lanes.
     */
    java.util.List<Integer> getLanesList();
    /**
     * <code>repeated int32 lanes = 3;</code>
     * @return The count of lanes.
     */
    int getLanesCount();
    /**
     * <code>repeated int32 lanes = 3;</code>
     * @param index The index of the element to return.
     * @return The lanes at the given index.
     */
    int getLanes(int index);

    /**
     * <code>int32 weight = 4;</code>
     * @return The weight.
     */
    int getWeight();
  }
  /**
   * Protobuf type {@code shuguang.MsgEquipRecommend}
   */
  public static final class MsgEquipRecommend extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgEquipRecommend)
      MsgEquipRecommendOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgEquipRecommend.newBuilder() to construct.
    private MsgEquipRecommend(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgEquipRecommend() {
      equips_ = emptyIntList();
      lanes_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgEquipRecommend();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgEquipRecommend(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                equips_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              equips_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                equips_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                equips_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                lanes_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              lanes_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                lanes_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                lanes_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              weight_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          equips_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          lanes_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgEquipRecommend_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgEquipRecommend_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgEquipRecommend.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 Id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int EQUIPS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList equips_;
    /**
     * <code>repeated int32 equips = 2;</code>
     * @return A list containing the equips.
     */
    @Override
    public java.util.List<Integer>
        getEquipsList() {
      return equips_;
    }
    /**
     * <code>repeated int32 equips = 2;</code>
     * @return The count of equips.
     */
    public int getEquipsCount() {
      return equips_.size();
    }
    /**
     * <code>repeated int32 equips = 2;</code>
     * @param index The index of the element to return.
     * @return The equips at the given index.
     */
    public int getEquips(int index) {
      return equips_.getInt(index);
    }
    private int equipsMemoizedSerializedSize = -1;

    public static final int LANES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList lanes_;
    /**
     * <code>repeated int32 lanes = 3;</code>
     * @return A list containing the lanes.
     */
    @Override
    public java.util.List<Integer>
        getLanesList() {
      return lanes_;
    }
    /**
     * <code>repeated int32 lanes = 3;</code>
     * @return The count of lanes.
     */
    public int getLanesCount() {
      return lanes_.size();
    }
    /**
     * <code>repeated int32 lanes = 3;</code>
     * @param index The index of the element to return.
     * @return The lanes at the given index.
     */
    public int getLanes(int index) {
      return lanes_.getInt(index);
    }
    private int lanesMemoizedSerializedSize = -1;

    public static final int WEIGHT_FIELD_NUMBER = 4;
    private int weight_;
    /**
     * <code>int32 weight = 4;</code>
     * @return The weight.
     */
    @Override
    public int getWeight() {
      return weight_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (getEquipsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(equipsMemoizedSerializedSize);
      }
      for (int i = 0; i < equips_.size(); i++) {
        output.writeInt32NoTag(equips_.getInt(i));
      }
      if (getLanesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(lanesMemoizedSerializedSize);
      }
      for (int i = 0; i < lanes_.size(); i++) {
        output.writeInt32NoTag(lanes_.getInt(i));
      }
      if (weight_ != 0) {
        output.writeInt32(4, weight_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equips_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(equips_.getInt(i));
        }
        size += dataSize;
        if (!getEquipsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        equipsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lanes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(lanes_.getInt(i));
        }
        size += dataSize;
        if (!getLanesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lanesMemoizedSerializedSize = dataSize;
      }
      if (weight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, weight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgEquipRecommend)) {
        return super.equals(obj);
      }
      MsgEquipRecommend other = (MsgEquipRecommend) obj;

      if (getId()
          != other.getId()) return false;
      if (!getEquipsList()
          .equals(other.getEquipsList())) return false;
      if (!getLanesList()
          .equals(other.getLanesList())) return false;
      if (getWeight()
          != other.getWeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (getEquipsCount() > 0) {
        hash = (37 * hash) + EQUIPS_FIELD_NUMBER;
        hash = (53 * hash) + getEquipsList().hashCode();
      }
      if (getLanesCount() > 0) {
        hash = (37 * hash) + LANES_FIELD_NUMBER;
        hash = (53 * hash) + getLanesList().hashCode();
      }
      hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getWeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgEquipRecommend parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEquipRecommend parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEquipRecommend parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEquipRecommend parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEquipRecommend parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEquipRecommend parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEquipRecommend parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgEquipRecommend parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgEquipRecommend parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgEquipRecommend parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgEquipRecommend parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgEquipRecommend parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgEquipRecommend prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgEquipRecommend}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgEquipRecommend)
        MsgEquipRecommendOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgEquipRecommend_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgEquipRecommend_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgEquipRecommend.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgEquipRecommend.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        equips_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        lanes_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        weight_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgEquipRecommend_descriptor;
      }

      @Override
      public MsgEquipRecommend getDefaultInstanceForType() {
        return MsgEquipRecommend.getDefaultInstance();
      }

      @Override
      public MsgEquipRecommend build() {
        MsgEquipRecommend result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgEquipRecommend buildPartial() {
        MsgEquipRecommend result = new MsgEquipRecommend(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (((bitField0_ & 0x00000001) != 0)) {
          equips_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.equips_ = equips_;
        if (((bitField0_ & 0x00000002) != 0)) {
          lanes_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.lanes_ = lanes_;
        result.weight_ = weight_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgEquipRecommend) {
          return mergeFrom((MsgEquipRecommend)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgEquipRecommend other) {
        if (other == MsgEquipRecommend.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.equips_.isEmpty()) {
          if (equips_.isEmpty()) {
            equips_ = other.equips_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEquipsIsMutable();
            equips_.addAll(other.equips_);
          }
          onChanged();
        }
        if (!other.lanes_.isEmpty()) {
          if (lanes_.isEmpty()) {
            lanes_ = other.lanes_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLanesIsMutable();
            lanes_.addAll(other.lanes_);
          }
          onChanged();
        }
        if (other.getWeight() != 0) {
          setWeight(other.getWeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgEquipRecommend parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgEquipRecommend) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>int32 Id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList equips_ = emptyIntList();
      private void ensureEquipsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          equips_ = mutableCopy(equips_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @return A list containing the equips.
       */
      public java.util.List<Integer>
          getEquipsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(equips_) : equips_;
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @return The count of equips.
       */
      public int getEquipsCount() {
        return equips_.size();
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @param index The index of the element to return.
       * @return The equips at the given index.
       */
      public int getEquips(int index) {
        return equips_.getInt(index);
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @param index The index to set the value at.
       * @param value The equips to set.
       * @return This builder for chaining.
       */
      public Builder setEquips(
          int index, int value) {
        ensureEquipsIsMutable();
        equips_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @param value The equips to add.
       * @return This builder for chaining.
       */
      public Builder addEquips(int value) {
        ensureEquipsIsMutable();
        equips_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @param values The equips to add.
       * @return This builder for chaining.
       */
      public Builder addAllEquips(
          Iterable<? extends Integer> values) {
        ensureEquipsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, equips_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 equips = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquips() {
        equips_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList lanes_ = emptyIntList();
      private void ensureLanesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          lanes_ = mutableCopy(lanes_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @return A list containing the lanes.
       */
      public java.util.List<Integer>
          getLanesList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(lanes_) : lanes_;
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @return The count of lanes.
       */
      public int getLanesCount() {
        return lanes_.size();
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @param index The index of the element to return.
       * @return The lanes at the given index.
       */
      public int getLanes(int index) {
        return lanes_.getInt(index);
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @param index The index to set the value at.
       * @param value The lanes to set.
       * @return This builder for chaining.
       */
      public Builder setLanes(
          int index, int value) {
        ensureLanesIsMutable();
        lanes_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @param value The lanes to add.
       * @return This builder for chaining.
       */
      public Builder addLanes(int value) {
        ensureLanesIsMutable();
        lanes_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @param values The lanes to add.
       * @return This builder for chaining.
       */
      public Builder addAllLanes(
          Iterable<? extends Integer> values) {
        ensureLanesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lanes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 lanes = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanes() {
        lanes_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int weight_ ;
      /**
       * <code>int32 weight = 4;</code>
       * @return The weight.
       */
      @Override
      public int getWeight() {
        return weight_;
      }
      /**
       * <code>int32 weight = 4;</code>
       * @param value The weight to set.
       * @return This builder for chaining.
       */
      public Builder setWeight(int value) {
        
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 weight = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeight() {
        
        weight_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgEquipRecommend)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgEquipRecommend)
    private static final MsgEquipRecommend DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgEquipRecommend();
    }

    public static MsgEquipRecommend getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgEquipRecommend>
        PARSER = new com.google.protobuf.AbstractParser<MsgEquipRecommend>() {
      @Override
      public MsgEquipRecommend parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgEquipRecommend(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgEquipRecommend> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgEquipRecommend> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgEquipRecommend getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgHeroOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgHero)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 对局内的唯一ID,用于区分不同玩家或者AI等（必填）
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     * @return Whether the actorState field is set.
     */
    boolean hasActorState();
    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     * @return The actorState.
     */
    MsgActorState getActorState();
    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     */
    MsgActorStateOrBuilder getActorStateOrBuilder();

    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    java.util.List<MsgAbilityState>
        getAbilityStateList();
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    MsgAbilityState getAbilityState(int index);
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    int getAbilityStateCount();
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    java.util.List<? extends MsgAbilityStateOrBuilder>
        getAbilityStateOrBuilderList();
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    MsgAbilityStateOrBuilder getAbilityStateOrBuilder(
        int index);

    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    java.util.List<Cmd.MsgCmd>
        getCommandsList();
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    Cmd.MsgCmd getCommands(int index);
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    int getCommandsCount();
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    java.util.List<? extends Cmd.MsgCmdOrBuilder>
        getCommandsOrBuilderList();
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    Cmd.MsgCmdOrBuilder getCommandsOrBuilder(
        int index);

    /**
     * <pre>
     *（是否托管英雄）
     * </pre>
     *
     * <code>bool bServerAI = 5;</code>
     * @return The bServerAI.
     */
    boolean getBServerAI();

    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @return A list containing the equiptIDs.
     */
    java.util.List<Integer> getEquiptIDsList();
    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @return The count of equiptIDs.
     */
    int getEquiptIDsCount();
    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @param index The index of the element to return.
     * @return The equiptIDs at the given index.
     */
    int getEquiptIDs(int index);

    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    java.util.List<MsgEquipRecommend>
        getEquipRecommendList();
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    MsgEquipRecommend getEquipRecommend(int index);
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    int getEquipRecommendCount();
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    java.util.List<? extends MsgEquipRecommendOrBuilder>
        getEquipRecommendOrBuilderList();
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    MsgEquipRecommendOrBuilder getEquipRecommendOrBuilder(
        int index);

    /**
     * <pre>
     *英雄ID(必填)
     * </pre>
     *
     * <code>int32 heroId = 8;</code>
     * @return The heroId.
     */
    int getHeroId();

    /**
     * <pre>
     *职业ID(必填)
     * </pre>
     *
     * <code>int32 raceId = 9;</code>
     * @return The raceId.
     */
    int getRaceId();

    /**
     * <pre>
     *账号信息
     * </pre>
     *
     * <code>int64 account = 10;</code>
     * @return The account.
     */
    long getAccount();

    /**
     * <pre>
     *等级(必填)
     * </pre>
     *
     * <code>int32 level = 11;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <pre>
     * elo值 （隐藏分）
     * </pre>
     *
     * <code>int32 elo = 12;</code>
     * @return The elo.
     */
    int getElo();

    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 13;</code>
     * @return The score.
     */
    int getScore();

    /**
     * <pre>
     * 难度 (以后再定，暂时可以不填)	
     * </pre>
     *
     * <code>int32 difficulty = 14;</code>
     * @return The difficulty.
     */
    int getDifficulty();

    /**
     * <code>int32 playerType = 15;</code>
     * @return The playerType.
     */
    int getPlayerType();

    /**
     * <code>int32 aiType = 16;</code>
     * @return The aiType.
     */
    int getAiType();

    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @return A list containing the delabilityState.
     */
    java.util.List<Long> getDelabilityStateList();
    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @return The count of delabilityState.
     */
    int getDelabilityStateCount();
    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @param index The index of the element to return.
     * @return The delabilityState at the given index.
     */
    long getDelabilityState(int index);
  }
  /**
   * <pre>
   * 英雄的基础/技能/装备属性
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgHero}
   */
  public static final class MsgHero extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgHero)
      MsgHeroOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgHero.newBuilder() to construct.
    private MsgHero(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgHero() {
      abilityState_ = java.util.Collections.emptyList();
      commands_ = java.util.Collections.emptyList();
      equiptIDs_ = emptyIntList();
      equipRecommend_ = java.util.Collections.emptyList();
      delabilityState_ = emptyLongList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgHero();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgHero(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              MsgActorState.Builder subBuilder = null;
              if (actorState_ != null) {
                subBuilder = actorState_.toBuilder();
              }
              actorState_ = input.readMessage(MsgActorState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actorState_);
                actorState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                abilityState_ = new java.util.ArrayList<MsgAbilityState>();
                mutable_bitField0_ |= 0x00000001;
              }
              abilityState_.add(
                  input.readMessage(MsgAbilityState.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                commands_ = new java.util.ArrayList<Cmd.MsgCmd>();
                mutable_bitField0_ |= 0x00000002;
              }
              commands_.add(
                  input.readMessage(Cmd.MsgCmd.parser(), extensionRegistry));
              break;
            }
            case 40: {

              bServerAI_ = input.readBool();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                equiptIDs_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              equiptIDs_.addInt(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                equiptIDs_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                equiptIDs_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                equipRecommend_ = new java.util.ArrayList<MsgEquipRecommend>();
                mutable_bitField0_ |= 0x00000008;
              }
              equipRecommend_.add(
                  input.readMessage(MsgEquipRecommend.parser(), extensionRegistry));
              break;
            }
            case 64: {

              heroId_ = input.readInt32();
              break;
            }
            case 72: {

              raceId_ = input.readInt32();
              break;
            }
            case 80: {

              account_ = input.readInt64();
              break;
            }
            case 88: {

              level_ = input.readInt32();
              break;
            }
            case 96: {

              elo_ = input.readInt32();
              break;
            }
            case 104: {

              score_ = input.readInt32();
              break;
            }
            case 112: {

              difficulty_ = input.readInt32();
              break;
            }
            case 120: {

              playerType_ = input.readInt32();
              break;
            }
            case 128: {

              aiType_ = input.readInt32();
              break;
            }
            case 80032: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                delabilityState_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              delabilityState_.addLong(input.readInt64());
              break;
            }
            case 80034: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                delabilityState_ = newLongList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                delabilityState_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          abilityState_ = java.util.Collections.unmodifiableList(abilityState_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          commands_ = java.util.Collections.unmodifiableList(commands_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          equiptIDs_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          equipRecommend_ = java.util.Collections.unmodifiableList(equipRecommend_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          delabilityState_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgHero_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgHero_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgHero.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 对局内的唯一ID,用于区分不同玩家或者AI等（必填）
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int ACTORSTATE_FIELD_NUMBER = 2;
    private MsgActorState actorState_;
    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     * @return Whether the actorState field is set.
     */
    @Override
    public boolean hasActorState() {
      return actorState_ != null;
    }
    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     * @return The actorState.
     */
    @Override
    public MsgActorState getActorState() {
      return actorState_ == null ? MsgActorState.getDefaultInstance() : actorState_;
    }
    /**
     * <pre>
     *（状态信息）
     * </pre>
     *
     * <code>.shuguang.MsgActorState actorState = 2;</code>
     */
    @Override
    public MsgActorStateOrBuilder getActorStateOrBuilder() {
      return getActorState();
    }

    public static final int ABILITYSTATE_FIELD_NUMBER = 3;
    private java.util.List<MsgAbilityState> abilityState_;
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    @Override
    public java.util.List<MsgAbilityState> getAbilityStateList() {
      return abilityState_;
    }
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    @Override
    public java.util.List<? extends MsgAbilityStateOrBuilder>
        getAbilityStateOrBuilderList() {
      return abilityState_;
    }
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    @Override
    public int getAbilityStateCount() {
      return abilityState_.size();
    }
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    @Override
    public MsgAbilityState getAbilityState(int index) {
      return abilityState_.get(index);
    }
    /**
     * <pre>
     *（技能列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
     */
    @Override
    public MsgAbilityStateOrBuilder getAbilityStateOrBuilder(
        int index) {
      return abilityState_.get(index);
    }

    public static final int COMMANDS_FIELD_NUMBER = 4;
    private java.util.List<Cmd.MsgCmd> commands_;
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    @Override
    public java.util.List<Cmd.MsgCmd> getCommandsList() {
      return commands_;
    }
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    @Override
    public java.util.List<? extends Cmd.MsgCmdOrBuilder>
        getCommandsOrBuilderList() {
      return commands_;
    }
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    @Override
    public int getCommandsCount() {
      return commands_.size();
    }
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    @Override
    public Cmd.MsgCmd getCommands(int index) {
      return commands_.get(index);
    }
    /**
     * <pre>
     *（操作命令）
     * </pre>
     *
     * <code>repeated .shuguang.MsgCmd commands = 4;</code>
     */
    @Override
    public Cmd.MsgCmdOrBuilder getCommandsOrBuilder(
        int index) {
      return commands_.get(index);
    }

    public static final int BSERVERAI_FIELD_NUMBER = 5;
    private boolean bServerAI_;
    /**
     * <pre>
     *（是否托管英雄）
     * </pre>
     *
     * <code>bool bServerAI = 5;</code>
     * @return The bServerAI.
     */
    @Override
    public boolean getBServerAI() {
      return bServerAI_;
    }

    public static final int EQUIPTIDS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList equiptIDs_;
    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @return A list containing the equiptIDs.
     */
    @Override
    public java.util.List<Integer>
        getEquiptIDsList() {
      return equiptIDs_;
    }
    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @return The count of equiptIDs.
     */
    public int getEquiptIDsCount() {
      return equiptIDs_.size();
    }
    /**
     * <pre>
     *（当前的英雄的装备列表）
     * </pre>
     *
     * <code>repeated int32 equiptIDs = 6;</code>
     * @param index The index of the element to return.
     * @return The equiptIDs at the given index.
     */
    public int getEquiptIDs(int index) {
      return equiptIDs_.getInt(index);
    }
    private int equiptIDsMemoizedSerializedSize = -1;

    public static final int EQUIPRECOMMEND_FIELD_NUMBER = 7;
    private java.util.List<MsgEquipRecommend> equipRecommend_;
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    @Override
    public java.util.List<MsgEquipRecommend> getEquipRecommendList() {
      return equipRecommend_;
    }
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    @Override
    public java.util.List<? extends MsgEquipRecommendOrBuilder>
        getEquipRecommendOrBuilderList() {
      return equipRecommend_;
    }
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    @Override
    public int getEquipRecommendCount() {
      return equipRecommend_.size();
    }
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    @Override
    public MsgEquipRecommend getEquipRecommend(int index) {
      return equipRecommend_.get(index);
    }
    /**
     * <pre>
     *（业务提供的装备列表）
     * </pre>
     *
     * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
     */
    @Override
    public MsgEquipRecommendOrBuilder getEquipRecommendOrBuilder(
        int index) {
      return equipRecommend_.get(index);
    }

    public static final int HEROID_FIELD_NUMBER = 8;
    private int heroId_;
    /**
     * <pre>
     *英雄ID(必填)
     * </pre>
     *
     * <code>int32 heroId = 8;</code>
     * @return The heroId.
     */
    @Override
    public int getHeroId() {
      return heroId_;
    }

    public static final int RACEID_FIELD_NUMBER = 9;
    private int raceId_;
    /**
     * <pre>
     *职业ID(必填)
     * </pre>
     *
     * <code>int32 raceId = 9;</code>
     * @return The raceId.
     */
    @Override
    public int getRaceId() {
      return raceId_;
    }

    public static final int ACCOUNT_FIELD_NUMBER = 10;
    private long account_;
    /**
     * <pre>
     *账号信息
     * </pre>
     *
     * <code>int64 account = 10;</code>
     * @return The account.
     */
    @Override
    public long getAccount() {
      return account_;
    }

    public static final int LEVEL_FIELD_NUMBER = 11;
    private int level_;
    /**
     * <pre>
     *等级(必填)
     * </pre>
     *
     * <code>int32 level = 11;</code>
     * @return The level.
     */
    @Override
    public int getLevel() {
      return level_;
    }

    public static final int ELO_FIELD_NUMBER = 12;
    private int elo_;
    /**
     * <pre>
     * elo值 （隐藏分）
     * </pre>
     *
     * <code>int32 elo = 12;</code>
     * @return The elo.
     */
    @Override
    public int getElo() {
      return elo_;
    }

    public static final int SCORE_FIELD_NUMBER = 13;
    private int score_;
    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 13;</code>
     * @return The score.
     */
    @Override
    public int getScore() {
      return score_;
    }

    public static final int DIFFICULTY_FIELD_NUMBER = 14;
    private int difficulty_;
    /**
     * <pre>
     * 难度 (以后再定，暂时可以不填)	
     * </pre>
     *
     * <code>int32 difficulty = 14;</code>
     * @return The difficulty.
     */
    @Override
    public int getDifficulty() {
      return difficulty_;
    }

    public static final int PLAYERTYPE_FIELD_NUMBER = 15;
    private int playerType_;
    /**
     * <code>int32 playerType = 15;</code>
     * @return The playerType.
     */
    @Override
    public int getPlayerType() {
      return playerType_;
    }

    public static final int AITYPE_FIELD_NUMBER = 16;
    private int aiType_;
    /**
     * <code>int32 aiType = 16;</code>
     * @return The aiType.
     */
    @Override
    public int getAiType() {
      return aiType_;
    }

    public static final int DELABILITYSTATE_FIELD_NUMBER = 10004;
    private com.google.protobuf.Internal.LongList delabilityState_;
    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @return A list containing the delabilityState.
     */
    @Override
    public java.util.List<Long>
        getDelabilityStateList() {
      return delabilityState_;
    }
    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @return The count of delabilityState.
     */
    public int getDelabilityStateCount() {
      return delabilityState_.size();
    }
    /**
     * <code>repeated int64 delabilityState = 10004;</code>
     * @param index The index of the element to return.
     * @return The delabilityState at the given index.
     */
    public long getDelabilityState(int index) {
      return delabilityState_.getLong(index);
    }
    private int delabilityStateMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (actorState_ != null) {
        output.writeMessage(2, getActorState());
      }
      for (int i = 0; i < abilityState_.size(); i++) {
        output.writeMessage(3, abilityState_.get(i));
      }
      for (int i = 0; i < commands_.size(); i++) {
        output.writeMessage(4, commands_.get(i));
      }
      if (bServerAI_ != false) {
        output.writeBool(5, bServerAI_);
      }
      if (getEquiptIDsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(equiptIDsMemoizedSerializedSize);
      }
      for (int i = 0; i < equiptIDs_.size(); i++) {
        output.writeInt32NoTag(equiptIDs_.getInt(i));
      }
      for (int i = 0; i < equipRecommend_.size(); i++) {
        output.writeMessage(7, equipRecommend_.get(i));
      }
      if (heroId_ != 0) {
        output.writeInt32(8, heroId_);
      }
      if (raceId_ != 0) {
        output.writeInt32(9, raceId_);
      }
      if (account_ != 0L) {
        output.writeInt64(10, account_);
      }
      if (level_ != 0) {
        output.writeInt32(11, level_);
      }
      if (elo_ != 0) {
        output.writeInt32(12, elo_);
      }
      if (score_ != 0) {
        output.writeInt32(13, score_);
      }
      if (difficulty_ != 0) {
        output.writeInt32(14, difficulty_);
      }
      if (playerType_ != 0) {
        output.writeInt32(15, playerType_);
      }
      if (aiType_ != 0) {
        output.writeInt32(16, aiType_);
      }
      if (getDelabilityStateList().size() > 0) {
        output.writeUInt32NoTag(80034);
        output.writeUInt32NoTag(delabilityStateMemoizedSerializedSize);
      }
      for (int i = 0; i < delabilityState_.size(); i++) {
        output.writeInt64NoTag(delabilityState_.getLong(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (actorState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getActorState());
      }
      for (int i = 0; i < abilityState_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, abilityState_.get(i));
      }
      for (int i = 0; i < commands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, commands_.get(i));
      }
      if (bServerAI_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, bServerAI_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equiptIDs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(equiptIDs_.getInt(i));
        }
        size += dataSize;
        if (!getEquiptIDsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        equiptIDsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < equipRecommend_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, equipRecommend_.get(i));
      }
      if (heroId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, heroId_);
      }
      if (raceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, raceId_);
      }
      if (account_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, account_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, level_);
      }
      if (elo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, elo_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, score_);
      }
      if (difficulty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, difficulty_);
      }
      if (playerType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, playerType_);
      }
      if (aiType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, aiType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < delabilityState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(delabilityState_.getLong(i));
        }
        size += dataSize;
        if (!getDelabilityStateList().isEmpty()) {
          size += 3;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        delabilityStateMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgHero)) {
        return super.equals(obj);
      }
      MsgHero other = (MsgHero) obj;

      if (getId()
          != other.getId()) return false;
      if (hasActorState() != other.hasActorState()) return false;
      if (hasActorState()) {
        if (!getActorState()
            .equals(other.getActorState())) return false;
      }
      if (!getAbilityStateList()
          .equals(other.getAbilityStateList())) return false;
      if (!getCommandsList()
          .equals(other.getCommandsList())) return false;
      if (getBServerAI()
          != other.getBServerAI()) return false;
      if (!getEquiptIDsList()
          .equals(other.getEquiptIDsList())) return false;
      if (!getEquipRecommendList()
          .equals(other.getEquipRecommendList())) return false;
      if (getHeroId()
          != other.getHeroId()) return false;
      if (getRaceId()
          != other.getRaceId()) return false;
      if (getAccount()
          != other.getAccount()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getElo()
          != other.getElo()) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getDifficulty()
          != other.getDifficulty()) return false;
      if (getPlayerType()
          != other.getPlayerType()) return false;
      if (getAiType()
          != other.getAiType()) return false;
      if (!getDelabilityStateList()
          .equals(other.getDelabilityStateList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (hasActorState()) {
        hash = (37 * hash) + ACTORSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getActorState().hashCode();
      }
      if (getAbilityStateCount() > 0) {
        hash = (37 * hash) + ABILITYSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityStateList().hashCode();
      }
      if (getCommandsCount() > 0) {
        hash = (37 * hash) + COMMANDS_FIELD_NUMBER;
        hash = (53 * hash) + getCommandsList().hashCode();
      }
      hash = (37 * hash) + BSERVERAI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBServerAI());
      if (getEquiptIDsCount() > 0) {
        hash = (37 * hash) + EQUIPTIDS_FIELD_NUMBER;
        hash = (53 * hash) + getEquiptIDsList().hashCode();
      }
      if (getEquipRecommendCount() > 0) {
        hash = (37 * hash) + EQUIPRECOMMEND_FIELD_NUMBER;
        hash = (53 * hash) + getEquipRecommendList().hashCode();
      }
      hash = (37 * hash) + HEROID_FIELD_NUMBER;
      hash = (53 * hash) + getHeroId();
      hash = (37 * hash) + RACEID_FIELD_NUMBER;
      hash = (53 * hash) + getRaceId();
      hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccount());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + ELO_FIELD_NUMBER;
      hash = (53 * hash) + getElo();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + DIFFICULTY_FIELD_NUMBER;
      hash = (53 * hash) + getDifficulty();
      hash = (37 * hash) + PLAYERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerType();
      hash = (37 * hash) + AITYPE_FIELD_NUMBER;
      hash = (53 * hash) + getAiType();
      if (getDelabilityStateCount() > 0) {
        hash = (37 * hash) + DELABILITYSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getDelabilityStateList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgHero parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgHero parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgHero parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgHero parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgHero parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgHero parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgHero parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgHero parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgHero parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgHero parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgHero parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgHero parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgHero prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 英雄的基础/技能/装备属性
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgHero}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgHero)
        MsgHeroOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgHero_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgHero_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgHero.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgHero.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAbilityStateFieldBuilder();
          getCommandsFieldBuilder();
          getEquipRecommendFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (actorStateBuilder_ == null) {
          actorState_ = null;
        } else {
          actorState_ = null;
          actorStateBuilder_ = null;
        }
        if (abilityStateBuilder_ == null) {
          abilityState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          abilityStateBuilder_.clear();
        }
        if (commandsBuilder_ == null) {
          commands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          commandsBuilder_.clear();
        }
        bServerAI_ = false;

        equiptIDs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (equipRecommendBuilder_ == null) {
          equipRecommend_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          equipRecommendBuilder_.clear();
        }
        heroId_ = 0;

        raceId_ = 0;

        account_ = 0L;

        level_ = 0;

        elo_ = 0;

        score_ = 0;

        difficulty_ = 0;

        playerType_ = 0;

        aiType_ = 0;

        delabilityState_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgHero_descriptor;
      }

      @Override
      public MsgHero getDefaultInstanceForType() {
        return MsgHero.getDefaultInstance();
      }

      @Override
      public MsgHero build() {
        MsgHero result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgHero buildPartial() {
        MsgHero result = new MsgHero(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (actorStateBuilder_ == null) {
          result.actorState_ = actorState_;
        } else {
          result.actorState_ = actorStateBuilder_.build();
        }
        if (abilityStateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            abilityState_ = java.util.Collections.unmodifiableList(abilityState_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.abilityState_ = abilityState_;
        } else {
          result.abilityState_ = abilityStateBuilder_.build();
        }
        if (commandsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            commands_ = java.util.Collections.unmodifiableList(commands_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.commands_ = commands_;
        } else {
          result.commands_ = commandsBuilder_.build();
        }
        result.bServerAI_ = bServerAI_;
        if (((bitField0_ & 0x00000004) != 0)) {
          equiptIDs_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.equiptIDs_ = equiptIDs_;
        if (equipRecommendBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            equipRecommend_ = java.util.Collections.unmodifiableList(equipRecommend_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.equipRecommend_ = equipRecommend_;
        } else {
          result.equipRecommend_ = equipRecommendBuilder_.build();
        }
        result.heroId_ = heroId_;
        result.raceId_ = raceId_;
        result.account_ = account_;
        result.level_ = level_;
        result.elo_ = elo_;
        result.score_ = score_;
        result.difficulty_ = difficulty_;
        result.playerType_ = playerType_;
        result.aiType_ = aiType_;
        if (((bitField0_ & 0x00000010) != 0)) {
          delabilityState_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.delabilityState_ = delabilityState_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgHero) {
          return mergeFrom((MsgHero)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgHero other) {
        if (other == MsgHero.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.hasActorState()) {
          mergeActorState(other.getActorState());
        }
        if (abilityStateBuilder_ == null) {
          if (!other.abilityState_.isEmpty()) {
            if (abilityState_.isEmpty()) {
              abilityState_ = other.abilityState_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAbilityStateIsMutable();
              abilityState_.addAll(other.abilityState_);
            }
            onChanged();
          }
        } else {
          if (!other.abilityState_.isEmpty()) {
            if (abilityStateBuilder_.isEmpty()) {
              abilityStateBuilder_.dispose();
              abilityStateBuilder_ = null;
              abilityState_ = other.abilityState_;
              bitField0_ = (bitField0_ & ~0x00000001);
              abilityStateBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAbilityStateFieldBuilder() : null;
            } else {
              abilityStateBuilder_.addAllMessages(other.abilityState_);
            }
          }
        }
        if (commandsBuilder_ == null) {
          if (!other.commands_.isEmpty()) {
            if (commands_.isEmpty()) {
              commands_ = other.commands_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCommandsIsMutable();
              commands_.addAll(other.commands_);
            }
            onChanged();
          }
        } else {
          if (!other.commands_.isEmpty()) {
            if (commandsBuilder_.isEmpty()) {
              commandsBuilder_.dispose();
              commandsBuilder_ = null;
              commands_ = other.commands_;
              bitField0_ = (bitField0_ & ~0x00000002);
              commandsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCommandsFieldBuilder() : null;
            } else {
              commandsBuilder_.addAllMessages(other.commands_);
            }
          }
        }
        if (other.getBServerAI() != false) {
          setBServerAI(other.getBServerAI());
        }
        if (!other.equiptIDs_.isEmpty()) {
          if (equiptIDs_.isEmpty()) {
            equiptIDs_ = other.equiptIDs_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEquiptIDsIsMutable();
            equiptIDs_.addAll(other.equiptIDs_);
          }
          onChanged();
        }
        if (equipRecommendBuilder_ == null) {
          if (!other.equipRecommend_.isEmpty()) {
            if (equipRecommend_.isEmpty()) {
              equipRecommend_ = other.equipRecommend_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureEquipRecommendIsMutable();
              equipRecommend_.addAll(other.equipRecommend_);
            }
            onChanged();
          }
        } else {
          if (!other.equipRecommend_.isEmpty()) {
            if (equipRecommendBuilder_.isEmpty()) {
              equipRecommendBuilder_.dispose();
              equipRecommendBuilder_ = null;
              equipRecommend_ = other.equipRecommend_;
              bitField0_ = (bitField0_ & ~0x00000008);
              equipRecommendBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEquipRecommendFieldBuilder() : null;
            } else {
              equipRecommendBuilder_.addAllMessages(other.equipRecommend_);
            }
          }
        }
        if (other.getHeroId() != 0) {
          setHeroId(other.getHeroId());
        }
        if (other.getRaceId() != 0) {
          setRaceId(other.getRaceId());
        }
        if (other.getAccount() != 0L) {
          setAccount(other.getAccount());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getElo() != 0) {
          setElo(other.getElo());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getDifficulty() != 0) {
          setDifficulty(other.getDifficulty());
        }
        if (other.getPlayerType() != 0) {
          setPlayerType(other.getPlayerType());
        }
        if (other.getAiType() != 0) {
          setAiType(other.getAiType());
        }
        if (!other.delabilityState_.isEmpty()) {
          if (delabilityState_.isEmpty()) {
            delabilityState_ = other.delabilityState_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDelabilityStateIsMutable();
            delabilityState_.addAll(other.delabilityState_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgHero parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgHero) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * 对局内的唯一ID,用于区分不同玩家或者AI等（必填）
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 对局内的唯一ID,用于区分不同玩家或者AI等（必填）
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对局内的唯一ID,用于区分不同玩家或者AI等（必填）
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private MsgActorState actorState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgActorState, MsgActorState.Builder, MsgActorStateOrBuilder> actorStateBuilder_;
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       * @return Whether the actorState field is set.
       */
      public boolean hasActorState() {
        return actorStateBuilder_ != null || actorState_ != null;
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       * @return The actorState.
       */
      public MsgActorState getActorState() {
        if (actorStateBuilder_ == null) {
          return actorState_ == null ? MsgActorState.getDefaultInstance() : actorState_;
        } else {
          return actorStateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public Builder setActorState(MsgActorState value) {
        if (actorStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actorState_ = value;
          onChanged();
        } else {
          actorStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public Builder setActorState(
          MsgActorState.Builder builderForValue) {
        if (actorStateBuilder_ == null) {
          actorState_ = builderForValue.build();
          onChanged();
        } else {
          actorStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public Builder mergeActorState(MsgActorState value) {
        if (actorStateBuilder_ == null) {
          if (actorState_ != null) {
            actorState_ =
              MsgActorState.newBuilder(actorState_).mergeFrom(value).buildPartial();
          } else {
            actorState_ = value;
          }
          onChanged();
        } else {
          actorStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public Builder clearActorState() {
        if (actorStateBuilder_ == null) {
          actorState_ = null;
          onChanged();
        } else {
          actorState_ = null;
          actorStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public MsgActorState.Builder getActorStateBuilder() {
        
        onChanged();
        return getActorStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      public MsgActorStateOrBuilder getActorStateOrBuilder() {
        if (actorStateBuilder_ != null) {
          return actorStateBuilder_.getMessageOrBuilder();
        } else {
          return actorState_ == null ?
              MsgActorState.getDefaultInstance() : actorState_;
        }
      }
      /**
       * <pre>
       *（状态信息）
       * </pre>
       *
       * <code>.shuguang.MsgActorState actorState = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgActorState, MsgActorState.Builder, MsgActorStateOrBuilder>
          getActorStateFieldBuilder() {
        if (actorStateBuilder_ == null) {
          actorStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgActorState, MsgActorState.Builder, MsgActorStateOrBuilder>(
                  getActorState(),
                  getParentForChildren(),
                  isClean());
          actorState_ = null;
        }
        return actorStateBuilder_;
      }

      private java.util.List<MsgAbilityState> abilityState_ =
        java.util.Collections.emptyList();
      private void ensureAbilityStateIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          abilityState_ = new java.util.ArrayList<MsgAbilityState>(abilityState_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgAbilityState, MsgAbilityState.Builder, MsgAbilityStateOrBuilder> abilityStateBuilder_;

      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public java.util.List<MsgAbilityState> getAbilityStateList() {
        if (abilityStateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(abilityState_);
        } else {
          return abilityStateBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public int getAbilityStateCount() {
        if (abilityStateBuilder_ == null) {
          return abilityState_.size();
        } else {
          return abilityStateBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public MsgAbilityState getAbilityState(int index) {
        if (abilityStateBuilder_ == null) {
          return abilityState_.get(index);
        } else {
          return abilityStateBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder setAbilityState(
          int index, MsgAbilityState value) {
        if (abilityStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAbilityStateIsMutable();
          abilityState_.set(index, value);
          onChanged();
        } else {
          abilityStateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder setAbilityState(
          int index, MsgAbilityState.Builder builderForValue) {
        if (abilityStateBuilder_ == null) {
          ensureAbilityStateIsMutable();
          abilityState_.set(index, builderForValue.build());
          onChanged();
        } else {
          abilityStateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder addAbilityState(MsgAbilityState value) {
        if (abilityStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAbilityStateIsMutable();
          abilityState_.add(value);
          onChanged();
        } else {
          abilityStateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder addAbilityState(
          int index, MsgAbilityState value) {
        if (abilityStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAbilityStateIsMutable();
          abilityState_.add(index, value);
          onChanged();
        } else {
          abilityStateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder addAbilityState(
          MsgAbilityState.Builder builderForValue) {
        if (abilityStateBuilder_ == null) {
          ensureAbilityStateIsMutable();
          abilityState_.add(builderForValue.build());
          onChanged();
        } else {
          abilityStateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder addAbilityState(
          int index, MsgAbilityState.Builder builderForValue) {
        if (abilityStateBuilder_ == null) {
          ensureAbilityStateIsMutable();
          abilityState_.add(index, builderForValue.build());
          onChanged();
        } else {
          abilityStateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder addAllAbilityState(
          Iterable<? extends MsgAbilityState> values) {
        if (abilityStateBuilder_ == null) {
          ensureAbilityStateIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, abilityState_);
          onChanged();
        } else {
          abilityStateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder clearAbilityState() {
        if (abilityStateBuilder_ == null) {
          abilityState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          abilityStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public Builder removeAbilityState(int index) {
        if (abilityStateBuilder_ == null) {
          ensureAbilityStateIsMutable();
          abilityState_.remove(index);
          onChanged();
        } else {
          abilityStateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public MsgAbilityState.Builder getAbilityStateBuilder(
          int index) {
        return getAbilityStateFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public MsgAbilityStateOrBuilder getAbilityStateOrBuilder(
          int index) {
        if (abilityStateBuilder_ == null) {
          return abilityState_.get(index);  } else {
          return abilityStateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public java.util.List<? extends MsgAbilityStateOrBuilder>
           getAbilityStateOrBuilderList() {
        if (abilityStateBuilder_ != null) {
          return abilityStateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(abilityState_);
        }
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public MsgAbilityState.Builder addAbilityStateBuilder() {
        return getAbilityStateFieldBuilder().addBuilder(
            MsgAbilityState.getDefaultInstance());
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public MsgAbilityState.Builder addAbilityStateBuilder(
          int index) {
        return getAbilityStateFieldBuilder().addBuilder(
            index, MsgAbilityState.getDefaultInstance());
      }
      /**
       * <pre>
       *（技能列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgAbilityState abilityState = 3;</code>
       */
      public java.util.List<MsgAbilityState.Builder>
           getAbilityStateBuilderList() {
        return getAbilityStateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgAbilityState, MsgAbilityState.Builder, MsgAbilityStateOrBuilder>
          getAbilityStateFieldBuilder() {
        if (abilityStateBuilder_ == null) {
          abilityStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgAbilityState, MsgAbilityState.Builder, MsgAbilityStateOrBuilder>(
                  abilityState_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          abilityState_ = null;
        }
        return abilityStateBuilder_;
      }

      private java.util.List<Cmd.MsgCmd> commands_ =
        java.util.Collections.emptyList();
      private void ensureCommandsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          commands_ = new java.util.ArrayList<Cmd.MsgCmd>(commands_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgCmd, Cmd.MsgCmd.Builder, Cmd.MsgCmdOrBuilder> commandsBuilder_;

      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public java.util.List<Cmd.MsgCmd> getCommandsList() {
        if (commandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(commands_);
        } else {
          return commandsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public int getCommandsCount() {
        if (commandsBuilder_ == null) {
          return commands_.size();
        } else {
          return commandsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Cmd.MsgCmd getCommands(int index) {
        if (commandsBuilder_ == null) {
          return commands_.get(index);
        } else {
          return commandsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder setCommands(
          int index, Cmd.MsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.set(index, value);
          onChanged();
        } else {
          commandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder setCommands(
          int index, Cmd.MsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.set(index, builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder addCommands(Cmd.MsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.add(value);
          onChanged();
        } else {
          commandsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder addCommands(
          int index, Cmd.MsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.add(index, value);
          onChanged();
        } else {
          commandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder addCommands(
          Cmd.MsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.add(builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder addCommands(
          int index, Cmd.MsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.add(index, builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder addAllCommands(
          Iterable<? extends Cmd.MsgCmd> values) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, commands_);
          onChanged();
        } else {
          commandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder clearCommands() {
        if (commandsBuilder_ == null) {
          commands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          commandsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Builder removeCommands(int index) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.remove(index);
          onChanged();
        } else {
          commandsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Cmd.MsgCmd.Builder getCommandsBuilder(
          int index) {
        return getCommandsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Cmd.MsgCmdOrBuilder getCommandsOrBuilder(
          int index) {
        if (commandsBuilder_ == null) {
          return commands_.get(index);  } else {
          return commandsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public java.util.List<? extends Cmd.MsgCmdOrBuilder>
           getCommandsOrBuilderList() {
        if (commandsBuilder_ != null) {
          return commandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(commands_);
        }
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Cmd.MsgCmd.Builder addCommandsBuilder() {
        return getCommandsFieldBuilder().addBuilder(
            Cmd.MsgCmd.getDefaultInstance());
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public Cmd.MsgCmd.Builder addCommandsBuilder(
          int index) {
        return getCommandsFieldBuilder().addBuilder(
            index, Cmd.MsgCmd.getDefaultInstance());
      }
      /**
       * <pre>
       *（操作命令）
       * </pre>
       *
       * <code>repeated .shuguang.MsgCmd commands = 4;</code>
       */
      public java.util.List<Cmd.MsgCmd.Builder>
           getCommandsBuilderList() {
        return getCommandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgCmd, Cmd.MsgCmd.Builder, Cmd.MsgCmdOrBuilder>
          getCommandsFieldBuilder() {
        if (commandsBuilder_ == null) {
          commandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Cmd.MsgCmd, Cmd.MsgCmd.Builder, Cmd.MsgCmdOrBuilder>(
                  commands_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          commands_ = null;
        }
        return commandsBuilder_;
      }

      private boolean bServerAI_ ;
      /**
       * <pre>
       *（是否托管英雄）
       * </pre>
       *
       * <code>bool bServerAI = 5;</code>
       * @return The bServerAI.
       */
      @Override
      public boolean getBServerAI() {
        return bServerAI_;
      }
      /**
       * <pre>
       *（是否托管英雄）
       * </pre>
       *
       * <code>bool bServerAI = 5;</code>
       * @param value The bServerAI to set.
       * @return This builder for chaining.
       */
      public Builder setBServerAI(boolean value) {
        
        bServerAI_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *（是否托管英雄）
       * </pre>
       *
       * <code>bool bServerAI = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBServerAI() {
        
        bServerAI_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList equiptIDs_ = emptyIntList();
      private void ensureEquiptIDsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          equiptIDs_ = mutableCopy(equiptIDs_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @return A list containing the equiptIDs.
       */
      public java.util.List<Integer>
          getEquiptIDsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(equiptIDs_) : equiptIDs_;
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @return The count of equiptIDs.
       */
      public int getEquiptIDsCount() {
        return equiptIDs_.size();
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @param index The index of the element to return.
       * @return The equiptIDs at the given index.
       */
      public int getEquiptIDs(int index) {
        return equiptIDs_.getInt(index);
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @param index The index to set the value at.
       * @param value The equiptIDs to set.
       * @return This builder for chaining.
       */
      public Builder setEquiptIDs(
          int index, int value) {
        ensureEquiptIDsIsMutable();
        equiptIDs_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @param value The equiptIDs to add.
       * @return This builder for chaining.
       */
      public Builder addEquiptIDs(int value) {
        ensureEquiptIDsIsMutable();
        equiptIDs_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @param values The equiptIDs to add.
       * @return This builder for chaining.
       */
      public Builder addAllEquiptIDs(
          Iterable<? extends Integer> values) {
        ensureEquiptIDsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, equiptIDs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *（当前的英雄的装备列表）
       * </pre>
       *
       * <code>repeated int32 equiptIDs = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquiptIDs() {
        equiptIDs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<MsgEquipRecommend> equipRecommend_ =
        java.util.Collections.emptyList();
      private void ensureEquipRecommendIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          equipRecommend_ = new java.util.ArrayList<MsgEquipRecommend>(equipRecommend_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgEquipRecommend, MsgEquipRecommend.Builder, MsgEquipRecommendOrBuilder> equipRecommendBuilder_;

      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public java.util.List<MsgEquipRecommend> getEquipRecommendList() {
        if (equipRecommendBuilder_ == null) {
          return java.util.Collections.unmodifiableList(equipRecommend_);
        } else {
          return equipRecommendBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public int getEquipRecommendCount() {
        if (equipRecommendBuilder_ == null) {
          return equipRecommend_.size();
        } else {
          return equipRecommendBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public MsgEquipRecommend getEquipRecommend(int index) {
        if (equipRecommendBuilder_ == null) {
          return equipRecommend_.get(index);
        } else {
          return equipRecommendBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder setEquipRecommend(
          int index, MsgEquipRecommend value) {
        if (equipRecommendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipRecommendIsMutable();
          equipRecommend_.set(index, value);
          onChanged();
        } else {
          equipRecommendBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder setEquipRecommend(
          int index, MsgEquipRecommend.Builder builderForValue) {
        if (equipRecommendBuilder_ == null) {
          ensureEquipRecommendIsMutable();
          equipRecommend_.set(index, builderForValue.build());
          onChanged();
        } else {
          equipRecommendBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder addEquipRecommend(MsgEquipRecommend value) {
        if (equipRecommendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipRecommendIsMutable();
          equipRecommend_.add(value);
          onChanged();
        } else {
          equipRecommendBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder addEquipRecommend(
          int index, MsgEquipRecommend value) {
        if (equipRecommendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipRecommendIsMutable();
          equipRecommend_.add(index, value);
          onChanged();
        } else {
          equipRecommendBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder addEquipRecommend(
          MsgEquipRecommend.Builder builderForValue) {
        if (equipRecommendBuilder_ == null) {
          ensureEquipRecommendIsMutable();
          equipRecommend_.add(builderForValue.build());
          onChanged();
        } else {
          equipRecommendBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder addEquipRecommend(
          int index, MsgEquipRecommend.Builder builderForValue) {
        if (equipRecommendBuilder_ == null) {
          ensureEquipRecommendIsMutable();
          equipRecommend_.add(index, builderForValue.build());
          onChanged();
        } else {
          equipRecommendBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder addAllEquipRecommend(
          Iterable<? extends MsgEquipRecommend> values) {
        if (equipRecommendBuilder_ == null) {
          ensureEquipRecommendIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, equipRecommend_);
          onChanged();
        } else {
          equipRecommendBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder clearEquipRecommend() {
        if (equipRecommendBuilder_ == null) {
          equipRecommend_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          equipRecommendBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public Builder removeEquipRecommend(int index) {
        if (equipRecommendBuilder_ == null) {
          ensureEquipRecommendIsMutable();
          equipRecommend_.remove(index);
          onChanged();
        } else {
          equipRecommendBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public MsgEquipRecommend.Builder getEquipRecommendBuilder(
          int index) {
        return getEquipRecommendFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public MsgEquipRecommendOrBuilder getEquipRecommendOrBuilder(
          int index) {
        if (equipRecommendBuilder_ == null) {
          return equipRecommend_.get(index);  } else {
          return equipRecommendBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public java.util.List<? extends MsgEquipRecommendOrBuilder>
           getEquipRecommendOrBuilderList() {
        if (equipRecommendBuilder_ != null) {
          return equipRecommendBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(equipRecommend_);
        }
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public MsgEquipRecommend.Builder addEquipRecommendBuilder() {
        return getEquipRecommendFieldBuilder().addBuilder(
            MsgEquipRecommend.getDefaultInstance());
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public MsgEquipRecommend.Builder addEquipRecommendBuilder(
          int index) {
        return getEquipRecommendFieldBuilder().addBuilder(
            index, MsgEquipRecommend.getDefaultInstance());
      }
      /**
       * <pre>
       *（业务提供的装备列表）
       * </pre>
       *
       * <code>repeated .shuguang.MsgEquipRecommend equipRecommend = 7;</code>
       */
      public java.util.List<MsgEquipRecommend.Builder>
           getEquipRecommendBuilderList() {
        return getEquipRecommendFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgEquipRecommend, MsgEquipRecommend.Builder, MsgEquipRecommendOrBuilder>
          getEquipRecommendFieldBuilder() {
        if (equipRecommendBuilder_ == null) {
          equipRecommendBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgEquipRecommend, MsgEquipRecommend.Builder, MsgEquipRecommendOrBuilder>(
                  equipRecommend_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          equipRecommend_ = null;
        }
        return equipRecommendBuilder_;
      }

      private int heroId_ ;
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 8;</code>
       * @return The heroId.
       */
      @Override
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 8;</code>
       * @param value The heroId to set.
       * @return This builder for chaining.
       */
      public Builder setHeroId(int value) {
        
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroId() {
        
        heroId_ = 0;
        onChanged();
        return this;
      }

      private int raceId_ ;
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 9;</code>
       * @return The raceId.
       */
      @Override
      public int getRaceId() {
        return raceId_;
      }
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 9;</code>
       * @param value The raceId to set.
       * @return This builder for chaining.
       */
      public Builder setRaceId(int value) {
        
        raceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRaceId() {
        
        raceId_ = 0;
        onChanged();
        return this;
      }

      private long account_ ;
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 10;</code>
       * @return The account.
       */
      @Override
      public long getAccount() {
        return account_;
      }
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 10;</code>
       * @param value The account to set.
       * @return This builder for chaining.
       */
      public Builder setAccount(long value) {
        
        account_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccount() {
        
        account_ = 0L;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 11;</code>
       * @return The level.
       */
      @Override
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 11;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int elo_ ;
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 12;</code>
       * @return The elo.
       */
      @Override
      public int getElo() {
        return elo_;
      }
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 12;</code>
       * @param value The elo to set.
       * @return This builder for chaining.
       */
      public Builder setElo(int value) {
        
        elo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearElo() {
        
        elo_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 13;</code>
       * @return The score.
       */
      @Override
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 13;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int difficulty_ ;
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)	
       * </pre>
       *
       * <code>int32 difficulty = 14;</code>
       * @return The difficulty.
       */
      @Override
      public int getDifficulty() {
        return difficulty_;
      }
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)	
       * </pre>
       *
       * <code>int32 difficulty = 14;</code>
       * @param value The difficulty to set.
       * @return This builder for chaining.
       */
      public Builder setDifficulty(int value) {
        
        difficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)	
       * </pre>
       *
       * <code>int32 difficulty = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDifficulty() {
        
        difficulty_ = 0;
        onChanged();
        return this;
      }

      private int playerType_ ;
      /**
       * <code>int32 playerType = 15;</code>
       * @return The playerType.
       */
      @Override
      public int getPlayerType() {
        return playerType_;
      }
      /**
       * <code>int32 playerType = 15;</code>
       * @param value The playerType to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerType(int value) {
        
        playerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 playerType = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerType() {
        
        playerType_ = 0;
        onChanged();
        return this;
      }

      private int aiType_ ;
      /**
       * <code>int32 aiType = 16;</code>
       * @return The aiType.
       */
      @Override
      public int getAiType() {
        return aiType_;
      }
      /**
       * <code>int32 aiType = 16;</code>
       * @param value The aiType to set.
       * @return This builder for chaining.
       */
      public Builder setAiType(int value) {
        
        aiType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 aiType = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearAiType() {
        
        aiType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList delabilityState_ = emptyLongList();
      private void ensureDelabilityStateIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          delabilityState_ = mutableCopy(delabilityState_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @return A list containing the delabilityState.
       */
      public java.util.List<Long>
          getDelabilityStateList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(delabilityState_) : delabilityState_;
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @return The count of delabilityState.
       */
      public int getDelabilityStateCount() {
        return delabilityState_.size();
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @param index The index of the element to return.
       * @return The delabilityState at the given index.
       */
      public long getDelabilityState(int index) {
        return delabilityState_.getLong(index);
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @param index The index to set the value at.
       * @param value The delabilityState to set.
       * @return This builder for chaining.
       */
      public Builder setDelabilityState(
          int index, long value) {
        ensureDelabilityStateIsMutable();
        delabilityState_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @param value The delabilityState to add.
       * @return This builder for chaining.
       */
      public Builder addDelabilityState(long value) {
        ensureDelabilityStateIsMutable();
        delabilityState_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @param values The delabilityState to add.
       * @return This builder for chaining.
       */
      public Builder addAllDelabilityState(
          Iterable<? extends Long> values) {
        ensureDelabilityStateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delabilityState_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 delabilityState = 10004;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelabilityState() {
        delabilityState_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgHero)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgHero)
    private static final MsgHero DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgHero();
    }

    public static MsgHero getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgHero>
        PARSER = new com.google.protobuf.AbstractParser<MsgHero>() {
      @Override
      public MsgHero parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgHero(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgHero> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgHero> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgHero getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgResultHeroOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgResultHero)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 反馈给业务的英雄的唯一标识
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    java.util.List<Cmd.ResultMsgCmd>
        getCommandsList();
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    Cmd.ResultMsgCmd getCommands(int index);
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    int getCommandsCount();
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    java.util.List<? extends Cmd.ResultMsgCmdOrBuilder>
        getCommandsOrBuilderList();
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    Cmd.ResultMsgCmdOrBuilder getCommandsOrBuilder(
        int index);

    /**
     * <pre>
     * 调试信息
     * </pre>
     *
     * <code>bytes debugString = 3;</code>
     * @return The debugString.
     */
    com.google.protobuf.ByteString getDebugString();
  }
  /**
   * <pre>
   *返回的英雄操作数据
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgResultHero}
   */
  public static final class MsgResultHero extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgResultHero)
      MsgResultHeroOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgResultHero.newBuilder() to construct.
    private MsgResultHero(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgResultHero() {
      commands_ = java.util.Collections.emptyList();
      debugString_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgResultHero();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgResultHero(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                commands_ = new java.util.ArrayList<Cmd.ResultMsgCmd>();
                mutable_bitField0_ |= 0x00000001;
              }
              commands_.add(
                  input.readMessage(Cmd.ResultMsgCmd.parser(), extensionRegistry));
              break;
            }
            case 26: {

              debugString_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          commands_ = java.util.Collections.unmodifiableList(commands_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hero.internal_static_shuguang_MsgResultHero_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hero.internal_static_shuguang_MsgResultHero_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgResultHero.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 反馈给业务的英雄的唯一标识
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int COMMANDS_FIELD_NUMBER = 2;
    private java.util.List<Cmd.ResultMsgCmd> commands_;
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    @Override
    public java.util.List<Cmd.ResultMsgCmd> getCommandsList() {
      return commands_;
    }
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    @Override
    public java.util.List<? extends Cmd.ResultMsgCmdOrBuilder>
        getCommandsOrBuilderList() {
      return commands_;
    }
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    @Override
    public int getCommandsCount() {
      return commands_.size();
    }
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    @Override
    public Cmd.ResultMsgCmd getCommands(int index) {
      return commands_.get(index);
    }
    /**
     * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
     */
    @Override
    public Cmd.ResultMsgCmdOrBuilder getCommandsOrBuilder(
        int index) {
      return commands_.get(index);
    }

    public static final int DEBUGSTRING_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString debugString_;
    /**
     * <pre>
     * 调试信息
     * </pre>
     *
     * <code>bytes debugString = 3;</code>
     * @return The debugString.
     */
    @Override
    public com.google.protobuf.ByteString getDebugString() {
      return debugString_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      for (int i = 0; i < commands_.size(); i++) {
        output.writeMessage(2, commands_.get(i));
      }
      if (!debugString_.isEmpty()) {
        output.writeBytes(3, debugString_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      for (int i = 0; i < commands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, commands_.get(i));
      }
      if (!debugString_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, debugString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgResultHero)) {
        return super.equals(obj);
      }
      MsgResultHero other = (MsgResultHero) obj;

      if (getId()
          != other.getId()) return false;
      if (!getCommandsList()
          .equals(other.getCommandsList())) return false;
      if (!getDebugString()
          .equals(other.getDebugString())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      if (getCommandsCount() > 0) {
        hash = (37 * hash) + COMMANDS_FIELD_NUMBER;
        hash = (53 * hash) + getCommandsList().hashCode();
      }
      hash = (37 * hash) + DEBUGSTRING_FIELD_NUMBER;
      hash = (53 * hash) + getDebugString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgResultHero parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgResultHero parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgResultHero parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgResultHero parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgResultHero parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgResultHero parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgResultHero parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgResultHero parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgResultHero parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgResultHero parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgResultHero parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgResultHero parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgResultHero prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *返回的英雄操作数据
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgResultHero}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgResultHero)
        MsgResultHeroOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hero.internal_static_shuguang_MsgResultHero_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hero.internal_static_shuguang_MsgResultHero_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgResultHero.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Hero.MsgResultHero.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCommandsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        if (commandsBuilder_ == null) {
          commands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          commandsBuilder_.clear();
        }
        debugString_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hero.internal_static_shuguang_MsgResultHero_descriptor;
      }

      @Override
      public MsgResultHero getDefaultInstanceForType() {
        return MsgResultHero.getDefaultInstance();
      }

      @Override
      public MsgResultHero build() {
        MsgResultHero result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgResultHero buildPartial() {
        MsgResultHero result = new MsgResultHero(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (commandsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            commands_ = java.util.Collections.unmodifiableList(commands_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.commands_ = commands_;
        } else {
          result.commands_ = commandsBuilder_.build();
        }
        result.debugString_ = debugString_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgResultHero) {
          return mergeFrom((MsgResultHero)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgResultHero other) {
        if (other == MsgResultHero.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (commandsBuilder_ == null) {
          if (!other.commands_.isEmpty()) {
            if (commands_.isEmpty()) {
              commands_ = other.commands_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCommandsIsMutable();
              commands_.addAll(other.commands_);
            }
            onChanged();
          }
        } else {
          if (!other.commands_.isEmpty()) {
            if (commandsBuilder_.isEmpty()) {
              commandsBuilder_.dispose();
              commandsBuilder_ = null;
              commands_ = other.commands_;
              bitField0_ = (bitField0_ & ~0x00000001);
              commandsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCommandsFieldBuilder() : null;
            } else {
              commandsBuilder_.addAllMessages(other.commands_);
            }
          }
        }
        if (other.getDebugString() != com.google.protobuf.ByteString.EMPTY) {
          setDebugString(other.getDebugString());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgResultHero parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgResultHero) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * 反馈给业务的英雄的唯一标识
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 反馈给业务的英雄的唯一标识
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 反馈给业务的英雄的唯一标识
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<Cmd.ResultMsgCmd> commands_ =
        java.util.Collections.emptyList();
      private void ensureCommandsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          commands_ = new java.util.ArrayList<Cmd.ResultMsgCmd>(commands_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.ResultMsgCmd, Cmd.ResultMsgCmd.Builder, Cmd.ResultMsgCmdOrBuilder> commandsBuilder_;

      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public java.util.List<Cmd.ResultMsgCmd> getCommandsList() {
        if (commandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(commands_);
        } else {
          return commandsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public int getCommandsCount() {
        if (commandsBuilder_ == null) {
          return commands_.size();
        } else {
          return commandsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Cmd.ResultMsgCmd getCommands(int index) {
        if (commandsBuilder_ == null) {
          return commands_.get(index);
        } else {
          return commandsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder setCommands(
          int index, Cmd.ResultMsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.set(index, value);
          onChanged();
        } else {
          commandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder setCommands(
          int index, Cmd.ResultMsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.set(index, builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder addCommands(Cmd.ResultMsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.add(value);
          onChanged();
        } else {
          commandsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder addCommands(
          int index, Cmd.ResultMsgCmd value) {
        if (commandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommandsIsMutable();
          commands_.add(index, value);
          onChanged();
        } else {
          commandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder addCommands(
          Cmd.ResultMsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.add(builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder addCommands(
          int index, Cmd.ResultMsgCmd.Builder builderForValue) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.add(index, builderForValue.build());
          onChanged();
        } else {
          commandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder addAllCommands(
          Iterable<? extends Cmd.ResultMsgCmd> values) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, commands_);
          onChanged();
        } else {
          commandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder clearCommands() {
        if (commandsBuilder_ == null) {
          commands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          commandsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Builder removeCommands(int index) {
        if (commandsBuilder_ == null) {
          ensureCommandsIsMutable();
          commands_.remove(index);
          onChanged();
        } else {
          commandsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Cmd.ResultMsgCmd.Builder getCommandsBuilder(
          int index) {
        return getCommandsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Cmd.ResultMsgCmdOrBuilder getCommandsOrBuilder(
          int index) {
        if (commandsBuilder_ == null) {
          return commands_.get(index);  } else {
          return commandsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public java.util.List<? extends Cmd.ResultMsgCmdOrBuilder>
           getCommandsOrBuilderList() {
        if (commandsBuilder_ != null) {
          return commandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(commands_);
        }
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Cmd.ResultMsgCmd.Builder addCommandsBuilder() {
        return getCommandsFieldBuilder().addBuilder(
            Cmd.ResultMsgCmd.getDefaultInstance());
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public Cmd.ResultMsgCmd.Builder addCommandsBuilder(
          int index) {
        return getCommandsFieldBuilder().addBuilder(
            index, Cmd.ResultMsgCmd.getDefaultInstance());
      }
      /**
       * <code>repeated .shuguang.ResultMsgCmd commands = 2;</code>
       */
      public java.util.List<Cmd.ResultMsgCmd.Builder>
           getCommandsBuilderList() {
        return getCommandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.ResultMsgCmd, Cmd.ResultMsgCmd.Builder, Cmd.ResultMsgCmdOrBuilder>
          getCommandsFieldBuilder() {
        if (commandsBuilder_ == null) {
          commandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Cmd.ResultMsgCmd, Cmd.ResultMsgCmd.Builder, Cmd.ResultMsgCmdOrBuilder>(
                  commands_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          commands_ = null;
        }
        return commandsBuilder_;
      }

      private com.google.protobuf.ByteString debugString_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 调试信息
       * </pre>
       *
       * <code>bytes debugString = 3;</code>
       * @return The debugString.
       */
      @Override
      public com.google.protobuf.ByteString getDebugString() {
        return debugString_;
      }
      /**
       * <pre>
       * 调试信息
       * </pre>
       *
       * <code>bytes debugString = 3;</code>
       * @param value The debugString to set.
       * @return This builder for chaining.
       */
      public Builder setDebugString(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        debugString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 调试信息
       * </pre>
       *
       * <code>bytes debugString = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDebugString() {
        
        debugString_ = getDefaultInstance().getDebugString();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgResultHero)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgResultHero)
    private static final MsgResultHero DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgResultHero();
    }

    public static MsgResultHero getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgResultHero>
        PARSER = new com.google.protobuf.AbstractParser<MsgResultHero>() {
      @Override
      public MsgResultHero parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgResultHero(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgResultHero> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgResultHero> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgResultHero getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_VInt2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_VInt2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgSkillRangeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgSkillRangeData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgSkillRange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgSkillRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgAbilityState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgAbilityState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgActorState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgActorState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgEquipRecommend_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgEquipRecommend_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgHero_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgHero_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgResultHero_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgResultHero_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\nhero.proto\022\010shuguang\032\tcmd.proto\"\036\n\006VIn" +
      "t2D\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"Z\n\021MsgSkillRan" +
      "geData\022\r\n\005value\030\001 \001(\005\022\021\n\tnextValue\030\002 \001(\005" +
      "\022\021\n\tstartTime\030\003 \001(\005\022\020\n\010duration\030\004 \001(\005\"\255\001" +
      "\n\rMsgSkillRange\022/\n\nchaseRange\030\001 \001(\0132\033.sh" +
      "uguang.MsgSkillRangeData\022.\n\tcastRange\030\002 " +
      "\001(\0132\033.shuguang.MsgSkillRangeData\022;\n\026cast" +
      "RangeWithoutTarget\030\003 \001(\0132\033.shuguang.MsgS" +
      "killRangeData\"\260\002\n\017MsgAbilityState\022\n\n\002Id\030" +
      "\001 \001(\003\022\r\n\005level\030\002 \001(\005\022\014\n\004slot\030\003 \001(\005\022\014\n\004ty" +
      "pe\030\004 \001(\005\022\016\n\006usable\030\005 \001(\010\022\n\n\002cd\030\006 \001(\005\022\r\n\005" +
      "cdMax\030\007 \001(\005\022)\n\010atkRange\030\010 \003(\0132\027.shuguang" +
      ".MsgSkillRange\022\016\n\006hpCost\030\t \001(\005\022\016\n\006mpCost" +
      "\030\n \001(\005\022\016\n\006xpCost\030\013 \001(\005\022\017\n\007segment\030\014 \001(\005\022" +
      "\020\n\010progress\030\r \001(\005\022\023\n\013isOutofMana\030\016 \001(\005\022\017" +
      "\n\007storage\030\017 \001(\005\022\027\n\017attackAnimation\030\020 \001(\010" +
      "\"\303\t\n\rMsgActorState\022\016\n\006campId\030\001 \001(\005\022\"\n\010lo" +
      "cation\030\002 \001(\0132\020.shuguang.VInt2D\022#\n\tdirect" +
      "ion\030\003 \001(\0132\020.shuguang.VInt2D\022\n\n\002hp\030\004 \001(\005\022" +
      "\r\n\005hpMax\030\005 \001(\005\022\016\n\006energy\030\006 \001(\005\022\021\n\tenergy" +
      "Max\030\007 \001(\005\022\014\n\004mana\030\010 \001(\005\022\017\n\007manaMax\030\t \001(\005" +
      "\022\r\n\005anger\030\n \001(\005\022\020\n\010angerMax\030\013 \001(\005\022\r\n\005lev" +
      "el\030\014 \001(\005\022\013\n\003exp\030\r \001(\005\022\017\n\007curGold\030\016 \001(\005\022\014" +
      "\n\004gold\030\017 \001(\005\022\016\n\006phyAtk\030\020 \001(\005\022\016\n\006phyDef\030\021" +
      " \001(\005\022\016\n\006mgcAtk\030\022 \001(\005\022\016\n\006mgcDef\030\023 \001(\005\022\021\n\t" +
      "toughness\030\024 \001(\005\022\013\n\003cdr\030\025 \001(\005\022\017\n\007respawn\030" +
      "\026 \001(\005\022\022\n\nisVisiable\030\027 \001(\010\022\021\n\tmoveSpeed\030\030" +
      " \001(\005\022\014\n\004kill\030\031 \001(\005\022\014\n\004dead\030\032 \001(\005\022\016\n\006assi" +
      "st\030\033 \001(\005\022\022\n\ncurSkillID\030\034 \003(\005\022\021\n\thpRecove" +
      "r\030\035 \001(\005\022\025\n\renergyRecover\030\036 \001(\005\022\020\n\010atkSpe" +
      "ed\030\037 \001(\005\022\013\n\003crt\030  \001(\005\022\020\n\010crtTimes\030! \001(\005\022" +
      "\022\n\nphyThrough\030\" \001(\005\022\022\n\nmagThrough\030# \001(\005\022" +
      "\031\n\021phyThroughPercent\030$ \001(\005\022\031\n\021magThrough" +
      "Percent\030% \001(\005\022\021\n\tspellSorb\030& \001(\005\022\017\n\007atkS" +
      "orb\030\' \001(\005\022\017\n\007exState\030( \003(\005\022\016\n\006shield\030) \001" +
      "(\005\022\021\n\tshieldPhy\030* \001(\005\022\021\n\tshieldMgc\030+ \001(\005" +
      "\022\021\n\tshieldAll\030, \001(\005\022\024\n\014shieldPhyMax\030- \001(" +
      "\005\022\024\n\014shieldMgcMax\030. \001(\005\022\024\n\014shieldAllMax\030" +
      "/ \001(\005\022\037\n\027headIconLockOnTargetIid\0300 \001(\003\022\026" +
      "\n\016chaseTargetIid\0301 \001(\005\022\023\n\013isChaseMove\0302 " +
      "\001(\010\022\027\n\017isAutoAttacking\0303 \001(\010\022\027\n\017lockOnTa" +
      "rgetIid\0304 \001(\005\022\016\n\006isDead\0305 \001(\010\022)\n\tbuffSta" +
      "te\0306 \003(\0132\026.shuguang.MsgBuffState\022\021\n\tbull" +
      "etNum\0307 \001(\005\022\020\n\010portalCD\0308 \001(\003\022\022\n\ncanEatC" +
      "oin\0309 \001(\010\022\033\n\023springPortalSuccess\030: \001(\010\022\026" +
      "\n\rdelcurSkillID\030\254N \003(\005\022\023\n\ndelexState\030\270N " +
      "\003(\005\022\021\n\010delbuffs\030\302N \003(\005\"N\n\021MsgEquipRecomm" +
      "end\022\n\n\002Id\030\001 \001(\005\022\016\n\006equips\030\002 \003(\005\022\r\n\005lanes" +
      "\030\003 \003(\005\022\016\n\006weight\030\004 \001(\005\"\240\003\n\007MsgHero\022\n\n\002Id" +
      "\030\001 \001(\003\022+\n\nactorState\030\002 \001(\0132\027.shuguang.Ms" +
      "gActorState\022/\n\014abilityState\030\003 \003(\0132\031.shug" +
      "uang.MsgAbilityState\022\"\n\010commands\030\004 \003(\0132\020" +
      ".shuguang.MsgCmd\022\021\n\tbServerAI\030\005 \001(\010\022\021\n\te" +
      "quiptIDs\030\006 \003(\005\0223\n\016equipRecommend\030\007 \003(\0132\033" +
      ".shuguang.MsgEquipRecommend\022\016\n\006heroId\030\010 " +
      "\001(\005\022\016\n\006raceId\030\t \001(\005\022\017\n\007account\030\n \001(\003\022\r\n\005" +
      "level\030\013 \001(\005\022\013\n\003elo\030\014 \001(\005\022\r\n\005score\030\r \001(\005\022" +
      "\022\n\ndifficulty\030\016 \001(\005\022\022\n\nplayerType\030\017 \001(\005\022" +
      "\016\n\006aiType\030\020 \001(\005\022\030\n\017delabilityState\030\224N \003(" +
      "\003\"Z\n\rMsgResultHero\022\n\n\002Id\030\001 \001(\003\022(\n\010comman" +
      "ds\030\002 \003(\0132\026.shuguang.ResultMsgCmd\022\023\n\013debu" +
      "gString\030\003 \001(\014*\344\001\n\020MsgSkillSlotType\022\023\n\017SK" +
      "ILL_SLOT_NONE\020\000\022\034\n\030SKILL_SLOT_NORMAL_ATT" +
      "ACK\020\001\022\024\n\020SKILL_SLOT_SKLL1\020\002\022\024\n\020SKILL_SLO" +
      "T_SKLL2\020\003\022\024\n\020SKILL_SLOT_SKLL3\020\004\022\024\n\020SKILL" +
      "_SLOT_SKLL4\020\005\022\026\n\022SKILL_SLOT_PASSIVE\020\006\022\027\n" +
      "\023SKILL_SLOT_SUMMONER\020\007\022\024\n\020SKILL_SLOT_EQU" +
      "IP\020\010*\221\001\n\022MsgSkillTargetType\022\025\n\021SKILL_TAR" +
      "GET_NONE\020\000\022\025\n\021SKILL_TARGET_UNIT\020\001\022\031\n\025SKI" +
      "LL_TARGET_DIRCTION\020\002\022\031\n\025SKILL_TARGET_POS" +
      "ITION\020\003\022\027\n\023SKILL_NORMAL_ATTACK\020\004B\031\n\027cn.j" +
      "j.simulation.pb_newb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Cmd.getDescriptor(),
        });
    internal_static_shuguang_VInt2D_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shuguang_VInt2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_VInt2D_descriptor,
        new String[] { "X", "Y", });
    internal_static_shuguang_MsgSkillRangeData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_shuguang_MsgSkillRangeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgSkillRangeData_descriptor,
        new String[] { "Value", "NextValue", "StartTime", "Duration", });
    internal_static_shuguang_MsgSkillRange_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_shuguang_MsgSkillRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgSkillRange_descriptor,
        new String[] { "ChaseRange", "CastRange", "CastRangeWithoutTarget", });
    internal_static_shuguang_MsgAbilityState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_shuguang_MsgAbilityState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgAbilityState_descriptor,
        new String[] { "Id", "Level", "Slot", "Type", "Usable", "Cd", "CdMax", "AtkRange", "HpCost", "MpCost", "XpCost", "Segment", "Progress", "IsOutofMana", "Storage", "AttackAnimation", });
    internal_static_shuguang_MsgActorState_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_shuguang_MsgActorState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgActorState_descriptor,
        new String[] { "CampId", "Location", "Direction", "Hp", "HpMax", "Energy", "EnergyMax", "Mana", "ManaMax", "Anger", "AngerMax", "Level", "Exp", "CurGold", "Gold", "PhyAtk", "PhyDef", "MgcAtk", "MgcDef", "Toughness", "Cdr", "Respawn", "IsVisiable", "MoveSpeed", "Kill", "Dead", "Assist", "CurSkillID", "HpRecover", "EnergyRecover", "AtkSpeed", "Crt", "CrtTimes", "PhyThrough", "MagThrough", "PhyThroughPercent", "MagThroughPercent", "SpellSorb", "AtkSorb", "ExState", "Shield", "ShieldPhy", "ShieldMgc", "ShieldAll", "ShieldPhyMax", "ShieldMgcMax", "ShieldAllMax", "HeadIconLockOnTargetIid", "ChaseTargetIid", "IsChaseMove", "IsAutoAttacking", "LockOnTargetIid", "IsDead", "BuffState", "BulletNum", "PortalCD", "CanEatCoin", "SpringPortalSuccess", "DelcurSkillID", "DelexState", "Delbuffs", });
    internal_static_shuguang_MsgEquipRecommend_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_shuguang_MsgEquipRecommend_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgEquipRecommend_descriptor,
        new String[] { "Id", "Equips", "Lanes", "Weight", });
    internal_static_shuguang_MsgHero_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_shuguang_MsgHero_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgHero_descriptor,
        new String[] { "Id", "ActorState", "AbilityState", "Commands", "BServerAI", "EquiptIDs", "EquipRecommend", "HeroId", "RaceId", "Account", "Level", "Elo", "Score", "Difficulty", "PlayerType", "AiType", "DelabilityState", });
    internal_static_shuguang_MsgResultHero_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_shuguang_MsgResultHero_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgResultHero_descriptor,
        new String[] { "Id", "Commands", "DebugString", });
    Cmd.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
