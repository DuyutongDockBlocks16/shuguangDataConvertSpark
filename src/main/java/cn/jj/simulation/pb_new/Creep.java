// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: creep.proto

package cn.jj.simulation.pb_new;

public final class Creep {
  private Creep() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgCreepOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgCreep)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 局内唯一的ID(必填)
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * 阵营
     * </pre>
     *
     * <code>int32 campId = 2;</code>
     * @return The campId.
     */
    int getCampId();

    /**
     * <pre>
     * 类型 （业务补充士兵有哪些类型）
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>int32 posX = 4;</code>
     * @return The posX.
     */
    int getPosX();

    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>int32 posY = 5;</code>
     * @return The posY.
     */
    int getPosY();

    /**
     * <pre>
     * 血量
     * </pre>
     *
     * <code>int32 hp = 6;</code>
     * @return The hp.
     */
    int getHp();

    /**
     * <pre>
     * 最大血量
     * </pre>
     *
     * <code>int32 hpMax = 7;</code>
     * @return The hpMax.
     */
    int getHpMax();

    /**
     * <pre>
     * 攻击力
     * </pre>
     *
     * <code>int32 atk = 8;</code>
     * @return The atk.
     */
    int getAtk();

    /**
     * <pre>
     * 防御能力
     * </pre>
     *
     * <code>int32 def = 9;</code>
     * @return The def.
     */
    int getDef();

    /**
     * <pre>
     * 是否可见
     * </pre>
     *
     * <code>bool isVisiable = 10;</code>
     * @return The isVisiable.
     */
    boolean getIsVisiable();

    /**
     * <pre>
     * 攻击目标
     * </pre>
     *
     * <code>int64 targetId = 11;</code>
     * @return The targetId.
     */
    long getTargetId();

    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>int32 atkRange = 12;</code>
     * @return The atkRange.
     */
    int getAtkRange();

    /**
     * <pre>
     * 兵的ID
     * </pre>
     *
     * <code>int32 creepId = 13;</code>
     * @return The creepId.
     */
    int getCreepId();

    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    java.util.List<Cmd.MsgBuffState>
        getBuffStateList();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    Cmd.MsgBuffState getBuffState(int index);
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    int getBuffStateCount();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
        getBuffStateOrBuilderList();
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
        int index);

    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @return A list containing the delbuffs.
     */
    java.util.List<Integer> getDelbuffsList();
    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @return The count of delbuffs.
     */
    int getDelbuffsCount();
    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @param index The index of the element to return.
     * @return The delbuffs at the given index.
     */
    int getDelbuffs(int index);
  }
  /**
   * <pre>
   * 兵线的基础属性
   * </pre>
   *
   * Protobuf type {@code shuguang.MsgCreep}
   */
  public static final class MsgCreep extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgCreep)
      MsgCreepOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgCreep.newBuilder() to construct.
    private MsgCreep(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgCreep() {
      buffState_ = java.util.Collections.emptyList();
      delbuffs_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgCreep();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgCreep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              campId_ = input.readInt32();
              break;
            }
            case 24: {

              type_ = input.readInt32();
              break;
            }
            case 32: {

              posX_ = input.readInt32();
              break;
            }
            case 40: {

              posY_ = input.readInt32();
              break;
            }
            case 48: {

              hp_ = input.readInt32();
              break;
            }
            case 56: {

              hpMax_ = input.readInt32();
              break;
            }
            case 64: {

              atk_ = input.readInt32();
              break;
            }
            case 72: {

              def_ = input.readInt32();
              break;
            }
            case 80: {

              isVisiable_ = input.readBool();
              break;
            }
            case 88: {

              targetId_ = input.readInt64();
              break;
            }
            case 96: {

              atkRange_ = input.readInt32();
              break;
            }
            case 104: {

              creepId_ = input.readInt32();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                buffState_ = new java.util.ArrayList<Cmd.MsgBuffState>();
                mutable_bitField0_ |= 0x00000001;
              }
              buffState_.add(
                  input.readMessage(Cmd.MsgBuffState.parser(), extensionRegistry));
              break;
            }
            case 80080: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                delbuffs_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              delbuffs_.addInt(input.readInt32());
              break;
            }
            case 80082: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                delbuffs_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                delbuffs_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          buffState_ = java.util.Collections.unmodifiableList(buffState_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          delbuffs_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Creep.internal_static_shuguang_MsgCreep_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Creep.internal_static_shuguang_MsgCreep_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgCreep.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 局内唯一的ID(必填)
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int CAMPID_FIELD_NUMBER = 2;
    private int campId_;
    /**
     * <pre>
     * 阵营
     * </pre>
     *
     * <code>int32 campId = 2;</code>
     * @return The campId.
     */
    @Override
    public int getCampId() {
      return campId_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * 类型 （业务补充士兵有哪些类型）
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int POSX_FIELD_NUMBER = 4;
    private int posX_;
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>int32 posX = 4;</code>
     * @return The posX.
     */
    @Override
    public int getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 5;
    private int posY_;
    /**
     * <pre>
     * 位置
     * </pre>
     *
     * <code>int32 posY = 5;</code>
     * @return The posY.
     */
    @Override
    public int getPosY() {
      return posY_;
    }

    public static final int HP_FIELD_NUMBER = 6;
    private int hp_;
    /**
     * <pre>
     * 血量
     * </pre>
     *
     * <code>int32 hp = 6;</code>
     * @return The hp.
     */
    @Override
    public int getHp() {
      return hp_;
    }

    public static final int HPMAX_FIELD_NUMBER = 7;
    private int hpMax_;
    /**
     * <pre>
     * 最大血量
     * </pre>
     *
     * <code>int32 hpMax = 7;</code>
     * @return The hpMax.
     */
    @Override
    public int getHpMax() {
      return hpMax_;
    }

    public static final int ATK_FIELD_NUMBER = 8;
    private int atk_;
    /**
     * <pre>
     * 攻击力
     * </pre>
     *
     * <code>int32 atk = 8;</code>
     * @return The atk.
     */
    @Override
    public int getAtk() {
      return atk_;
    }

    public static final int DEF_FIELD_NUMBER = 9;
    private int def_;
    /**
     * <pre>
     * 防御能力
     * </pre>
     *
     * <code>int32 def = 9;</code>
     * @return The def.
     */
    @Override
    public int getDef() {
      return def_;
    }

    public static final int ISVISIABLE_FIELD_NUMBER = 10;
    private boolean isVisiable_;
    /**
     * <pre>
     * 是否可见
     * </pre>
     *
     * <code>bool isVisiable = 10;</code>
     * @return The isVisiable.
     */
    @Override
    public boolean getIsVisiable() {
      return isVisiable_;
    }

    public static final int TARGETID_FIELD_NUMBER = 11;
    private long targetId_;
    /**
     * <pre>
     * 攻击目标
     * </pre>
     *
     * <code>int64 targetId = 11;</code>
     * @return The targetId.
     */
    @Override
    public long getTargetId() {
      return targetId_;
    }

    public static final int ATKRANGE_FIELD_NUMBER = 12;
    private int atkRange_;
    /**
     * <pre>
     * 攻击范围
     * </pre>
     *
     * <code>int32 atkRange = 12;</code>
     * @return The atkRange.
     */
    @Override
    public int getAtkRange() {
      return atkRange_;
    }

    public static final int CREEPID_FIELD_NUMBER = 13;
    private int creepId_;
    /**
     * <pre>
     * 兵的ID
     * </pre>
     *
     * <code>int32 creepId = 13;</code>
     * @return The creepId.
     */
    @Override
    public int getCreepId() {
      return creepId_;
    }

    public static final int BUFFSTATE_FIELD_NUMBER = 14;
    private java.util.List<Cmd.MsgBuffState> buffState_;
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    @Override
    public java.util.List<Cmd.MsgBuffState> getBuffStateList() {
      return buffState_;
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    @Override
    public java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
        getBuffStateOrBuilderList() {
      return buffState_;
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    @Override
    public int getBuffStateCount() {
      return buffState_.size();
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    @Override
    public Cmd.MsgBuffState getBuffState(int index) {
      return buffState_.get(index);
    }
    /**
     * <pre>
     * buff列表
     * </pre>
     *
     * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
     */
    @Override
    public Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
        int index) {
      return buffState_.get(index);
    }

    public static final int DELBUFFS_FIELD_NUMBER = 10010;
    private com.google.protobuf.Internal.IntList delbuffs_;
    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @return A list containing the delbuffs.
     */
    @Override
    public java.util.List<Integer>
        getDelbuffsList() {
      return delbuffs_;
    }
    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @return The count of delbuffs.
     */
    public int getDelbuffsCount() {
      return delbuffs_.size();
    }
    /**
     * <code>repeated int32 delbuffs = 10010;</code>
     * @param index The index of the element to return.
     * @return The delbuffs at the given index.
     */
    public int getDelbuffs(int index) {
      return delbuffs_.getInt(index);
    }
    private int delbuffsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (campId_ != 0) {
        output.writeInt32(2, campId_);
      }
      if (type_ != 0) {
        output.writeInt32(3, type_);
      }
      if (posX_ != 0) {
        output.writeInt32(4, posX_);
      }
      if (posY_ != 0) {
        output.writeInt32(5, posY_);
      }
      if (hp_ != 0) {
        output.writeInt32(6, hp_);
      }
      if (hpMax_ != 0) {
        output.writeInt32(7, hpMax_);
      }
      if (atk_ != 0) {
        output.writeInt32(8, atk_);
      }
      if (def_ != 0) {
        output.writeInt32(9, def_);
      }
      if (isVisiable_ != false) {
        output.writeBool(10, isVisiable_);
      }
      if (targetId_ != 0L) {
        output.writeInt64(11, targetId_);
      }
      if (atkRange_ != 0) {
        output.writeInt32(12, atkRange_);
      }
      if (creepId_ != 0) {
        output.writeInt32(13, creepId_);
      }
      for (int i = 0; i < buffState_.size(); i++) {
        output.writeMessage(14, buffState_.get(i));
      }
      if (getDelbuffsList().size() > 0) {
        output.writeUInt32NoTag(80082);
        output.writeUInt32NoTag(delbuffsMemoizedSerializedSize);
      }
      for (int i = 0; i < delbuffs_.size(); i++) {
        output.writeInt32NoTag(delbuffs_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (campId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, campId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (posX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, posX_);
      }
      if (posY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, posY_);
      }
      if (hp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, hp_);
      }
      if (hpMax_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, hpMax_);
      }
      if (atk_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, atk_);
      }
      if (def_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, def_);
      }
      if (isVisiable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isVisiable_);
      }
      if (targetId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, targetId_);
      }
      if (atkRange_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, atkRange_);
      }
      if (creepId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, creepId_);
      }
      for (int i = 0; i < buffState_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, buffState_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < delbuffs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(delbuffs_.getInt(i));
        }
        size += dataSize;
        if (!getDelbuffsList().isEmpty()) {
          size += 3;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        delbuffsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgCreep)) {
        return super.equals(obj);
      }
      MsgCreep other = (MsgCreep) obj;

      if (getId()
          != other.getId()) return false;
      if (getCampId()
          != other.getCampId()) return false;
      if (getType()
          != other.getType()) return false;
      if (getPosX()
          != other.getPosX()) return false;
      if (getPosY()
          != other.getPosY()) return false;
      if (getHp()
          != other.getHp()) return false;
      if (getHpMax()
          != other.getHpMax()) return false;
      if (getAtk()
          != other.getAtk()) return false;
      if (getDef()
          != other.getDef()) return false;
      if (getIsVisiable()
          != other.getIsVisiable()) return false;
      if (getTargetId()
          != other.getTargetId()) return false;
      if (getAtkRange()
          != other.getAtkRange()) return false;
      if (getCreepId()
          != other.getCreepId()) return false;
      if (!getBuffStateList()
          .equals(other.getBuffStateList())) return false;
      if (!getDelbuffsList()
          .equals(other.getDelbuffsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + CAMPID_FIELD_NUMBER;
      hash = (53 * hash) + getCampId();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + getHp();
      hash = (37 * hash) + HPMAX_FIELD_NUMBER;
      hash = (53 * hash) + getHpMax();
      hash = (37 * hash) + ATK_FIELD_NUMBER;
      hash = (53 * hash) + getAtk();
      hash = (37 * hash) + DEF_FIELD_NUMBER;
      hash = (53 * hash) + getDef();
      hash = (37 * hash) + ISVISIABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsVisiable());
      hash = (37 * hash) + TARGETID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTargetId());
      hash = (37 * hash) + ATKRANGE_FIELD_NUMBER;
      hash = (53 * hash) + getAtkRange();
      hash = (37 * hash) + CREEPID_FIELD_NUMBER;
      hash = (53 * hash) + getCreepId();
      if (getBuffStateCount() > 0) {
        hash = (37 * hash) + BUFFSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getBuffStateList().hashCode();
      }
      if (getDelbuffsCount() > 0) {
        hash = (37 * hash) + DELBUFFS_FIELD_NUMBER;
        hash = (53 * hash) + getDelbuffsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgCreep parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCreep parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCreep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCreep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCreep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgCreep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgCreep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgCreep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgCreep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgCreep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgCreep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgCreep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgCreep prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 兵线的基础属性
     * </pre>
     *
     * Protobuf type {@code shuguang.MsgCreep}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgCreep)
        MsgCreepOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Creep.internal_static_shuguang_MsgCreep_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Creep.internal_static_shuguang_MsgCreep_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgCreep.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Creep.MsgCreep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBuffStateFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        campId_ = 0;

        type_ = 0;

        posX_ = 0;

        posY_ = 0;

        hp_ = 0;

        hpMax_ = 0;

        atk_ = 0;

        def_ = 0;

        isVisiable_ = false;

        targetId_ = 0L;

        atkRange_ = 0;

        creepId_ = 0;

        if (buffStateBuilder_ == null) {
          buffState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          buffStateBuilder_.clear();
        }
        delbuffs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Creep.internal_static_shuguang_MsgCreep_descriptor;
      }

      @Override
      public MsgCreep getDefaultInstanceForType() {
        return MsgCreep.getDefaultInstance();
      }

      @Override
      public MsgCreep build() {
        MsgCreep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgCreep buildPartial() {
        MsgCreep result = new MsgCreep(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.campId_ = campId_;
        result.type_ = type_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.hp_ = hp_;
        result.hpMax_ = hpMax_;
        result.atk_ = atk_;
        result.def_ = def_;
        result.isVisiable_ = isVisiable_;
        result.targetId_ = targetId_;
        result.atkRange_ = atkRange_;
        result.creepId_ = creepId_;
        if (buffStateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            buffState_ = java.util.Collections.unmodifiableList(buffState_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.buffState_ = buffState_;
        } else {
          result.buffState_ = buffStateBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          delbuffs_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.delbuffs_ = delbuffs_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgCreep) {
          return mergeFrom((MsgCreep)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgCreep other) {
        if (other == MsgCreep.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getCampId() != 0) {
          setCampId(other.getCampId());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getPosX() != 0) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0) {
          setPosY(other.getPosY());
        }
        if (other.getHp() != 0) {
          setHp(other.getHp());
        }
        if (other.getHpMax() != 0) {
          setHpMax(other.getHpMax());
        }
        if (other.getAtk() != 0) {
          setAtk(other.getAtk());
        }
        if (other.getDef() != 0) {
          setDef(other.getDef());
        }
        if (other.getIsVisiable() != false) {
          setIsVisiable(other.getIsVisiable());
        }
        if (other.getTargetId() != 0L) {
          setTargetId(other.getTargetId());
        }
        if (other.getAtkRange() != 0) {
          setAtkRange(other.getAtkRange());
        }
        if (other.getCreepId() != 0) {
          setCreepId(other.getCreepId());
        }
        if (buffStateBuilder_ == null) {
          if (!other.buffState_.isEmpty()) {
            if (buffState_.isEmpty()) {
              buffState_ = other.buffState_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBuffStateIsMutable();
              buffState_.addAll(other.buffState_);
            }
            onChanged();
          }
        } else {
          if (!other.buffState_.isEmpty()) {
            if (buffStateBuilder_.isEmpty()) {
              buffStateBuilder_.dispose();
              buffStateBuilder_ = null;
              buffState_ = other.buffState_;
              bitField0_ = (bitField0_ & ~0x00000001);
              buffStateBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBuffStateFieldBuilder() : null;
            } else {
              buffStateBuilder_.addAllMessages(other.buffState_);
            }
          }
        }
        if (!other.delbuffs_.isEmpty()) {
          if (delbuffs_.isEmpty()) {
            delbuffs_ = other.delbuffs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDelbuffsIsMutable();
            delbuffs_.addAll(other.delbuffs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgCreep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgCreep) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int campId_ ;
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @return The campId.
       */
      @Override
      public int getCampId() {
        return campId_;
      }
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @param value The campId to set.
       * @return This builder for chaining.
       */
      public Builder setCampId(int value) {
        
        campId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCampId() {
        
        campId_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 类型 （业务补充士兵有哪些类型）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 类型 （业务补充士兵有哪些类型）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 类型 （业务补充士兵有哪些类型）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int posX_ ;
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posX = 4;</code>
       * @return The posX.
       */
      @Override
      public int getPosX() {
        return posX_;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posX = 4;</code>
       * @param value The posX to set.
       * @return This builder for chaining.
       */
      public Builder setPosX(int value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posX = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosX() {
        
        posX_ = 0;
        onChanged();
        return this;
      }

      private int posY_ ;
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posY = 5;</code>
       * @return The posY.
       */
      @Override
      public int getPosY() {
        return posY_;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posY = 5;</code>
       * @param value The posY to set.
       * @return This builder for chaining.
       */
      public Builder setPosY(int value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 位置
       * </pre>
       *
       * <code>int32 posY = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosY() {
        
        posY_ = 0;
        onChanged();
        return this;
      }

      private int hp_ ;
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 6;</code>
       * @return The hp.
       */
      @Override
      public int getHp() {
        return hp_;
      }
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 6;</code>
       * @param value The hp to set.
       * @return This builder for chaining.
       */
      public Builder setHp(int value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 血量
       * </pre>
       *
       * <code>int32 hp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHp() {
        
        hp_ = 0;
        onChanged();
        return this;
      }

      private int hpMax_ ;
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 7;</code>
       * @return The hpMax.
       */
      @Override
      public int getHpMax() {
        return hpMax_;
      }
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 7;</code>
       * @param value The hpMax to set.
       * @return This builder for chaining.
       */
      public Builder setHpMax(int value) {
        
        hpMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最大血量
       * </pre>
       *
       * <code>int32 hpMax = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHpMax() {
        
        hpMax_ = 0;
        onChanged();
        return this;
      }

      private int atk_ ;
      /**
       * <pre>
       * 攻击力
       * </pre>
       *
       * <code>int32 atk = 8;</code>
       * @return The atk.
       */
      @Override
      public int getAtk() {
        return atk_;
      }
      /**
       * <pre>
       * 攻击力
       * </pre>
       *
       * <code>int32 atk = 8;</code>
       * @param value The atk to set.
       * @return This builder for chaining.
       */
      public Builder setAtk(int value) {
        
        atk_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击力
       * </pre>
       *
       * <code>int32 atk = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtk() {
        
        atk_ = 0;
        onChanged();
        return this;
      }

      private int def_ ;
      /**
       * <pre>
       * 防御能力
       * </pre>
       *
       * <code>int32 def = 9;</code>
       * @return The def.
       */
      @Override
      public int getDef() {
        return def_;
      }
      /**
       * <pre>
       * 防御能力
       * </pre>
       *
       * <code>int32 def = 9;</code>
       * @param value The def to set.
       * @return This builder for chaining.
       */
      public Builder setDef(int value) {
        
        def_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 防御能力
       * </pre>
       *
       * <code>int32 def = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDef() {
        
        def_ = 0;
        onChanged();
        return this;
      }

      private boolean isVisiable_ ;
      /**
       * <pre>
       * 是否可见
       * </pre>
       *
       * <code>bool isVisiable = 10;</code>
       * @return The isVisiable.
       */
      @Override
      public boolean getIsVisiable() {
        return isVisiable_;
      }
      /**
       * <pre>
       * 是否可见
       * </pre>
       *
       * <code>bool isVisiable = 10;</code>
       * @param value The isVisiable to set.
       * @return This builder for chaining.
       */
      public Builder setIsVisiable(boolean value) {
        
        isVisiable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否可见
       * </pre>
       *
       * <code>bool isVisiable = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsVisiable() {
        
        isVisiable_ = false;
        onChanged();
        return this;
      }

      private long targetId_ ;
      /**
       * <pre>
       * 攻击目标
       * </pre>
       *
       * <code>int64 targetId = 11;</code>
       * @return The targetId.
       */
      @Override
      public long getTargetId() {
        return targetId_;
      }
      /**
       * <pre>
       * 攻击目标
       * </pre>
       *
       * <code>int64 targetId = 11;</code>
       * @param value The targetId to set.
       * @return This builder for chaining.
       */
      public Builder setTargetId(long value) {
        
        targetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击目标
       * </pre>
       *
       * <code>int64 targetId = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetId() {
        
        targetId_ = 0L;
        onChanged();
        return this;
      }

      private int atkRange_ ;
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>int32 atkRange = 12;</code>
       * @return The atkRange.
       */
      @Override
      public int getAtkRange() {
        return atkRange_;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>int32 atkRange = 12;</code>
       * @param value The atkRange to set.
       * @return This builder for chaining.
       */
      public Builder setAtkRange(int value) {
        
        atkRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 攻击范围
       * </pre>
       *
       * <code>int32 atkRange = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtkRange() {
        
        atkRange_ = 0;
        onChanged();
        return this;
      }

      private int creepId_ ;
      /**
       * <pre>
       * 兵的ID
       * </pre>
       *
       * <code>int32 creepId = 13;</code>
       * @return The creepId.
       */
      @Override
      public int getCreepId() {
        return creepId_;
      }
      /**
       * <pre>
       * 兵的ID
       * </pre>
       *
       * <code>int32 creepId = 13;</code>
       * @param value The creepId to set.
       * @return This builder for chaining.
       */
      public Builder setCreepId(int value) {
        
        creepId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 兵的ID
       * </pre>
       *
       * <code>int32 creepId = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreepId() {
        
        creepId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Cmd.MsgBuffState> buffState_ =
        java.util.Collections.emptyList();
      private void ensureBuffStateIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          buffState_ = new java.util.ArrayList<Cmd.MsgBuffState>(buffState_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder> buffStateBuilder_;

      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public java.util.List<Cmd.MsgBuffState> getBuffStateList() {
        if (buffStateBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buffState_);
        } else {
          return buffStateBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public int getBuffStateCount() {
        if (buffStateBuilder_ == null) {
          return buffState_.size();
        } else {
          return buffStateBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Cmd.MsgBuffState getBuffState(int index) {
        if (buffStateBuilder_ == null) {
          return buffState_.get(index);
        } else {
          return buffStateBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder setBuffState(
          int index, Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.set(index, value);
          onChanged();
        } else {
          buffStateBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder setBuffState(
          int index, Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.set(index, builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder addBuffState(Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.add(value);
          onChanged();
        } else {
          buffStateBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder addBuffState(
          int index, Cmd.MsgBuffState value) {
        if (buffStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuffStateIsMutable();
          buffState_.add(index, value);
          onChanged();
        } else {
          buffStateBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder addBuffState(
          Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.add(builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder addBuffState(
          int index, Cmd.MsgBuffState.Builder builderForValue) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.add(index, builderForValue.build());
          onChanged();
        } else {
          buffStateBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder addAllBuffState(
          Iterable<? extends Cmd.MsgBuffState> values) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buffState_);
          onChanged();
        } else {
          buffStateBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder clearBuffState() {
        if (buffStateBuilder_ == null) {
          buffState_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          buffStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Builder removeBuffState(int index) {
        if (buffStateBuilder_ == null) {
          ensureBuffStateIsMutable();
          buffState_.remove(index);
          onChanged();
        } else {
          buffStateBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Cmd.MsgBuffState.Builder getBuffStateBuilder(
          int index) {
        return getBuffStateFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Cmd.MsgBuffStateOrBuilder getBuffStateOrBuilder(
          int index) {
        if (buffStateBuilder_ == null) {
          return buffState_.get(index);  } else {
          return buffStateBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public java.util.List<? extends Cmd.MsgBuffStateOrBuilder>
           getBuffStateOrBuilderList() {
        if (buffStateBuilder_ != null) {
          return buffStateBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buffState_);
        }
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Cmd.MsgBuffState.Builder addBuffStateBuilder() {
        return getBuffStateFieldBuilder().addBuilder(
            Cmd.MsgBuffState.getDefaultInstance());
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public Cmd.MsgBuffState.Builder addBuffStateBuilder(
          int index) {
        return getBuffStateFieldBuilder().addBuilder(
            index, Cmd.MsgBuffState.getDefaultInstance());
      }
      /**
       * <pre>
       * buff列表
       * </pre>
       *
       * <code>repeated .shuguang.MsgBuffState buffState = 14;</code>
       */
      public java.util.List<Cmd.MsgBuffState.Builder>
           getBuffStateBuilderList() {
        return getBuffStateFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder>
          getBuffStateFieldBuilder() {
        if (buffStateBuilder_ == null) {
          buffStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Cmd.MsgBuffState, Cmd.MsgBuffState.Builder, Cmd.MsgBuffStateOrBuilder>(
                  buffState_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          buffState_ = null;
        }
        return buffStateBuilder_;
      }

      private com.google.protobuf.Internal.IntList delbuffs_ = emptyIntList();
      private void ensureDelbuffsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          delbuffs_ = mutableCopy(delbuffs_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @return A list containing the delbuffs.
       */
      public java.util.List<Integer>
          getDelbuffsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(delbuffs_) : delbuffs_;
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @return The count of delbuffs.
       */
      public int getDelbuffsCount() {
        return delbuffs_.size();
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @param index The index of the element to return.
       * @return The delbuffs at the given index.
       */
      public int getDelbuffs(int index) {
        return delbuffs_.getInt(index);
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @param index The index to set the value at.
       * @param value The delbuffs to set.
       * @return This builder for chaining.
       */
      public Builder setDelbuffs(
          int index, int value) {
        ensureDelbuffsIsMutable();
        delbuffs_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @param value The delbuffs to add.
       * @return This builder for chaining.
       */
      public Builder addDelbuffs(int value) {
        ensureDelbuffsIsMutable();
        delbuffs_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @param values The delbuffs to add.
       * @return This builder for chaining.
       */
      public Builder addAllDelbuffs(
          Iterable<? extends Integer> values) {
        ensureDelbuffsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, delbuffs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 delbuffs = 10010;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelbuffs() {
        delbuffs_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgCreep)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgCreep)
    private static final MsgCreep DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgCreep();
    }

    public static MsgCreep getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgCreep>
        PARSER = new com.google.protobuf.AbstractParser<MsgCreep>() {
      @Override
      public MsgCreep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgCreep(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgCreep> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgCreep> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgCreep getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgCreep_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgCreep_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013creep.proto\022\010shuguang\032\tcmd.proto\"\214\002\n\010M" +
      "sgCreep\022\n\n\002Id\030\001 \001(\003\022\016\n\006campId\030\002 \001(\005\022\014\n\004t" +
      "ype\030\003 \001(\005\022\014\n\004posX\030\004 \001(\005\022\014\n\004posY\030\005 \001(\005\022\n\n" +
      "\002hp\030\006 \001(\005\022\r\n\005hpMax\030\007 \001(\005\022\013\n\003atk\030\010 \001(\005\022\013\n" +
      "\003def\030\t \001(\005\022\022\n\nisVisiable\030\n \001(\010\022\020\n\010target" +
      "Id\030\013 \001(\003\022\020\n\010atkRange\030\014 \001(\005\022\017\n\007creepId\030\r " +
      "\001(\005\022)\n\tbuffState\030\016 \003(\0132\026.shuguang.MsgBuf" +
      "fState\022\021\n\010delbuffs\030\232N \003(\005B\031\n\027cn.jj.simul" +
      "ation.pb_newb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Cmd.getDescriptor(),
        });
    internal_static_shuguang_MsgCreep_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shuguang_MsgCreep_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgCreep_descriptor,
        new String[] { "Id", "CampId", "Type", "PosX", "PosY", "Hp", "HpMax", "Atk", "Def", "IsVisiable", "TargetId", "AtkRange", "CreepId", "BuffState", "Delbuffs", });
    Cmd.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
