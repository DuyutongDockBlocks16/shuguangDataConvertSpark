// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

package cn.jj.simulation.pb_new;

public final class Player {
  private Player() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *对局内的唯一ID,用于区分不同玩家或者AI等(必填),玩家账号ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     *英雄ID(必填)
     * </pre>
     *
     * <code>int32 heroId = 2;</code>
     * @return The heroId.
     */
    int getHeroId();

    /**
     * <pre>
     *职业ID(必填)
     * </pre>
     *
     * <code>int32 raceId = 3;</code>
     * @return The raceId.
     */
    int getRaceId();

    /**
     * <pre>
     *账号信息
     * </pre>
     *
     * <code>int64 account = 4;</code>
     * @return The account.
     */
    long getAccount();

    /**
     * <pre>
     *等级(必填)
     * </pre>
     *
     * <code>int32 level = 5;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <pre>
     * elo值 （隐藏分）
     * </pre>
     *
     * <code>int32 elo = 7;</code>
     * @return The elo.
     */
    int getElo();

    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 8;</code>
     * @return The score.
     */
    int getScore();

    /**
     * <pre>
     * 难度 (以后再定，暂时可以不填)
     * </pre>
     *
     * <code>int32 difficulty = 9;</code>
     * @return The difficulty.
     */
    int getDifficulty();
  }
  /**
   * Protobuf type {@code shuguang.MsgPlayer}
   */
  public static final class MsgPlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgPlayer)
      MsgPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgPlayer.newBuilder() to construct.
    private MsgPlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgPlayer() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgPlayer();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              heroId_ = input.readInt32();
              break;
            }
            case 24: {

              raceId_ = input.readInt32();
              break;
            }
            case 32: {

              account_ = input.readInt64();
              break;
            }
            case 40: {

              level_ = input.readInt32();
              break;
            }
            case 56: {

              elo_ = input.readInt32();
              break;
            }
            case 64: {

              score_ = input.readInt32();
              break;
            }
            case 72: {

              difficulty_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Player.internal_static_shuguang_MsgPlayer_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Player.internal_static_shuguang_MsgPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgPlayer.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *对局内的唯一ID,用于区分不同玩家或者AI等(必填),玩家账号ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int HEROID_FIELD_NUMBER = 2;
    private int heroId_;
    /**
     * <pre>
     *英雄ID(必填)
     * </pre>
     *
     * <code>int32 heroId = 2;</code>
     * @return The heroId.
     */
    @Override
    public int getHeroId() {
      return heroId_;
    }

    public static final int RACEID_FIELD_NUMBER = 3;
    private int raceId_;
    /**
     * <pre>
     *职业ID(必填)
     * </pre>
     *
     * <code>int32 raceId = 3;</code>
     * @return The raceId.
     */
    @Override
    public int getRaceId() {
      return raceId_;
    }

    public static final int ACCOUNT_FIELD_NUMBER = 4;
    private long account_;
    /**
     * <pre>
     *账号信息
     * </pre>
     *
     * <code>int64 account = 4;</code>
     * @return The account.
     */
    @Override
    public long getAccount() {
      return account_;
    }

    public static final int LEVEL_FIELD_NUMBER = 5;
    private int level_;
    /**
     * <pre>
     *等级(必填)
     * </pre>
     *
     * <code>int32 level = 5;</code>
     * @return The level.
     */
    @Override
    public int getLevel() {
      return level_;
    }

    public static final int ELO_FIELD_NUMBER = 7;
    private int elo_;
    /**
     * <pre>
     * elo值 （隐藏分）
     * </pre>
     *
     * <code>int32 elo = 7;</code>
     * @return The elo.
     */
    @Override
    public int getElo() {
      return elo_;
    }

    public static final int SCORE_FIELD_NUMBER = 8;
    private int score_;
    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 8;</code>
     * @return The score.
     */
    @Override
    public int getScore() {
      return score_;
    }

    public static final int DIFFICULTY_FIELD_NUMBER = 9;
    private int difficulty_;
    /**
     * <pre>
     * 难度 (以后再定，暂时可以不填)
     * </pre>
     *
     * <code>int32 difficulty = 9;</code>
     * @return The difficulty.
     */
    @Override
    public int getDifficulty() {
      return difficulty_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (heroId_ != 0) {
        output.writeInt32(2, heroId_);
      }
      if (raceId_ != 0) {
        output.writeInt32(3, raceId_);
      }
      if (account_ != 0L) {
        output.writeInt64(4, account_);
      }
      if (level_ != 0) {
        output.writeInt32(5, level_);
      }
      if (elo_ != 0) {
        output.writeInt32(7, elo_);
      }
      if (score_ != 0) {
        output.writeInt32(8, score_);
      }
      if (difficulty_ != 0) {
        output.writeInt32(9, difficulty_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (heroId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, heroId_);
      }
      if (raceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, raceId_);
      }
      if (account_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, account_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, level_);
      }
      if (elo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, elo_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, score_);
      }
      if (difficulty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, difficulty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgPlayer)) {
        return super.equals(obj);
      }
      MsgPlayer other = (MsgPlayer) obj;

      if (getId()
          != other.getId()) return false;
      if (getHeroId()
          != other.getHeroId()) return false;
      if (getRaceId()
          != other.getRaceId()) return false;
      if (getAccount()
          != other.getAccount()) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getElo()
          != other.getElo()) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getDifficulty()
          != other.getDifficulty()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + HEROID_FIELD_NUMBER;
      hash = (53 * hash) + getHeroId();
      hash = (37 * hash) + RACEID_FIELD_NUMBER;
      hash = (53 * hash) + getRaceId();
      hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccount());
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + ELO_FIELD_NUMBER;
      hash = (53 * hash) + getElo();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + DIFFICULTY_FIELD_NUMBER;
      hash = (53 * hash) + getDifficulty();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgPlayer)
        MsgPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Player.internal_static_shuguang_MsgPlayer_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Player.internal_static_shuguang_MsgPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgPlayer.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Player.MsgPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        heroId_ = 0;

        raceId_ = 0;

        account_ = 0L;

        level_ = 0;

        elo_ = 0;

        score_ = 0;

        difficulty_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Player.internal_static_shuguang_MsgPlayer_descriptor;
      }

      @Override
      public MsgPlayer getDefaultInstanceForType() {
        return MsgPlayer.getDefaultInstance();
      }

      @Override
      public MsgPlayer build() {
        MsgPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgPlayer buildPartial() {
        MsgPlayer result = new MsgPlayer(this);
        result.id_ = id_;
        result.heroId_ = heroId_;
        result.raceId_ = raceId_;
        result.account_ = account_;
        result.level_ = level_;
        result.elo_ = elo_;
        result.score_ = score_;
        result.difficulty_ = difficulty_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgPlayer) {
          return mergeFrom((MsgPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgPlayer other) {
        if (other == MsgPlayer.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getHeroId() != 0) {
          setHeroId(other.getHeroId());
        }
        if (other.getRaceId() != 0) {
          setRaceId(other.getRaceId());
        }
        if (other.getAccount() != 0L) {
          setAccount(other.getAccount());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getElo() != 0) {
          setElo(other.getElo());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getDifficulty() != 0) {
          setDifficulty(other.getDifficulty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgPlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       *对局内的唯一ID,用于区分不同玩家或者AI等(必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *对局内的唯一ID,用于区分不同玩家或者AI等(必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对局内的唯一ID,用于区分不同玩家或者AI等(必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int heroId_ ;
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 2;</code>
       * @return The heroId.
       */
      @Override
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 2;</code>
       * @param value The heroId to set.
       * @return This builder for chaining.
       */
      public Builder setHeroId(int value) {
        
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *英雄ID(必填)
       * </pre>
       *
       * <code>int32 heroId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeroId() {
        
        heroId_ = 0;
        onChanged();
        return this;
      }

      private int raceId_ ;
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 3;</code>
       * @return The raceId.
       */
      @Override
      public int getRaceId() {
        return raceId_;
      }
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 3;</code>
       * @param value The raceId to set.
       * @return This builder for chaining.
       */
      public Builder setRaceId(int value) {
        
        raceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *职业ID(必填)
       * </pre>
       *
       * <code>int32 raceId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRaceId() {
        
        raceId_ = 0;
        onChanged();
        return this;
      }

      private long account_ ;
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 4;</code>
       * @return The account.
       */
      @Override
      public long getAccount() {
        return account_;
      }
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 4;</code>
       * @param value The account to set.
       * @return This builder for chaining.
       */
      public Builder setAccount(long value) {
        
        account_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *账号信息
       * </pre>
       *
       * <code>int64 account = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccount() {
        
        account_ = 0L;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 5;</code>
       * @return The level.
       */
      @Override
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 5;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *等级(必填)
       * </pre>
       *
       * <code>int32 level = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int elo_ ;
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 7;</code>
       * @return The elo.
       */
      @Override
      public int getElo() {
        return elo_;
      }
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 7;</code>
       * @param value The elo to set.
       * @return This builder for chaining.
       */
      public Builder setElo(int value) {
        
        elo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * elo值 （隐藏分）
       * </pre>
       *
       * <code>int32 elo = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearElo() {
        
        elo_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 8;</code>
       * @return The score.
       */
      @Override
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 8;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int difficulty_ ;
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)
       * </pre>
       *
       * <code>int32 difficulty = 9;</code>
       * @return The difficulty.
       */
      @Override
      public int getDifficulty() {
        return difficulty_;
      }
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)
       * </pre>
       *
       * <code>int32 difficulty = 9;</code>
       * @param value The difficulty to set.
       * @return This builder for chaining.
       */
      public Builder setDifficulty(int value) {
        
        difficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 难度 (以后再定，暂时可以不填)
       * </pre>
       *
       * <code>int32 difficulty = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDifficulty() {
        
        difficulty_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgPlayer)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgPlayer)
    private static final MsgPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgPlayer();
    }

    public static MsgPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgPlayer>
        PARSER = new com.google.protobuf.AbstractParser<MsgPlayer>() {
      @Override
      public MsgPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgPlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgPlayer> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgPlayer> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgPlayerStatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgPlayerStat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 对局内唯一ID，用于区分不同玩家或者AI等（必填),玩家账号ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * 经济  （必填）
     * </pre>
     *
     * <code>int32 gold = 2;</code>
     * @return The gold.
     */
    int getGold();

    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 3;</code>
     * @return The score.
     */
    int getScore();

    /**
     * <pre>
     * 击杀
     * </pre>
     *
     * <code>int32 kill = 4;</code>
     * @return The kill.
     */
    int getKill();

    /**
     * <pre>
     * 死亡
     * </pre>
     *
     * <code>int32 dead = 5;</code>
     * @return The dead.
     */
    int getDead();

    /**
     * <pre>
     * 助攻
     * </pre>
     *
     * <code>int32 assist = 6;</code>
     * @return The assist.
     */
    int getAssist();

    /**
     * <pre>
     * 段位ID
     * </pre>
     *
     * <code>int32 rankID = 7;</code>
     * @return The rankID.
     */
    int getRankID();

    /**
     * <pre>
     * elo值
     * </pre>
     *
     * <code>int32 elo = 8;</code>
     * @return The elo.
     */
    int getElo();

    /**
     * <pre>
     * 连续击杀数 
     * </pre>
     *
     * <code>int32 continuekill = 9;</code>
     * @return The continuekill.
     */
    int getContinuekill();

    /**
     * <pre>
     * 击杀塔数
     * </pre>
     *
     * <code>int32 killTower = 10;</code>
     * @return The killTower.
     */
    int getKillTower();

    /**
     * <pre>
     * 击杀野怪数
     * </pre>
     *
     * <code>int32 killMon = 11;</code>
     * @return The killMon.
     */
    int getKillMon();

    /**
     * <pre>
     * 对英雄的伤害
     * </pre>
     *
     * <code>int32 hurtHero = 12;</code>
     * @return The hurtHero.
     */
    int getHurtHero();

    /**
     * <pre>
     * 对塔的伤害
     * </pre>
     *
     * <code>int32 hurtTower = 13;</code>
     * @return The hurtTower.
     */
    int getHurtTower();

    /**
     * <pre>
     * 承受的物理伤害
     * </pre>
     *
     * <code>int32 InjuredAD = 14;</code>
     * @return The injuredAD.
     */
    int getInjuredAD();

    /**
     * <pre>
     * 承受的魔法伤害
     * </pre>
     *
     * <code>int32 InjuredAP = 15;</code>
     * @return The injuredAP.
     */
    int getInjuredAP();

    /**
     * <pre>
     * 双杀次数 
     * </pre>
     *
     * <code>int32 DoubleKill = 16;</code>
     * @return The doubleKill.
     */
    int getDoubleKill();

    /**
     * <pre>
     * 三杀次数
     * </pre>
     *
     * <code>int32 TripleKill = 17;</code>
     * @return The tripleKill.
     */
    int getTripleKill();

    /**
     * <pre>
     * 四杀次数
     * </pre>
     *
     * <code>int32 QuadraKill = 18;</code>
     * @return The quadraKill.
     */
    int getQuadraKill();

    /**
     * <pre>
     * 五杀次数
     * </pre>
     *
     * <code>int32 PentaKill = 19;</code>
     * @return The pentaKill.
     */
    int getPentaKill();

    /**
     * <pre>
     * 对英雄的治疗量
     * </pre>
     *
     * <code>int32 cureHero = 22;</code>
     * @return The cureHero.
     */
    int getCureHero();
  }
  /**
   * Protobuf type {@code shuguang.MsgPlayerStat}
   */
  public static final class MsgPlayerStat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgPlayerStat)
      MsgPlayerStatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgPlayerStat.newBuilder() to construct.
    private MsgPlayerStat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgPlayerStat() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgPlayerStat();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgPlayerStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              gold_ = input.readInt32();
              break;
            }
            case 24: {

              score_ = input.readInt32();
              break;
            }
            case 32: {

              kill_ = input.readInt32();
              break;
            }
            case 40: {

              dead_ = input.readInt32();
              break;
            }
            case 48: {

              assist_ = input.readInt32();
              break;
            }
            case 56: {

              rankID_ = input.readInt32();
              break;
            }
            case 64: {

              elo_ = input.readInt32();
              break;
            }
            case 72: {

              continuekill_ = input.readInt32();
              break;
            }
            case 80: {

              killTower_ = input.readInt32();
              break;
            }
            case 88: {

              killMon_ = input.readInt32();
              break;
            }
            case 96: {

              hurtHero_ = input.readInt32();
              break;
            }
            case 104: {

              hurtTower_ = input.readInt32();
              break;
            }
            case 112: {

              injuredAD_ = input.readInt32();
              break;
            }
            case 120: {

              injuredAP_ = input.readInt32();
              break;
            }
            case 128: {

              doubleKill_ = input.readInt32();
              break;
            }
            case 136: {

              tripleKill_ = input.readInt32();
              break;
            }
            case 144: {

              quadraKill_ = input.readInt32();
              break;
            }
            case 152: {

              pentaKill_ = input.readInt32();
              break;
            }
            case 176: {

              cureHero_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Player.internal_static_shuguang_MsgPlayerStat_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Player.internal_static_shuguang_MsgPlayerStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgPlayerStat.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 对局内唯一ID，用于区分不同玩家或者AI等（必填),玩家账号ID
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int GOLD_FIELD_NUMBER = 2;
    private int gold_;
    /**
     * <pre>
     * 经济  （必填）
     * </pre>
     *
     * <code>int32 gold = 2;</code>
     * @return The gold.
     */
    @Override
    public int getGold() {
      return gold_;
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <pre>
     * 评分  （必填）
     * </pre>
     *
     * <code>int32 score = 3;</code>
     * @return The score.
     */
    @Override
    public int getScore() {
      return score_;
    }

    public static final int KILL_FIELD_NUMBER = 4;
    private int kill_;
    /**
     * <pre>
     * 击杀
     * </pre>
     *
     * <code>int32 kill = 4;</code>
     * @return The kill.
     */
    @Override
    public int getKill() {
      return kill_;
    }

    public static final int DEAD_FIELD_NUMBER = 5;
    private int dead_;
    /**
     * <pre>
     * 死亡
     * </pre>
     *
     * <code>int32 dead = 5;</code>
     * @return The dead.
     */
    @Override
    public int getDead() {
      return dead_;
    }

    public static final int ASSIST_FIELD_NUMBER = 6;
    private int assist_;
    /**
     * <pre>
     * 助攻
     * </pre>
     *
     * <code>int32 assist = 6;</code>
     * @return The assist.
     */
    @Override
    public int getAssist() {
      return assist_;
    }

    public static final int RANKID_FIELD_NUMBER = 7;
    private int rankID_;
    /**
     * <pre>
     * 段位ID
     * </pre>
     *
     * <code>int32 rankID = 7;</code>
     * @return The rankID.
     */
    @Override
    public int getRankID() {
      return rankID_;
    }

    public static final int ELO_FIELD_NUMBER = 8;
    private int elo_;
    /**
     * <pre>
     * elo值
     * </pre>
     *
     * <code>int32 elo = 8;</code>
     * @return The elo.
     */
    @Override
    public int getElo() {
      return elo_;
    }

    public static final int CONTINUEKILL_FIELD_NUMBER = 9;
    private int continuekill_;
    /**
     * <pre>
     * 连续击杀数 
     * </pre>
     *
     * <code>int32 continuekill = 9;</code>
     * @return The continuekill.
     */
    @Override
    public int getContinuekill() {
      return continuekill_;
    }

    public static final int KILLTOWER_FIELD_NUMBER = 10;
    private int killTower_;
    /**
     * <pre>
     * 击杀塔数
     * </pre>
     *
     * <code>int32 killTower = 10;</code>
     * @return The killTower.
     */
    @Override
    public int getKillTower() {
      return killTower_;
    }

    public static final int KILLMON_FIELD_NUMBER = 11;
    private int killMon_;
    /**
     * <pre>
     * 击杀野怪数
     * </pre>
     *
     * <code>int32 killMon = 11;</code>
     * @return The killMon.
     */
    @Override
    public int getKillMon() {
      return killMon_;
    }

    public static final int HURTHERO_FIELD_NUMBER = 12;
    private int hurtHero_;
    /**
     * <pre>
     * 对英雄的伤害
     * </pre>
     *
     * <code>int32 hurtHero = 12;</code>
     * @return The hurtHero.
     */
    @Override
    public int getHurtHero() {
      return hurtHero_;
    }

    public static final int HURTTOWER_FIELD_NUMBER = 13;
    private int hurtTower_;
    /**
     * <pre>
     * 对塔的伤害
     * </pre>
     *
     * <code>int32 hurtTower = 13;</code>
     * @return The hurtTower.
     */
    @Override
    public int getHurtTower() {
      return hurtTower_;
    }

    public static final int INJUREDAD_FIELD_NUMBER = 14;
    private int injuredAD_;
    /**
     * <pre>
     * 承受的物理伤害
     * </pre>
     *
     * <code>int32 InjuredAD = 14;</code>
     * @return The injuredAD.
     */
    @Override
    public int getInjuredAD() {
      return injuredAD_;
    }

    public static final int INJUREDAP_FIELD_NUMBER = 15;
    private int injuredAP_;
    /**
     * <pre>
     * 承受的魔法伤害
     * </pre>
     *
     * <code>int32 InjuredAP = 15;</code>
     * @return The injuredAP.
     */
    @Override
    public int getInjuredAP() {
      return injuredAP_;
    }

    public static final int DOUBLEKILL_FIELD_NUMBER = 16;
    private int doubleKill_;
    /**
     * <pre>
     * 双杀次数 
     * </pre>
     *
     * <code>int32 DoubleKill = 16;</code>
     * @return The doubleKill.
     */
    @Override
    public int getDoubleKill() {
      return doubleKill_;
    }

    public static final int TRIPLEKILL_FIELD_NUMBER = 17;
    private int tripleKill_;
    /**
     * <pre>
     * 三杀次数
     * </pre>
     *
     * <code>int32 TripleKill = 17;</code>
     * @return The tripleKill.
     */
    @Override
    public int getTripleKill() {
      return tripleKill_;
    }

    public static final int QUADRAKILL_FIELD_NUMBER = 18;
    private int quadraKill_;
    /**
     * <pre>
     * 四杀次数
     * </pre>
     *
     * <code>int32 QuadraKill = 18;</code>
     * @return The quadraKill.
     */
    @Override
    public int getQuadraKill() {
      return quadraKill_;
    }

    public static final int PENTAKILL_FIELD_NUMBER = 19;
    private int pentaKill_;
    /**
     * <pre>
     * 五杀次数
     * </pre>
     *
     * <code>int32 PentaKill = 19;</code>
     * @return The pentaKill.
     */
    @Override
    public int getPentaKill() {
      return pentaKill_;
    }

    public static final int CUREHERO_FIELD_NUMBER = 22;
    private int cureHero_;
    /**
     * <pre>
     * 对英雄的治疗量
     * </pre>
     *
     * <code>int32 cureHero = 22;</code>
     * @return The cureHero.
     */
    @Override
    public int getCureHero() {
      return cureHero_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (gold_ != 0) {
        output.writeInt32(2, gold_);
      }
      if (score_ != 0) {
        output.writeInt32(3, score_);
      }
      if (kill_ != 0) {
        output.writeInt32(4, kill_);
      }
      if (dead_ != 0) {
        output.writeInt32(5, dead_);
      }
      if (assist_ != 0) {
        output.writeInt32(6, assist_);
      }
      if (rankID_ != 0) {
        output.writeInt32(7, rankID_);
      }
      if (elo_ != 0) {
        output.writeInt32(8, elo_);
      }
      if (continuekill_ != 0) {
        output.writeInt32(9, continuekill_);
      }
      if (killTower_ != 0) {
        output.writeInt32(10, killTower_);
      }
      if (killMon_ != 0) {
        output.writeInt32(11, killMon_);
      }
      if (hurtHero_ != 0) {
        output.writeInt32(12, hurtHero_);
      }
      if (hurtTower_ != 0) {
        output.writeInt32(13, hurtTower_);
      }
      if (injuredAD_ != 0) {
        output.writeInt32(14, injuredAD_);
      }
      if (injuredAP_ != 0) {
        output.writeInt32(15, injuredAP_);
      }
      if (doubleKill_ != 0) {
        output.writeInt32(16, doubleKill_);
      }
      if (tripleKill_ != 0) {
        output.writeInt32(17, tripleKill_);
      }
      if (quadraKill_ != 0) {
        output.writeInt32(18, quadraKill_);
      }
      if (pentaKill_ != 0) {
        output.writeInt32(19, pentaKill_);
      }
      if (cureHero_ != 0) {
        output.writeInt32(22, cureHero_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (gold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gold_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      if (kill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, kill_);
      }
      if (dead_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dead_);
      }
      if (assist_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, assist_);
      }
      if (rankID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rankID_);
      }
      if (elo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, elo_);
      }
      if (continuekill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, continuekill_);
      }
      if (killTower_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, killTower_);
      }
      if (killMon_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, killMon_);
      }
      if (hurtHero_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, hurtHero_);
      }
      if (hurtTower_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, hurtTower_);
      }
      if (injuredAD_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, injuredAD_);
      }
      if (injuredAP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, injuredAP_);
      }
      if (doubleKill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, doubleKill_);
      }
      if (tripleKill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, tripleKill_);
      }
      if (quadraKill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, quadraKill_);
      }
      if (pentaKill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, pentaKill_);
      }
      if (cureHero_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, cureHero_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgPlayerStat)) {
        return super.equals(obj);
      }
      MsgPlayerStat other = (MsgPlayerStat) obj;

      if (getId()
          != other.getId()) return false;
      if (getGold()
          != other.getGold()) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getKill()
          != other.getKill()) return false;
      if (getDead()
          != other.getDead()) return false;
      if (getAssist()
          != other.getAssist()) return false;
      if (getRankID()
          != other.getRankID()) return false;
      if (getElo()
          != other.getElo()) return false;
      if (getContinuekill()
          != other.getContinuekill()) return false;
      if (getKillTower()
          != other.getKillTower()) return false;
      if (getKillMon()
          != other.getKillMon()) return false;
      if (getHurtHero()
          != other.getHurtHero()) return false;
      if (getHurtTower()
          != other.getHurtTower()) return false;
      if (getInjuredAD()
          != other.getInjuredAD()) return false;
      if (getInjuredAP()
          != other.getInjuredAP()) return false;
      if (getDoubleKill()
          != other.getDoubleKill()) return false;
      if (getTripleKill()
          != other.getTripleKill()) return false;
      if (getQuadraKill()
          != other.getQuadraKill()) return false;
      if (getPentaKill()
          != other.getPentaKill()) return false;
      if (getCureHero()
          != other.getCureHero()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + GOLD_FIELD_NUMBER;
      hash = (53 * hash) + getGold();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + KILL_FIELD_NUMBER;
      hash = (53 * hash) + getKill();
      hash = (37 * hash) + DEAD_FIELD_NUMBER;
      hash = (53 * hash) + getDead();
      hash = (37 * hash) + ASSIST_FIELD_NUMBER;
      hash = (53 * hash) + getAssist();
      hash = (37 * hash) + RANKID_FIELD_NUMBER;
      hash = (53 * hash) + getRankID();
      hash = (37 * hash) + ELO_FIELD_NUMBER;
      hash = (53 * hash) + getElo();
      hash = (37 * hash) + CONTINUEKILL_FIELD_NUMBER;
      hash = (53 * hash) + getContinuekill();
      hash = (37 * hash) + KILLTOWER_FIELD_NUMBER;
      hash = (53 * hash) + getKillTower();
      hash = (37 * hash) + KILLMON_FIELD_NUMBER;
      hash = (53 * hash) + getKillMon();
      hash = (37 * hash) + HURTHERO_FIELD_NUMBER;
      hash = (53 * hash) + getHurtHero();
      hash = (37 * hash) + HURTTOWER_FIELD_NUMBER;
      hash = (53 * hash) + getHurtTower();
      hash = (37 * hash) + INJUREDAD_FIELD_NUMBER;
      hash = (53 * hash) + getInjuredAD();
      hash = (37 * hash) + INJUREDAP_FIELD_NUMBER;
      hash = (53 * hash) + getInjuredAP();
      hash = (37 * hash) + DOUBLEKILL_FIELD_NUMBER;
      hash = (53 * hash) + getDoubleKill();
      hash = (37 * hash) + TRIPLEKILL_FIELD_NUMBER;
      hash = (53 * hash) + getTripleKill();
      hash = (37 * hash) + QUADRAKILL_FIELD_NUMBER;
      hash = (53 * hash) + getQuadraKill();
      hash = (37 * hash) + PENTAKILL_FIELD_NUMBER;
      hash = (53 * hash) + getPentaKill();
      hash = (37 * hash) + CUREHERO_FIELD_NUMBER;
      hash = (53 * hash) + getCureHero();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgPlayerStat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayerStat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayerStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayerStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayerStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgPlayerStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgPlayerStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgPlayerStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgPlayerStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgPlayerStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgPlayerStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgPlayerStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgPlayerStat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgPlayerStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgPlayerStat)
        MsgPlayerStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Player.internal_static_shuguang_MsgPlayerStat_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Player.internal_static_shuguang_MsgPlayerStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgPlayerStat.class, Builder.class);
      }

      // Construct using cn.jj.simulation.pb_new.Player.MsgPlayerStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        gold_ = 0;

        score_ = 0;

        kill_ = 0;

        dead_ = 0;

        assist_ = 0;

        rankID_ = 0;

        elo_ = 0;

        continuekill_ = 0;

        killTower_ = 0;

        killMon_ = 0;

        hurtHero_ = 0;

        hurtTower_ = 0;

        injuredAD_ = 0;

        injuredAP_ = 0;

        doubleKill_ = 0;

        tripleKill_ = 0;

        quadraKill_ = 0;

        pentaKill_ = 0;

        cureHero_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Player.internal_static_shuguang_MsgPlayerStat_descriptor;
      }

      @Override
      public MsgPlayerStat getDefaultInstanceForType() {
        return MsgPlayerStat.getDefaultInstance();
      }

      @Override
      public MsgPlayerStat build() {
        MsgPlayerStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgPlayerStat buildPartial() {
        MsgPlayerStat result = new MsgPlayerStat(this);
        result.id_ = id_;
        result.gold_ = gold_;
        result.score_ = score_;
        result.kill_ = kill_;
        result.dead_ = dead_;
        result.assist_ = assist_;
        result.rankID_ = rankID_;
        result.elo_ = elo_;
        result.continuekill_ = continuekill_;
        result.killTower_ = killTower_;
        result.killMon_ = killMon_;
        result.hurtHero_ = hurtHero_;
        result.hurtTower_ = hurtTower_;
        result.injuredAD_ = injuredAD_;
        result.injuredAP_ = injuredAP_;
        result.doubleKill_ = doubleKill_;
        result.tripleKill_ = tripleKill_;
        result.quadraKill_ = quadraKill_;
        result.pentaKill_ = pentaKill_;
        result.cureHero_ = cureHero_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgPlayerStat) {
          return mergeFrom((MsgPlayerStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgPlayerStat other) {
        if (other == MsgPlayerStat.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getGold() != 0) {
          setGold(other.getGold());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getKill() != 0) {
          setKill(other.getKill());
        }
        if (other.getDead() != 0) {
          setDead(other.getDead());
        }
        if (other.getAssist() != 0) {
          setAssist(other.getAssist());
        }
        if (other.getRankID() != 0) {
          setRankID(other.getRankID());
        }
        if (other.getElo() != 0) {
          setElo(other.getElo());
        }
        if (other.getContinuekill() != 0) {
          setContinuekill(other.getContinuekill());
        }
        if (other.getKillTower() != 0) {
          setKillTower(other.getKillTower());
        }
        if (other.getKillMon() != 0) {
          setKillMon(other.getKillMon());
        }
        if (other.getHurtHero() != 0) {
          setHurtHero(other.getHurtHero());
        }
        if (other.getHurtTower() != 0) {
          setHurtTower(other.getHurtTower());
        }
        if (other.getInjuredAD() != 0) {
          setInjuredAD(other.getInjuredAD());
        }
        if (other.getInjuredAP() != 0) {
          setInjuredAP(other.getInjuredAP());
        }
        if (other.getDoubleKill() != 0) {
          setDoubleKill(other.getDoubleKill());
        }
        if (other.getTripleKill() != 0) {
          setTripleKill(other.getTripleKill());
        }
        if (other.getQuadraKill() != 0) {
          setQuadraKill(other.getQuadraKill());
        }
        if (other.getPentaKill() != 0) {
          setPentaKill(other.getPentaKill());
        }
        if (other.getCureHero() != 0) {
          setCureHero(other.getCureHero());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgPlayerStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgPlayerStat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * 对局内唯一ID，用于区分不同玩家或者AI等（必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 对局内唯一ID，用于区分不同玩家或者AI等（必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对局内唯一ID，用于区分不同玩家或者AI等（必填),玩家账号ID
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int gold_ ;
      /**
       * <pre>
       * 经济  （必填）
       * </pre>
       *
       * <code>int32 gold = 2;</code>
       * @return The gold.
       */
      @Override
      public int getGold() {
        return gold_;
      }
      /**
       * <pre>
       * 经济  （必填）
       * </pre>
       *
       * <code>int32 gold = 2;</code>
       * @param value The gold to set.
       * @return This builder for chaining.
       */
      public Builder setGold(int value) {
        
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 经济  （必填）
       * </pre>
       *
       * <code>int32 gold = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGold() {
        
        gold_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 3;</code>
       * @return The score.
       */
      @Override
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 3;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 评分  （必填）
       * </pre>
       *
       * <code>int32 score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int kill_ ;
      /**
       * <pre>
       * 击杀
       * </pre>
       *
       * <code>int32 kill = 4;</code>
       * @return The kill.
       */
      @Override
      public int getKill() {
        return kill_;
      }
      /**
       * <pre>
       * 击杀
       * </pre>
       *
       * <code>int32 kill = 4;</code>
       * @param value The kill to set.
       * @return This builder for chaining.
       */
      public Builder setKill(int value) {
        
        kill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 击杀
       * </pre>
       *
       * <code>int32 kill = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKill() {
        
        kill_ = 0;
        onChanged();
        return this;
      }

      private int dead_ ;
      /**
       * <pre>
       * 死亡
       * </pre>
       *
       * <code>int32 dead = 5;</code>
       * @return The dead.
       */
      @Override
      public int getDead() {
        return dead_;
      }
      /**
       * <pre>
       * 死亡
       * </pre>
       *
       * <code>int32 dead = 5;</code>
       * @param value The dead to set.
       * @return This builder for chaining.
       */
      public Builder setDead(int value) {
        
        dead_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 死亡
       * </pre>
       *
       * <code>int32 dead = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDead() {
        
        dead_ = 0;
        onChanged();
        return this;
      }

      private int assist_ ;
      /**
       * <pre>
       * 助攻
       * </pre>
       *
       * <code>int32 assist = 6;</code>
       * @return The assist.
       */
      @Override
      public int getAssist() {
        return assist_;
      }
      /**
       * <pre>
       * 助攻
       * </pre>
       *
       * <code>int32 assist = 6;</code>
       * @param value The assist to set.
       * @return This builder for chaining.
       */
      public Builder setAssist(int value) {
        
        assist_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 助攻
       * </pre>
       *
       * <code>int32 assist = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssist() {
        
        assist_ = 0;
        onChanged();
        return this;
      }

      private int rankID_ ;
      /**
       * <pre>
       * 段位ID
       * </pre>
       *
       * <code>int32 rankID = 7;</code>
       * @return The rankID.
       */
      @Override
      public int getRankID() {
        return rankID_;
      }
      /**
       * <pre>
       * 段位ID
       * </pre>
       *
       * <code>int32 rankID = 7;</code>
       * @param value The rankID to set.
       * @return This builder for chaining.
       */
      public Builder setRankID(int value) {
        
        rankID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 段位ID
       * </pre>
       *
       * <code>int32 rankID = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRankID() {
        
        rankID_ = 0;
        onChanged();
        return this;
      }

      private int elo_ ;
      /**
       * <pre>
       * elo值
       * </pre>
       *
       * <code>int32 elo = 8;</code>
       * @return The elo.
       */
      @Override
      public int getElo() {
        return elo_;
      }
      /**
       * <pre>
       * elo值
       * </pre>
       *
       * <code>int32 elo = 8;</code>
       * @param value The elo to set.
       * @return This builder for chaining.
       */
      public Builder setElo(int value) {
        
        elo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * elo值
       * </pre>
       *
       * <code>int32 elo = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearElo() {
        
        elo_ = 0;
        onChanged();
        return this;
      }

      private int continuekill_ ;
      /**
       * <pre>
       * 连续击杀数 
       * </pre>
       *
       * <code>int32 continuekill = 9;</code>
       * @return The continuekill.
       */
      @Override
      public int getContinuekill() {
        return continuekill_;
      }
      /**
       * <pre>
       * 连续击杀数 
       * </pre>
       *
       * <code>int32 continuekill = 9;</code>
       * @param value The continuekill to set.
       * @return This builder for chaining.
       */
      public Builder setContinuekill(int value) {
        
        continuekill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 连续击杀数 
       * </pre>
       *
       * <code>int32 continuekill = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearContinuekill() {
        
        continuekill_ = 0;
        onChanged();
        return this;
      }

      private int killTower_ ;
      /**
       * <pre>
       * 击杀塔数
       * </pre>
       *
       * <code>int32 killTower = 10;</code>
       * @return The killTower.
       */
      @Override
      public int getKillTower() {
        return killTower_;
      }
      /**
       * <pre>
       * 击杀塔数
       * </pre>
       *
       * <code>int32 killTower = 10;</code>
       * @param value The killTower to set.
       * @return This builder for chaining.
       */
      public Builder setKillTower(int value) {
        
        killTower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 击杀塔数
       * </pre>
       *
       * <code>int32 killTower = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKillTower() {
        
        killTower_ = 0;
        onChanged();
        return this;
      }

      private int killMon_ ;
      /**
       * <pre>
       * 击杀野怪数
       * </pre>
       *
       * <code>int32 killMon = 11;</code>
       * @return The killMon.
       */
      @Override
      public int getKillMon() {
        return killMon_;
      }
      /**
       * <pre>
       * 击杀野怪数
       * </pre>
       *
       * <code>int32 killMon = 11;</code>
       * @param value The killMon to set.
       * @return This builder for chaining.
       */
      public Builder setKillMon(int value) {
        
        killMon_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 击杀野怪数
       * </pre>
       *
       * <code>int32 killMon = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearKillMon() {
        
        killMon_ = 0;
        onChanged();
        return this;
      }

      private int hurtHero_ ;
      /**
       * <pre>
       * 对英雄的伤害
       * </pre>
       *
       * <code>int32 hurtHero = 12;</code>
       * @return The hurtHero.
       */
      @Override
      public int getHurtHero() {
        return hurtHero_;
      }
      /**
       * <pre>
       * 对英雄的伤害
       * </pre>
       *
       * <code>int32 hurtHero = 12;</code>
       * @param value The hurtHero to set.
       * @return This builder for chaining.
       */
      public Builder setHurtHero(int value) {
        
        hurtHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对英雄的伤害
       * </pre>
       *
       * <code>int32 hurtHero = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHurtHero() {
        
        hurtHero_ = 0;
        onChanged();
        return this;
      }

      private int hurtTower_ ;
      /**
       * <pre>
       * 对塔的伤害
       * </pre>
       *
       * <code>int32 hurtTower = 13;</code>
       * @return The hurtTower.
       */
      @Override
      public int getHurtTower() {
        return hurtTower_;
      }
      /**
       * <pre>
       * 对塔的伤害
       * </pre>
       *
       * <code>int32 hurtTower = 13;</code>
       * @param value The hurtTower to set.
       * @return This builder for chaining.
       */
      public Builder setHurtTower(int value) {
        
        hurtTower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对塔的伤害
       * </pre>
       *
       * <code>int32 hurtTower = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearHurtTower() {
        
        hurtTower_ = 0;
        onChanged();
        return this;
      }

      private int injuredAD_ ;
      /**
       * <pre>
       * 承受的物理伤害
       * </pre>
       *
       * <code>int32 InjuredAD = 14;</code>
       * @return The injuredAD.
       */
      @Override
      public int getInjuredAD() {
        return injuredAD_;
      }
      /**
       * <pre>
       * 承受的物理伤害
       * </pre>
       *
       * <code>int32 InjuredAD = 14;</code>
       * @param value The injuredAD to set.
       * @return This builder for chaining.
       */
      public Builder setInjuredAD(int value) {
        
        injuredAD_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 承受的物理伤害
       * </pre>
       *
       * <code>int32 InjuredAD = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearInjuredAD() {
        
        injuredAD_ = 0;
        onChanged();
        return this;
      }

      private int injuredAP_ ;
      /**
       * <pre>
       * 承受的魔法伤害
       * </pre>
       *
       * <code>int32 InjuredAP = 15;</code>
       * @return The injuredAP.
       */
      @Override
      public int getInjuredAP() {
        return injuredAP_;
      }
      /**
       * <pre>
       * 承受的魔法伤害
       * </pre>
       *
       * <code>int32 InjuredAP = 15;</code>
       * @param value The injuredAP to set.
       * @return This builder for chaining.
       */
      public Builder setInjuredAP(int value) {
        
        injuredAP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 承受的魔法伤害
       * </pre>
       *
       * <code>int32 InjuredAP = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearInjuredAP() {
        
        injuredAP_ = 0;
        onChanged();
        return this;
      }

      private int doubleKill_ ;
      /**
       * <pre>
       * 双杀次数 
       * </pre>
       *
       * <code>int32 DoubleKill = 16;</code>
       * @return The doubleKill.
       */
      @Override
      public int getDoubleKill() {
        return doubleKill_;
      }
      /**
       * <pre>
       * 双杀次数 
       * </pre>
       *
       * <code>int32 DoubleKill = 16;</code>
       * @param value The doubleKill to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleKill(int value) {
        
        doubleKill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 双杀次数 
       * </pre>
       *
       * <code>int32 DoubleKill = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleKill() {
        
        doubleKill_ = 0;
        onChanged();
        return this;
      }

      private int tripleKill_ ;
      /**
       * <pre>
       * 三杀次数
       * </pre>
       *
       * <code>int32 TripleKill = 17;</code>
       * @return The tripleKill.
       */
      @Override
      public int getTripleKill() {
        return tripleKill_;
      }
      /**
       * <pre>
       * 三杀次数
       * </pre>
       *
       * <code>int32 TripleKill = 17;</code>
       * @param value The tripleKill to set.
       * @return This builder for chaining.
       */
      public Builder setTripleKill(int value) {
        
        tripleKill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 三杀次数
       * </pre>
       *
       * <code>int32 TripleKill = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearTripleKill() {
        
        tripleKill_ = 0;
        onChanged();
        return this;
      }

      private int quadraKill_ ;
      /**
       * <pre>
       * 四杀次数
       * </pre>
       *
       * <code>int32 QuadraKill = 18;</code>
       * @return The quadraKill.
       */
      @Override
      public int getQuadraKill() {
        return quadraKill_;
      }
      /**
       * <pre>
       * 四杀次数
       * </pre>
       *
       * <code>int32 QuadraKill = 18;</code>
       * @param value The quadraKill to set.
       * @return This builder for chaining.
       */
      public Builder setQuadraKill(int value) {
        
        quadraKill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 四杀次数
       * </pre>
       *
       * <code>int32 QuadraKill = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuadraKill() {
        
        quadraKill_ = 0;
        onChanged();
        return this;
      }

      private int pentaKill_ ;
      /**
       * <pre>
       * 五杀次数
       * </pre>
       *
       * <code>int32 PentaKill = 19;</code>
       * @return The pentaKill.
       */
      @Override
      public int getPentaKill() {
        return pentaKill_;
      }
      /**
       * <pre>
       * 五杀次数
       * </pre>
       *
       * <code>int32 PentaKill = 19;</code>
       * @param value The pentaKill to set.
       * @return This builder for chaining.
       */
      public Builder setPentaKill(int value) {
        
        pentaKill_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 五杀次数
       * </pre>
       *
       * <code>int32 PentaKill = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearPentaKill() {
        
        pentaKill_ = 0;
        onChanged();
        return this;
      }

      private int cureHero_ ;
      /**
       * <pre>
       * 对英雄的治疗量
       * </pre>
       *
       * <code>int32 cureHero = 22;</code>
       * @return The cureHero.
       */
      @Override
      public int getCureHero() {
        return cureHero_;
      }
      /**
       * <pre>
       * 对英雄的治疗量
       * </pre>
       *
       * <code>int32 cureHero = 22;</code>
       * @param value The cureHero to set.
       * @return This builder for chaining.
       */
      public Builder setCureHero(int value) {
        
        cureHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对英雄的治疗量
       * </pre>
       *
       * <code>int32 cureHero = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearCureHero() {
        
        cureHero_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgPlayerStat)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgPlayerStat)
    private static final MsgPlayerStat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgPlayerStat();
    }

    public static MsgPlayerStat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgPlayerStat>
        PARSER = new com.google.protobuf.AbstractParser<MsgPlayerStat>() {
      @Override
      public MsgPlayerStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgPlayerStat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgPlayerStat> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgPlayerStat> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgPlayerStat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgPlayerStat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgPlayerStat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014player.proto\022\010shuguang\"\207\001\n\tMsgPlayer\022\n" +
      "\n\002Id\030\001 \001(\003\022\016\n\006heroId\030\002 \001(\005\022\016\n\006raceId\030\003 \001" +
      "(\005\022\017\n\007account\030\004 \001(\003\022\r\n\005level\030\005 \001(\005\022\013\n\003el" +
      "o\030\007 \001(\005\022\r\n\005score\030\010 \001(\005\022\022\n\ndifficulty\030\t \001" +
      "(\005\"\347\002\n\rMsgPlayerStat\022\n\n\002Id\030\001 \001(\003\022\014\n\004gold" +
      "\030\002 \001(\005\022\r\n\005score\030\003 \001(\005\022\014\n\004kill\030\004 \001(\005\022\014\n\004d" +
      "ead\030\005 \001(\005\022\016\n\006assist\030\006 \001(\005\022\016\n\006rankID\030\007 \001(" +
      "\005\022\013\n\003elo\030\010 \001(\005\022\024\n\014continuekill\030\t \001(\005\022\021\n\t" +
      "killTower\030\n \001(\005\022\017\n\007killMon\030\013 \001(\005\022\020\n\010hurt" +
      "Hero\030\014 \001(\005\022\021\n\thurtTower\030\r \001(\005\022\021\n\tInjured" +
      "AD\030\016 \001(\005\022\021\n\tInjuredAP\030\017 \001(\005\022\022\n\nDoubleKil" +
      "l\030\020 \001(\005\022\022\n\nTripleKill\030\021 \001(\005\022\022\n\nQuadraKil" +
      "l\030\022 \001(\005\022\021\n\tPentaKill\030\023 \001(\005\022\020\n\010cureHero\030\026" +
      " \001(\005B\031\n\027cn.jj.simulation.pb_newb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_shuguang_MsgPlayer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shuguang_MsgPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgPlayer_descriptor,
        new String[] { "Id", "HeroId", "RaceId", "Account", "Level", "Elo", "Score", "Difficulty", });
    internal_static_shuguang_MsgPlayerStat_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_shuguang_MsgPlayerStat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgPlayerStat_descriptor,
        new String[] { "Id", "Gold", "Score", "Kill", "Dead", "Assist", "RankID", "Elo", "Continuekill", "KillTower", "KillMon", "HurtHero", "HurtTower", "InjuredAD", "InjuredAP", "DoubleKill", "TripleKill", "QuadraKill", "PentaKill", "CureHero", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
