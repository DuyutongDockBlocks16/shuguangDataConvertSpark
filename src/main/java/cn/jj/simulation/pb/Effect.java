// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: effect.proto

package cn.jj.simulation.pb;

public final class Effect {
  private Effect() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgEffectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:shuguang.MsgEffect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 局内唯一的ID(必填)
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * 释放该效果的角色的阵营
     * </pre>
     *
     * <code>int32 campId = 2;</code>
     * @return The campId.
     */
    int getCampId();

    /**
     * <pre>
     * 类型 （特效类型：减速，伤害，控制）
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>int32 posX = 4;</code>
     * @return The posX.
     */
    int getPosX();

    /**
     * <code>int32 posY = 5;</code>
     * @return The posY.
     */
    int getPosY();

    /**
     * <pre>
     * 形状类型(圆形，矩形，扇形等)
     * </pre>
     *
     * <code>int32 shapeType = 6;</code>
     * @return The shapeType.
     */
    int getShapeType();

    /**
     * <pre>
     * 圆半径
     * </pre>
     *
     * <code>int32 radius = 7;</code>
     * @return The radius.
     */
    int getRadius();

    /**
     * <pre>
     * 扇形角度
     * </pre>
     *
     * <code>int32 angle = 8;</code>
     * @return The angle.
     */
    int getAngle();

    /**
     * <code>int32 degreeX = 9;</code>
     * @return The degreeX.
     */
    int getDegreeX();

    /**
     * <code>int32 degreeY = 10;</code>
     * @return The degreeY.
     */
    int getDegreeY();

    /**
     * <pre>
     * 矩形长
     * </pre>
     *
     * <code>int32 length = 11;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <pre>
     * 矩形宽
     * </pre>
     *
     * <code>int32 width = 12;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <pre>
     * 效果ID
     * </pre>
     *
     * <code>int64 effectId = 13;</code>
     * @return The effectId.
     */
    long getEffectId();

    /**
     * <pre>
     * 所属角色的唯一id
     * </pre>
     *
     * <code>int64 ownerId = 14;</code>
     * @return The ownerId.
     */
    long getOwnerId();
  }
  /**
   * Protobuf type {@code shuguang.MsgEffect}
   */
  public static final class MsgEffect extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:shuguang.MsgEffect)
      MsgEffectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgEffect.newBuilder() to construct.
    private MsgEffect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgEffect() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgEffect();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgEffect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              campId_ = input.readInt32();
              break;
            }
            case 24: {

              type_ = input.readInt32();
              break;
            }
            case 32: {

              posX_ = input.readInt32();
              break;
            }
            case 40: {

              posY_ = input.readInt32();
              break;
            }
            case 48: {

              shapeType_ = input.readInt32();
              break;
            }
            case 56: {

              radius_ = input.readInt32();
              break;
            }
            case 64: {

              angle_ = input.readInt32();
              break;
            }
            case 72: {

              degreeX_ = input.readInt32();
              break;
            }
            case 80: {

              degreeY_ = input.readInt32();
              break;
            }
            case 88: {

              length_ = input.readInt32();
              break;
            }
            case 96: {

              width_ = input.readInt32();
              break;
            }
            case 104: {

              effectId_ = input.readInt64();
              break;
            }
            case 112: {

              ownerId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Effect.internal_static_shuguang_MsgEffect_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Effect.internal_static_shuguang_MsgEffect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgEffect.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * 局内唯一的ID(必填)
     * </pre>
     *
     * <code>int64 Id = 1;</code>
     * @return The id.
     */
    @Override
    public long getId() {
      return id_;
    }

    public static final int CAMPID_FIELD_NUMBER = 2;
    private int campId_;
    /**
     * <pre>
     * 释放该效果的角色的阵营
     * </pre>
     *
     * <code>int32 campId = 2;</code>
     * @return The campId.
     */
    @Override
    public int getCampId() {
      return campId_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * 类型 （特效类型：减速，伤害，控制）
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int POSX_FIELD_NUMBER = 4;
    private int posX_;
    /**
     * <code>int32 posX = 4;</code>
     * @return The posX.
     */
    @Override
    public int getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 5;
    private int posY_;
    /**
     * <code>int32 posY = 5;</code>
     * @return The posY.
     */
    @Override
    public int getPosY() {
      return posY_;
    }

    public static final int SHAPETYPE_FIELD_NUMBER = 6;
    private int shapeType_;
    /**
     * <pre>
     * 形状类型(圆形，矩形，扇形等)
     * </pre>
     *
     * <code>int32 shapeType = 6;</code>
     * @return The shapeType.
     */
    @Override
    public int getShapeType() {
      return shapeType_;
    }

    public static final int RADIUS_FIELD_NUMBER = 7;
    private int radius_;
    /**
     * <pre>
     * 圆半径
     * </pre>
     *
     * <code>int32 radius = 7;</code>
     * @return The radius.
     */
    @Override
    public int getRadius() {
      return radius_;
    }

    public static final int ANGLE_FIELD_NUMBER = 8;
    private int angle_;
    /**
     * <pre>
     * 扇形角度
     * </pre>
     *
     * <code>int32 angle = 8;</code>
     * @return The angle.
     */
    @Override
    public int getAngle() {
      return angle_;
    }

    public static final int DEGREEX_FIELD_NUMBER = 9;
    private int degreeX_;
    /**
     * <code>int32 degreeX = 9;</code>
     * @return The degreeX.
     */
    @Override
    public int getDegreeX() {
      return degreeX_;
    }

    public static final int DEGREEY_FIELD_NUMBER = 10;
    private int degreeY_;
    /**
     * <code>int32 degreeY = 10;</code>
     * @return The degreeY.
     */
    @Override
    public int getDegreeY() {
      return degreeY_;
    }

    public static final int LENGTH_FIELD_NUMBER = 11;
    private int length_;
    /**
     * <pre>
     * 矩形长
     * </pre>
     *
     * <code>int32 length = 11;</code>
     * @return The length.
     */
    @Override
    public int getLength() {
      return length_;
    }

    public static final int WIDTH_FIELD_NUMBER = 12;
    private int width_;
    /**
     * <pre>
     * 矩形宽
     * </pre>
     *
     * <code>int32 width = 12;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }

    public static final int EFFECTID_FIELD_NUMBER = 13;
    private long effectId_;
    /**
     * <pre>
     * 效果ID
     * </pre>
     *
     * <code>int64 effectId = 13;</code>
     * @return The effectId.
     */
    @Override
    public long getEffectId() {
      return effectId_;
    }

    public static final int OWNERID_FIELD_NUMBER = 14;
    private long ownerId_;
    /**
     * <pre>
     * 所属角色的唯一id
     * </pre>
     *
     * <code>int64 ownerId = 14;</code>
     * @return The ownerId.
     */
    @Override
    public long getOwnerId() {
      return ownerId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (campId_ != 0) {
        output.writeInt32(2, campId_);
      }
      if (type_ != 0) {
        output.writeInt32(3, type_);
      }
      if (posX_ != 0) {
        output.writeInt32(4, posX_);
      }
      if (posY_ != 0) {
        output.writeInt32(5, posY_);
      }
      if (shapeType_ != 0) {
        output.writeInt32(6, shapeType_);
      }
      if (radius_ != 0) {
        output.writeInt32(7, radius_);
      }
      if (angle_ != 0) {
        output.writeInt32(8, angle_);
      }
      if (degreeX_ != 0) {
        output.writeInt32(9, degreeX_);
      }
      if (degreeY_ != 0) {
        output.writeInt32(10, degreeY_);
      }
      if (length_ != 0) {
        output.writeInt32(11, length_);
      }
      if (width_ != 0) {
        output.writeInt32(12, width_);
      }
      if (effectId_ != 0L) {
        output.writeInt64(13, effectId_);
      }
      if (ownerId_ != 0L) {
        output.writeInt64(14, ownerId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (campId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, campId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (posX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, posX_);
      }
      if (posY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, posY_);
      }
      if (shapeType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, shapeType_);
      }
      if (radius_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, radius_);
      }
      if (angle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, angle_);
      }
      if (degreeX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, degreeX_);
      }
      if (degreeY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, degreeY_);
      }
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, length_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, width_);
      }
      if (effectId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, effectId_);
      }
      if (ownerId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, ownerId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgEffect)) {
        return super.equals(obj);
      }
      MsgEffect other = (MsgEffect) obj;

      if (getId()
          != other.getId()) return false;
      if (getCampId()
          != other.getCampId()) return false;
      if (getType()
          != other.getType()) return false;
      if (getPosX()
          != other.getPosX()) return false;
      if (getPosY()
          != other.getPosY()) return false;
      if (getShapeType()
          != other.getShapeType()) return false;
      if (getRadius()
          != other.getRadius()) return false;
      if (getAngle()
          != other.getAngle()) return false;
      if (getDegreeX()
          != other.getDegreeX()) return false;
      if (getDegreeY()
          != other.getDegreeY()) return false;
      if (getLength()
          != other.getLength()) return false;
      if (getWidth()
          != other.getWidth()) return false;
      if (getEffectId()
          != other.getEffectId()) return false;
      if (getOwnerId()
          != other.getOwnerId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + CAMPID_FIELD_NUMBER;
      hash = (53 * hash) + getCampId();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
      hash = (37 * hash) + SHAPETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getShapeType();
      hash = (37 * hash) + RADIUS_FIELD_NUMBER;
      hash = (53 * hash) + getRadius();
      hash = (37 * hash) + ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + getAngle();
      hash = (37 * hash) + DEGREEX_FIELD_NUMBER;
      hash = (53 * hash) + getDegreeX();
      hash = (37 * hash) + DEGREEY_FIELD_NUMBER;
      hash = (53 * hash) + getDegreeY();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + EFFECTID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEffectId());
      hash = (37 * hash) + OWNERID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOwnerId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgEffect parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEffect parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEffect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEffect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEffect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgEffect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgEffect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgEffect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgEffect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgEffect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgEffect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgEffect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgEffect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code shuguang.MsgEffect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:shuguang.MsgEffect)
        MsgEffectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Effect.internal_static_shuguang_MsgEffect_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Effect.internal_static_shuguang_MsgEffect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgEffect.class, Builder.class);
      }

      // Construct using cn.jj.shuguang.pb.Effect.MsgEffect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        campId_ = 0;

        type_ = 0;

        posX_ = 0;

        posY_ = 0;

        shapeType_ = 0;

        radius_ = 0;

        angle_ = 0;

        degreeX_ = 0;

        degreeY_ = 0;

        length_ = 0;

        width_ = 0;

        effectId_ = 0L;

        ownerId_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Effect.internal_static_shuguang_MsgEffect_descriptor;
      }

      @Override
      public MsgEffect getDefaultInstanceForType() {
        return MsgEffect.getDefaultInstance();
      }

      @Override
      public MsgEffect build() {
        MsgEffect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MsgEffect buildPartial() {
        MsgEffect result = new MsgEffect(this);
        result.id_ = id_;
        result.campId_ = campId_;
        result.type_ = type_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.shapeType_ = shapeType_;
        result.radius_ = radius_;
        result.angle_ = angle_;
        result.degreeX_ = degreeX_;
        result.degreeY_ = degreeY_;
        result.length_ = length_;
        result.width_ = width_;
        result.effectId_ = effectId_;
        result.ownerId_ = ownerId_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgEffect) {
          return mergeFrom((MsgEffect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgEffect other) {
        if (other == MsgEffect.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getCampId() != 0) {
          setCampId(other.getCampId());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getPosX() != 0) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0) {
          setPosY(other.getPosY());
        }
        if (other.getShapeType() != 0) {
          setShapeType(other.getShapeType());
        }
        if (other.getRadius() != 0) {
          setRadius(other.getRadius());
        }
        if (other.getAngle() != 0) {
          setAngle(other.getAngle());
        }
        if (other.getDegreeX() != 0) {
          setDegreeX(other.getDegreeX());
        }
        if (other.getDegreeY() != 0) {
          setDegreeY(other.getDegreeY());
        }
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getEffectId() != 0L) {
          setEffectId(other.getEffectId());
        }
        if (other.getOwnerId() != 0L) {
          setOwnerId(other.getOwnerId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgEffect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgEffect) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return The id.
       */
      @Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 局内唯一的ID(必填)
       * </pre>
       *
       * <code>int64 Id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int campId_ ;
      /**
       * <pre>
       * 释放该效果的角色的阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @return The campId.
       */
      @Override
      public int getCampId() {
        return campId_;
      }
      /**
       * <pre>
       * 释放该效果的角色的阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @param value The campId to set.
       * @return This builder for chaining.
       */
      public Builder setCampId(int value) {
        
        campId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 释放该效果的角色的阵营
       * </pre>
       *
       * <code>int32 campId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCampId() {
        
        campId_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 类型 （特效类型：减速，伤害，控制）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 类型 （特效类型：减速，伤害，控制）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 类型 （特效类型：减速，伤害，控制）
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int posX_ ;
      /**
       * <code>int32 posX = 4;</code>
       * @return The posX.
       */
      @Override
      public int getPosX() {
        return posX_;
      }
      /**
       * <code>int32 posX = 4;</code>
       * @param value The posX to set.
       * @return This builder for chaining.
       */
      public Builder setPosX(int value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 posX = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosX() {
        
        posX_ = 0;
        onChanged();
        return this;
      }

      private int posY_ ;
      /**
       * <code>int32 posY = 5;</code>
       * @return The posY.
       */
      @Override
      public int getPosY() {
        return posY_;
      }
      /**
       * <code>int32 posY = 5;</code>
       * @param value The posY to set.
       * @return This builder for chaining.
       */
      public Builder setPosY(int value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 posY = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosY() {
        
        posY_ = 0;
        onChanged();
        return this;
      }

      private int shapeType_ ;
      /**
       * <pre>
       * 形状类型(圆形，矩形，扇形等)
       * </pre>
       *
       * <code>int32 shapeType = 6;</code>
       * @return The shapeType.
       */
      @Override
      public int getShapeType() {
        return shapeType_;
      }
      /**
       * <pre>
       * 形状类型(圆形，矩形，扇形等)
       * </pre>
       *
       * <code>int32 shapeType = 6;</code>
       * @param value The shapeType to set.
       * @return This builder for chaining.
       */
      public Builder setShapeType(int value) {
        
        shapeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 形状类型(圆形，矩形，扇形等)
       * </pre>
       *
       * <code>int32 shapeType = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearShapeType() {
        
        shapeType_ = 0;
        onChanged();
        return this;
      }

      private int radius_ ;
      /**
       * <pre>
       * 圆半径
       * </pre>
       *
       * <code>int32 radius = 7;</code>
       * @return The radius.
       */
      @Override
      public int getRadius() {
        return radius_;
      }
      /**
       * <pre>
       * 圆半径
       * </pre>
       *
       * <code>int32 radius = 7;</code>
       * @param value The radius to set.
       * @return This builder for chaining.
       */
      public Builder setRadius(int value) {
        
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 圆半径
       * </pre>
       *
       * <code>int32 radius = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRadius() {
        
        radius_ = 0;
        onChanged();
        return this;
      }

      private int angle_ ;
      /**
       * <pre>
       * 扇形角度
       * </pre>
       *
       * <code>int32 angle = 8;</code>
       * @return The angle.
       */
      @Override
      public int getAngle() {
        return angle_;
      }
      /**
       * <pre>
       * 扇形角度
       * </pre>
       *
       * <code>int32 angle = 8;</code>
       * @param value The angle to set.
       * @return This builder for chaining.
       */
      public Builder setAngle(int value) {
        
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扇形角度
       * </pre>
       *
       * <code>int32 angle = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngle() {
        
        angle_ = 0;
        onChanged();
        return this;
      }

      private int degreeX_ ;
      /**
       * <code>int32 degreeX = 9;</code>
       * @return The degreeX.
       */
      @Override
      public int getDegreeX() {
        return degreeX_;
      }
      /**
       * <code>int32 degreeX = 9;</code>
       * @param value The degreeX to set.
       * @return This builder for chaining.
       */
      public Builder setDegreeX(int value) {
        
        degreeX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 degreeX = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDegreeX() {
        
        degreeX_ = 0;
        onChanged();
        return this;
      }

      private int degreeY_ ;
      /**
       * <code>int32 degreeY = 10;</code>
       * @return The degreeY.
       */
      @Override
      public int getDegreeY() {
        return degreeY_;
      }
      /**
       * <code>int32 degreeY = 10;</code>
       * @param value The degreeY to set.
       * @return This builder for chaining.
       */
      public Builder setDegreeY(int value) {
        
        degreeY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 degreeY = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDegreeY() {
        
        degreeY_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       * 矩形长
       * </pre>
       *
       * <code>int32 length = 11;</code>
       * @return The length.
       */
      @Override
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       * 矩形长
       * </pre>
       *
       * <code>int32 length = 11;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 矩形长
       * </pre>
       *
       * <code>int32 length = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       * 矩形宽
       * </pre>
       *
       * <code>int32 width = 12;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * 矩形宽
       * </pre>
       *
       * <code>int32 width = 12;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 矩形宽
       * </pre>
       *
       * <code>int32 width = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private long effectId_ ;
      /**
       * <pre>
       * 效果ID
       * </pre>
       *
       * <code>int64 effectId = 13;</code>
       * @return The effectId.
       */
      @Override
      public long getEffectId() {
        return effectId_;
      }
      /**
       * <pre>
       * 效果ID
       * </pre>
       *
       * <code>int64 effectId = 13;</code>
       * @param value The effectId to set.
       * @return This builder for chaining.
       */
      public Builder setEffectId(long value) {
        
        effectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 效果ID
       * </pre>
       *
       * <code>int64 effectId = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearEffectId() {
        
        effectId_ = 0L;
        onChanged();
        return this;
      }

      private long ownerId_ ;
      /**
       * <pre>
       * 所属角色的唯一id
       * </pre>
       *
       * <code>int64 ownerId = 14;</code>
       * @return The ownerId.
       */
      @Override
      public long getOwnerId() {
        return ownerId_;
      }
      /**
       * <pre>
       * 所属角色的唯一id
       * </pre>
       *
       * <code>int64 ownerId = 14;</code>
       * @param value The ownerId to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerId(long value) {
        
        ownerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 所属角色的唯一id
       * </pre>
       *
       * <code>int64 ownerId = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerId() {
        
        ownerId_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:shuguang.MsgEffect)
    }

    // @@protoc_insertion_point(class_scope:shuguang.MsgEffect)
    private static final MsgEffect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgEffect();
    }

    public static MsgEffect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgEffect>
        PARSER = new com.google.protobuf.AbstractParser<MsgEffect>() {
      @Override
      public MsgEffect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgEffect(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgEffect> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MsgEffect> getParserForType() {
      return PARSER;
    }

    @Override
    public MsgEffect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_shuguang_MsgEffect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_shuguang_MsgEffect_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014effect.proto\022\010shuguang\"\347\001\n\tMsgEffect\022\n" +
      "\n\002Id\030\001 \001(\003\022\016\n\006campId\030\002 \001(\005\022\014\n\004type\030\003 \001(\005" +
      "\022\014\n\004posX\030\004 \001(\005\022\014\n\004posY\030\005 \001(\005\022\021\n\tshapeTyp" +
      "e\030\006 \001(\005\022\016\n\006radius\030\007 \001(\005\022\r\n\005angle\030\010 \001(\005\022\017" +
      "\n\007degreeX\030\t \001(\005\022\017\n\007degreeY\030\n \001(\005\022\016\n\006leng" +
      "th\030\013 \001(\005\022\r\n\005width\030\014 \001(\005\022\020\n\010effectId\030\r \001(" +
      "\003\022\017\n\007ownerId\030\016 \001(\003B\023\n\021cn.jj.shuguang.pbb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_shuguang_MsgEffect_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_shuguang_MsgEffect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_shuguang_MsgEffect_descriptor,
        new String[] { "Id", "CampId", "Type", "PosX", "PosY", "ShapeType", "Radius", "Angle", "DegreeX", "DegreeY", "Length", "Width", "EffectId", "OwnerId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
